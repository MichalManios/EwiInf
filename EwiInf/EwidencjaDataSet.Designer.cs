//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EwiInf {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EwidencjaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EwidencjaDataSet : global::System.Data.DataSet {
        
        private EwiDataTable tableEwi;
        
        private HistoryDataTable tableHistory;
        
        private KartaDataTable tableKarta;
        
        private Karta_konserwacjaDataTable tableKarta_konserwacja;
        
        private Karta_naprawyDataTable tableKarta_naprawy;
        
        private Ewidencja_STDataTable tableEwidencja_ST;
        
        private Ewidencja_ponizejDataTable tableEwidencja_ponizej;
        
        private Ewidencja_powyzejDataTable tableEwidencja_powyzej;
        
        private PonizejStanOtwarciaDataTable tablePonizejStanOtwarcia;
        
        private PowyzejStanOtwarciaDataTable tablePowyzejStanOtwarcia;
        
        private StanOtwarciaSTDataTable tableStanOtwarciaST;
        
        private FakturyDataTable tableFaktury;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public EwidencjaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected EwidencjaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Ewi"] != null)) {
                    base.Tables.Add(new EwiDataTable(ds.Tables["Ewi"]));
                }
                if ((ds.Tables["History"] != null)) {
                    base.Tables.Add(new HistoryDataTable(ds.Tables["History"]));
                }
                if ((ds.Tables["Karta"] != null)) {
                    base.Tables.Add(new KartaDataTable(ds.Tables["Karta"]));
                }
                if ((ds.Tables["Karta_konserwacja"] != null)) {
                    base.Tables.Add(new Karta_konserwacjaDataTable(ds.Tables["Karta_konserwacja"]));
                }
                if ((ds.Tables["Karta_naprawy"] != null)) {
                    base.Tables.Add(new Karta_naprawyDataTable(ds.Tables["Karta_naprawy"]));
                }
                if ((ds.Tables["Ewidencja_ST"] != null)) {
                    base.Tables.Add(new Ewidencja_STDataTable(ds.Tables["Ewidencja_ST"]));
                }
                if ((ds.Tables["Ewidencja_ponizej"] != null)) {
                    base.Tables.Add(new Ewidencja_ponizejDataTable(ds.Tables["Ewidencja_ponizej"]));
                }
                if ((ds.Tables["Ewidencja_powyzej"] != null)) {
                    base.Tables.Add(new Ewidencja_powyzejDataTable(ds.Tables["Ewidencja_powyzej"]));
                }
                if ((ds.Tables["PonizejStanOtwarcia"] != null)) {
                    base.Tables.Add(new PonizejStanOtwarciaDataTable(ds.Tables["PonizejStanOtwarcia"]));
                }
                if ((ds.Tables["PowyzejStanOtwarcia"] != null)) {
                    base.Tables.Add(new PowyzejStanOtwarciaDataTable(ds.Tables["PowyzejStanOtwarcia"]));
                }
                if ((ds.Tables["StanOtwarciaST"] != null)) {
                    base.Tables.Add(new StanOtwarciaSTDataTable(ds.Tables["StanOtwarciaST"]));
                }
                if ((ds.Tables["Faktury"] != null)) {
                    base.Tables.Add(new FakturyDataTable(ds.Tables["Faktury"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EwiDataTable Ewi {
            get {
                return this.tableEwi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistoryDataTable History {
            get {
                return this.tableHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KartaDataTable Karta {
            get {
                return this.tableKarta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Karta_konserwacjaDataTable Karta_konserwacja {
            get {
                return this.tableKarta_konserwacja;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Karta_naprawyDataTable Karta_naprawy {
            get {
                return this.tableKarta_naprawy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ewidencja_STDataTable Ewidencja_ST {
            get {
                return this.tableEwidencja_ST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ewidencja_ponizejDataTable Ewidencja_ponizej {
            get {
                return this.tableEwidencja_ponizej;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ewidencja_powyzejDataTable Ewidencja_powyzej {
            get {
                return this.tableEwidencja_powyzej;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PonizejStanOtwarciaDataTable PonizejStanOtwarcia {
            get {
                return this.tablePonizejStanOtwarcia;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PowyzejStanOtwarciaDataTable PowyzejStanOtwarcia {
            get {
                return this.tablePowyzejStanOtwarcia;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StanOtwarciaSTDataTable StanOtwarciaST {
            get {
                return this.tableStanOtwarciaST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FakturyDataTable Faktury {
            get {
                return this.tableFaktury;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            EwidencjaDataSet cln = ((EwidencjaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Ewi"] != null)) {
                    base.Tables.Add(new EwiDataTable(ds.Tables["Ewi"]));
                }
                if ((ds.Tables["History"] != null)) {
                    base.Tables.Add(new HistoryDataTable(ds.Tables["History"]));
                }
                if ((ds.Tables["Karta"] != null)) {
                    base.Tables.Add(new KartaDataTable(ds.Tables["Karta"]));
                }
                if ((ds.Tables["Karta_konserwacja"] != null)) {
                    base.Tables.Add(new Karta_konserwacjaDataTable(ds.Tables["Karta_konserwacja"]));
                }
                if ((ds.Tables["Karta_naprawy"] != null)) {
                    base.Tables.Add(new Karta_naprawyDataTable(ds.Tables["Karta_naprawy"]));
                }
                if ((ds.Tables["Ewidencja_ST"] != null)) {
                    base.Tables.Add(new Ewidencja_STDataTable(ds.Tables["Ewidencja_ST"]));
                }
                if ((ds.Tables["Ewidencja_ponizej"] != null)) {
                    base.Tables.Add(new Ewidencja_ponizejDataTable(ds.Tables["Ewidencja_ponizej"]));
                }
                if ((ds.Tables["Ewidencja_powyzej"] != null)) {
                    base.Tables.Add(new Ewidencja_powyzejDataTable(ds.Tables["Ewidencja_powyzej"]));
                }
                if ((ds.Tables["PonizejStanOtwarcia"] != null)) {
                    base.Tables.Add(new PonizejStanOtwarciaDataTable(ds.Tables["PonizejStanOtwarcia"]));
                }
                if ((ds.Tables["PowyzejStanOtwarcia"] != null)) {
                    base.Tables.Add(new PowyzejStanOtwarciaDataTable(ds.Tables["PowyzejStanOtwarcia"]));
                }
                if ((ds.Tables["StanOtwarciaST"] != null)) {
                    base.Tables.Add(new StanOtwarciaSTDataTable(ds.Tables["StanOtwarciaST"]));
                }
                if ((ds.Tables["Faktury"] != null)) {
                    base.Tables.Add(new FakturyDataTable(ds.Tables["Faktury"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEwi = ((EwiDataTable)(base.Tables["Ewi"]));
            if ((initTable == true)) {
                if ((this.tableEwi != null)) {
                    this.tableEwi.InitVars();
                }
            }
            this.tableHistory = ((HistoryDataTable)(base.Tables["History"]));
            if ((initTable == true)) {
                if ((this.tableHistory != null)) {
                    this.tableHistory.InitVars();
                }
            }
            this.tableKarta = ((KartaDataTable)(base.Tables["Karta"]));
            if ((initTable == true)) {
                if ((this.tableKarta != null)) {
                    this.tableKarta.InitVars();
                }
            }
            this.tableKarta_konserwacja = ((Karta_konserwacjaDataTable)(base.Tables["Karta_konserwacja"]));
            if ((initTable == true)) {
                if ((this.tableKarta_konserwacja != null)) {
                    this.tableKarta_konserwacja.InitVars();
                }
            }
            this.tableKarta_naprawy = ((Karta_naprawyDataTable)(base.Tables["Karta_naprawy"]));
            if ((initTable == true)) {
                if ((this.tableKarta_naprawy != null)) {
                    this.tableKarta_naprawy.InitVars();
                }
            }
            this.tableEwidencja_ST = ((Ewidencja_STDataTable)(base.Tables["Ewidencja_ST"]));
            if ((initTable == true)) {
                if ((this.tableEwidencja_ST != null)) {
                    this.tableEwidencja_ST.InitVars();
                }
            }
            this.tableEwidencja_ponizej = ((Ewidencja_ponizejDataTable)(base.Tables["Ewidencja_ponizej"]));
            if ((initTable == true)) {
                if ((this.tableEwidencja_ponizej != null)) {
                    this.tableEwidencja_ponizej.InitVars();
                }
            }
            this.tableEwidencja_powyzej = ((Ewidencja_powyzejDataTable)(base.Tables["Ewidencja_powyzej"]));
            if ((initTable == true)) {
                if ((this.tableEwidencja_powyzej != null)) {
                    this.tableEwidencja_powyzej.InitVars();
                }
            }
            this.tablePonizejStanOtwarcia = ((PonizejStanOtwarciaDataTable)(base.Tables["PonizejStanOtwarcia"]));
            if ((initTable == true)) {
                if ((this.tablePonizejStanOtwarcia != null)) {
                    this.tablePonizejStanOtwarcia.InitVars();
                }
            }
            this.tablePowyzejStanOtwarcia = ((PowyzejStanOtwarciaDataTable)(base.Tables["PowyzejStanOtwarcia"]));
            if ((initTable == true)) {
                if ((this.tablePowyzejStanOtwarcia != null)) {
                    this.tablePowyzejStanOtwarcia.InitVars();
                }
            }
            this.tableStanOtwarciaST = ((StanOtwarciaSTDataTable)(base.Tables["StanOtwarciaST"]));
            if ((initTable == true)) {
                if ((this.tableStanOtwarciaST != null)) {
                    this.tableStanOtwarciaST.InitVars();
                }
            }
            this.tableFaktury = ((FakturyDataTable)(base.Tables["Faktury"]));
            if ((initTable == true)) {
                if ((this.tableFaktury != null)) {
                    this.tableFaktury.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "EwidencjaDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EwidencjaDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEwi = new EwiDataTable();
            base.Tables.Add(this.tableEwi);
            this.tableHistory = new HistoryDataTable();
            base.Tables.Add(this.tableHistory);
            this.tableKarta = new KartaDataTable();
            base.Tables.Add(this.tableKarta);
            this.tableKarta_konserwacja = new Karta_konserwacjaDataTable();
            base.Tables.Add(this.tableKarta_konserwacja);
            this.tableKarta_naprawy = new Karta_naprawyDataTable();
            base.Tables.Add(this.tableKarta_naprawy);
            this.tableEwidencja_ST = new Ewidencja_STDataTable();
            base.Tables.Add(this.tableEwidencja_ST);
            this.tableEwidencja_ponizej = new Ewidencja_ponizejDataTable();
            base.Tables.Add(this.tableEwidencja_ponizej);
            this.tableEwidencja_powyzej = new Ewidencja_powyzejDataTable();
            base.Tables.Add(this.tableEwidencja_powyzej);
            this.tablePonizejStanOtwarcia = new PonizejStanOtwarciaDataTable();
            base.Tables.Add(this.tablePonizejStanOtwarcia);
            this.tablePowyzejStanOtwarcia = new PowyzejStanOtwarciaDataTable();
            base.Tables.Add(this.tablePowyzejStanOtwarcia);
            this.tableStanOtwarciaST = new StanOtwarciaSTDataTable();
            base.Tables.Add(this.tableStanOtwarciaST);
            this.tableFaktury = new FakturyDataTable();
            base.Tables.Add(this.tableFaktury);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeEwi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeKarta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeKarta_konserwacja() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeKarta_naprawy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeEwidencja_ST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeEwidencja_ponizej() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeEwidencja_powyzej() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializePonizejStanOtwarcia() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializePowyzejStanOtwarcia() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeStanOtwarciaST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeFaktury() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EwidencjaDataSet ds = new EwidencjaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void EwiRowChangeEventHandler(object sender, EwiRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void HistoryRowChangeEventHandler(object sender, HistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void KartaRowChangeEventHandler(object sender, KartaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Karta_konserwacjaRowChangeEventHandler(object sender, Karta_konserwacjaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Karta_naprawyRowChangeEventHandler(object sender, Karta_naprawyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Ewidencja_STRowChangeEventHandler(object sender, Ewidencja_STRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Ewidencja_ponizejRowChangeEventHandler(object sender, Ewidencja_ponizejRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Ewidencja_powyzejRowChangeEventHandler(object sender, Ewidencja_powyzejRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void PonizejStanOtwarciaRowChangeEventHandler(object sender, PonizejStanOtwarciaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void PowyzejStanOtwarciaRowChangeEventHandler(object sender, PowyzejStanOtwarciaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void StanOtwarciaSTRowChangeEventHandler(object sender, StanOtwarciaSTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void FakturyRowChangeEventHandler(object sender, FakturyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EwiDataTable : global::System.Data.TypedTableBase<EwiRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNr_ewidencyjny;
            
            private global::System.Data.DataColumn columnRodzaj_sprzętu;
            
            private global::System.Data.DataColumn columnNazwa_Producent;
            
            private global::System.Data.DataColumn columnRok_produkcji;
            
            private global::System.Data.DataColumn columnTermin_gwarancji;
            
            private global::System.Data.DataColumn columnNr_seryjny;
            
            private global::System.Data.DataColumn columnWartosc_zakupu;
            
            private global::System.Data.DataColumn columnNr_faktury;
            
            private global::System.Data.DataColumn columnRodzaj_ewidencji;
            
            private global::System.Data.DataColumn columnMac_adres;
            
            private global::System.Data.DataColumn columnIP_adres1;
            
            private global::System.Data.DataColumn columnIP_adres2;
            
            private global::System.Data.DataColumn columnIP_adres3;
            
            private global::System.Data.DataColumn columnKarta_grafiki1;
            
            private global::System.Data.DataColumn columnKarta_grafiki2;
            
            private global::System.Data.DataColumn columnProcesor;
            
            private global::System.Data.DataColumn columnRam;
            
            private global::System.Data.DataColumn columnDysk1;
            
            private global::System.Data.DataColumn columnDysk2;
            
            private global::System.Data.DataColumn columnBudynek;
            
            private global::System.Data.DataColumn columnPietro;
            
            private global::System.Data.DataColumn columnPomieszczenie;
            
            private global::System.Data.DataColumn columnInformatyka_Lacznosc;
            
            private global::System.Data.DataColumn columnSystem_operacyjny;
            
            private global::System.Data.DataColumn columnNumer_karty;
            
            private global::System.Data.DataColumn columnUwagi;
            
            private global::System.Data.DataColumn columnIndex_finansowy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiDataTable() {
                this.TableName = "Ewi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal EwiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected EwiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_ewidencyjnyColumn {
                get {
                    return this.columnNr_ewidencyjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_sprzętuColumn {
                get {
                    return this.columnRodzaj_sprzętu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_ProducentColumn {
                get {
                    return this.columnNazwa_Producent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rok_produkcjiColumn {
                get {
                    return this.columnRok_produkcji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Termin_gwarancjiColumn {
                get {
                    return this.columnTermin_gwarancji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_seryjnyColumn {
                get {
                    return this.columnNr_seryjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Wartosc_zakupuColumn {
                get {
                    return this.columnWartosc_zakupu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_fakturyColumn {
                get {
                    return this.columnNr_faktury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_ewidencjiColumn {
                get {
                    return this.columnRodzaj_ewidencji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Mac_adresColumn {
                get {
                    return this.columnMac_adres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IP_adres1Column {
                get {
                    return this.columnIP_adres1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IP_adres2Column {
                get {
                    return this.columnIP_adres2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IP_adres3Column {
                get {
                    return this.columnIP_adres3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Karta_grafiki1Column {
                get {
                    return this.columnKarta_grafiki1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Karta_grafiki2Column {
                get {
                    return this.columnKarta_grafiki2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProcesorColumn {
                get {
                    return this.columnProcesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RamColumn {
                get {
                    return this.columnRam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dysk1Column {
                get {
                    return this.columnDysk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dysk2Column {
                get {
                    return this.columnDysk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudynekColumn {
                get {
                    return this.columnBudynek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PietroColumn {
                get {
                    return this.columnPietro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PomieszczenieColumn {
                get {
                    return this.columnPomieszczenie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Informatyka_LacznoscColumn {
                get {
                    return this.columnInformatyka_Lacznosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn System_operacyjnyColumn {
                get {
                    return this.columnSystem_operacyjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Numer_kartyColumn {
                get {
                    return this.columnNumer_karty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UwagiColumn {
                get {
                    return this.columnUwagi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Index_finansowyColumn {
                get {
                    return this.columnIndex_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRow this[int index] {
                get {
                    return ((EwiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event EwiRowChangeEventHandler EwiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event EwiRowChangeEventHandler EwiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event EwiRowChangeEventHandler EwiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event EwiRowChangeEventHandler EwiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddEwiRow(EwiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRow AddEwiRow(
                        int Id, 
                        string Nr_ewidencyjny, 
                        string Rodzaj_sprzętu, 
                        string Nazwa_Producent, 
                        string Rok_produkcji, 
                        string Termin_gwarancji, 
                        string Nr_seryjny, 
                        string Wartosc_zakupu, 
                        string Nr_faktury, 
                        string Rodzaj_ewidencji, 
                        string Mac_adres, 
                        string IP_adres1, 
                        string IP_adres2, 
                        string IP_adres3, 
                        string Karta_grafiki1, 
                        string Karta_grafiki2, 
                        string Procesor, 
                        string Ram, 
                        string Dysk1, 
                        string Dysk2, 
                        string Budynek, 
                        string Pietro, 
                        string Pomieszczenie, 
                        string Informatyka_Lacznosc, 
                        string System_operacyjny, 
                        string Numer_karty, 
                        string Uwagi, 
                        string Index_finansowy) {
                EwiRow rowEwiRow = ((EwiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Nr_ewidencyjny,
                        Rodzaj_sprzętu,
                        Nazwa_Producent,
                        Rok_produkcji,
                        Termin_gwarancji,
                        Nr_seryjny,
                        Wartosc_zakupu,
                        Nr_faktury,
                        Rodzaj_ewidencji,
                        Mac_adres,
                        IP_adres1,
                        IP_adres2,
                        IP_adres3,
                        Karta_grafiki1,
                        Karta_grafiki2,
                        Procesor,
                        Ram,
                        Dysk1,
                        Dysk2,
                        Budynek,
                        Pietro,
                        Pomieszczenie,
                        Informatyka_Lacznosc,
                        System_operacyjny,
                        Numer_karty,
                        Uwagi,
                        Index_finansowy};
                rowEwiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEwiRow);
                return rowEwiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRow FindById(int Id) {
                return ((EwiRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EwiDataTable cln = ((EwiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EwiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNr_ewidencyjny = base.Columns["Nr_ewidencyjny"];
                this.columnRodzaj_sprzętu = base.Columns["Rodzaj_sprzętu"];
                this.columnNazwa_Producent = base.Columns["Nazwa_Producent"];
                this.columnRok_produkcji = base.Columns["Rok_produkcji"];
                this.columnTermin_gwarancji = base.Columns["Termin_gwarancji"];
                this.columnNr_seryjny = base.Columns["Nr_seryjny"];
                this.columnWartosc_zakupu = base.Columns["Wartosc_zakupu"];
                this.columnNr_faktury = base.Columns["Nr_faktury"];
                this.columnRodzaj_ewidencji = base.Columns["Rodzaj_ewidencji"];
                this.columnMac_adres = base.Columns["Mac_adres"];
                this.columnIP_adres1 = base.Columns["IP_adres1"];
                this.columnIP_adres2 = base.Columns["IP_adres2"];
                this.columnIP_adres3 = base.Columns["IP_adres3"];
                this.columnKarta_grafiki1 = base.Columns["Karta_grafiki1"];
                this.columnKarta_grafiki2 = base.Columns["Karta_grafiki2"];
                this.columnProcesor = base.Columns["Procesor"];
                this.columnRam = base.Columns["Ram"];
                this.columnDysk1 = base.Columns["Dysk1"];
                this.columnDysk2 = base.Columns["Dysk2"];
                this.columnBudynek = base.Columns["Budynek"];
                this.columnPietro = base.Columns["Pietro"];
                this.columnPomieszczenie = base.Columns["Pomieszczenie"];
                this.columnInformatyka_Lacznosc = base.Columns["Informatyka_Lacznosc"];
                this.columnSystem_operacyjny = base.Columns["System_operacyjny"];
                this.columnNumer_karty = base.Columns["Numer_karty"];
                this.columnUwagi = base.Columns["Uwagi"];
                this.columnIndex_finansowy = base.Columns["Index_finansowy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNr_ewidencyjny = new global::System.Data.DataColumn("Nr_ewidencyjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_ewidencyjny);
                this.columnRodzaj_sprzętu = new global::System.Data.DataColumn("Rodzaj_sprzętu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_sprzętu);
                this.columnNazwa_Producent = new global::System.Data.DataColumn("Nazwa_Producent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_Producent);
                this.columnRok_produkcji = new global::System.Data.DataColumn("Rok_produkcji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRok_produkcji);
                this.columnTermin_gwarancji = new global::System.Data.DataColumn("Termin_gwarancji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermin_gwarancji);
                this.columnNr_seryjny = new global::System.Data.DataColumn("Nr_seryjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_seryjny);
                this.columnWartosc_zakupu = new global::System.Data.DataColumn("Wartosc_zakupu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWartosc_zakupu);
                this.columnNr_faktury = new global::System.Data.DataColumn("Nr_faktury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_faktury);
                this.columnRodzaj_ewidencji = new global::System.Data.DataColumn("Rodzaj_ewidencji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_ewidencji);
                this.columnMac_adres = new global::System.Data.DataColumn("Mac_adres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMac_adres);
                this.columnIP_adres1 = new global::System.Data.DataColumn("IP_adres1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_adres1);
                this.columnIP_adres2 = new global::System.Data.DataColumn("IP_adres2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_adres2);
                this.columnIP_adres3 = new global::System.Data.DataColumn("IP_adres3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_adres3);
                this.columnKarta_grafiki1 = new global::System.Data.DataColumn("Karta_grafiki1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKarta_grafiki1);
                this.columnKarta_grafiki2 = new global::System.Data.DataColumn("Karta_grafiki2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKarta_grafiki2);
                this.columnProcesor = new global::System.Data.DataColumn("Procesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcesor);
                this.columnRam = new global::System.Data.DataColumn("Ram", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRam);
                this.columnDysk1 = new global::System.Data.DataColumn("Dysk1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDysk1);
                this.columnDysk2 = new global::System.Data.DataColumn("Dysk2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDysk2);
                this.columnBudynek = new global::System.Data.DataColumn("Budynek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudynek);
                this.columnPietro = new global::System.Data.DataColumn("Pietro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPietro);
                this.columnPomieszczenie = new global::System.Data.DataColumn("Pomieszczenie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPomieszczenie);
                this.columnInformatyka_Lacznosc = new global::System.Data.DataColumn("Informatyka_Lacznosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformatyka_Lacznosc);
                this.columnSystem_operacyjny = new global::System.Data.DataColumn("System_operacyjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem_operacyjny);
                this.columnNumer_karty = new global::System.Data.DataColumn("Numer_karty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumer_karty);
                this.columnUwagi = new global::System.Data.DataColumn("Uwagi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi);
                this.columnIndex_finansowy = new global::System.Data.DataColumn("Index_finansowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex_finansowy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNr_ewidencyjny.AllowDBNull = false;
                this.columnNr_ewidencyjny.MaxLength = 10;
                this.columnRodzaj_sprzętu.AllowDBNull = false;
                this.columnRodzaj_sprzętu.MaxLength = 50;
                this.columnNazwa_Producent.AllowDBNull = false;
                this.columnNazwa_Producent.MaxLength = 50;
                this.columnRok_produkcji.AllowDBNull = false;
                this.columnRok_produkcji.MaxLength = 10;
                this.columnTermin_gwarancji.AllowDBNull = false;
                this.columnTermin_gwarancji.MaxLength = 50;
                this.columnNr_seryjny.MaxLength = 50;
                this.columnWartosc_zakupu.AllowDBNull = false;
                this.columnWartosc_zakupu.MaxLength = 50;
                this.columnNr_faktury.AllowDBNull = false;
                this.columnNr_faktury.MaxLength = 50;
                this.columnRodzaj_ewidencji.AllowDBNull = false;
                this.columnRodzaj_ewidencji.MaxLength = 50;
                this.columnMac_adres.MaxLength = 50;
                this.columnIP_adres1.MaxLength = 50;
                this.columnIP_adres2.MaxLength = 50;
                this.columnIP_adres3.MaxLength = 50;
                this.columnKarta_grafiki1.MaxLength = 50;
                this.columnKarta_grafiki2.MaxLength = 50;
                this.columnProcesor.MaxLength = 50;
                this.columnRam.MaxLength = 50;
                this.columnDysk1.MaxLength = 50;
                this.columnDysk2.MaxLength = 50;
                this.columnBudynek.AllowDBNull = false;
                this.columnBudynek.MaxLength = 50;
                this.columnPietro.AllowDBNull = false;
                this.columnPietro.MaxLength = 50;
                this.columnPomieszczenie.AllowDBNull = false;
                this.columnPomieszczenie.MaxLength = 50;
                this.columnInformatyka_Lacznosc.AllowDBNull = false;
                this.columnInformatyka_Lacznosc.MaxLength = 50;
                this.columnSystem_operacyjny.MaxLength = 50;
                this.columnNumer_karty.MaxLength = 50;
                this.columnUwagi.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRow NewEwiRow() {
                return ((EwiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EwiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EwiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EwiRowChanged != null)) {
                    this.EwiRowChanged(this, new EwiRowChangeEvent(((EwiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EwiRowChanging != null)) {
                    this.EwiRowChanging(this, new EwiRowChangeEvent(((EwiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EwiRowDeleted != null)) {
                    this.EwiRowDeleted(this, new EwiRowChangeEvent(((EwiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EwiRowDeleting != null)) {
                    this.EwiRowDeleting(this, new EwiRowChangeEvent(((EwiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveEwiRow(EwiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EwiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistoryDataTable : global::System.Data.TypedTableBase<HistoryRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNr_ewidencyjny;
            
            private global::System.Data.DataColumn columnRodzaj_sprzetu;
            
            private global::System.Data.DataColumn columnNazwa_producenta;
            
            private global::System.Data.DataColumn columnBudynek;
            
            private global::System.Data.DataColumn columnPietro;
            
            private global::System.Data.DataColumn columnPomieszczenie;
            
            private global::System.Data.DataColumn columnInformatyka_Lacznosc;
            
            private global::System.Data.DataColumn columnUwagi;
            
            private global::System.Data.DataColumn columnKto_modyfikowal;
            
            private global::System.Data.DataColumn columnNr_seryjny;
            
            private global::System.Data.DataColumn columnWartosc_zakupu;
            
            private global::System.Data.DataColumn columnNr_faktury;
            
            private global::System.Data.DataColumn columnRodzaj_ewidencji;
            
            private global::System.Data.DataColumn columnIndex_finansowy;
            
            private global::System.Data.DataColumn columnData_usuniecia;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryDataTable() {
                this.TableName = "History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_ewidencyjnyColumn {
                get {
                    return this.columnNr_ewidencyjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_sprzetuColumn {
                get {
                    return this.columnRodzaj_sprzetu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_producentaColumn {
                get {
                    return this.columnNazwa_producenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudynekColumn {
                get {
                    return this.columnBudynek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PietroColumn {
                get {
                    return this.columnPietro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PomieszczenieColumn {
                get {
                    return this.columnPomieszczenie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Informatyka_LacznoscColumn {
                get {
                    return this.columnInformatyka_Lacznosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UwagiColumn {
                get {
                    return this.columnUwagi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Kto_modyfikowalColumn {
                get {
                    return this.columnKto_modyfikowal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_seryjnyColumn {
                get {
                    return this.columnNr_seryjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Wartosc_zakupuColumn {
                get {
                    return this.columnWartosc_zakupu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_fakturyColumn {
                get {
                    return this.columnNr_faktury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_ewidencjiColumn {
                get {
                    return this.columnRodzaj_ewidencji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Index_finansowyColumn {
                get {
                    return this.columnIndex_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_usunieciaColumn {
                get {
                    return this.columnData_usuniecia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRow this[int index] {
                get {
                    return ((HistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryRowChangeEventHandler HistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryRowChangeEventHandler HistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryRowChangeEventHandler HistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryRowChangeEventHandler HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddHistoryRow(HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRow AddHistoryRow(
                        int Id, 
                        string Nr_ewidencyjny, 
                        string Rodzaj_sprzetu, 
                        string Nazwa_producenta, 
                        string Budynek, 
                        string Pietro, 
                        string Pomieszczenie, 
                        string Informatyka_Lacznosc, 
                        string Uwagi, 
                        string Kto_modyfikowal, 
                        string Nr_seryjny, 
                        string Wartosc_zakupu, 
                        string Nr_faktury, 
                        string Rodzaj_ewidencji, 
                        string Index_finansowy, 
                        string Data_usuniecia) {
                HistoryRow rowHistoryRow = ((HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Nr_ewidencyjny,
                        Rodzaj_sprzetu,
                        Nazwa_producenta,
                        Budynek,
                        Pietro,
                        Pomieszczenie,
                        Informatyka_Lacznosc,
                        Uwagi,
                        Kto_modyfikowal,
                        Nr_seryjny,
                        Wartosc_zakupu,
                        Nr_faktury,
                        Rodzaj_ewidencji,
                        Index_finansowy,
                        Data_usuniecia};
                rowHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistoryRow);
                return rowHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRow FindById(int Id) {
                return ((HistoryRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HistoryDataTable cln = ((HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNr_ewidencyjny = base.Columns["Nr_ewidencyjny"];
                this.columnRodzaj_sprzetu = base.Columns["Rodzaj_sprzetu"];
                this.columnNazwa_producenta = base.Columns["Nazwa_producenta"];
                this.columnBudynek = base.Columns["Budynek"];
                this.columnPietro = base.Columns["Pietro"];
                this.columnPomieszczenie = base.Columns["Pomieszczenie"];
                this.columnInformatyka_Lacznosc = base.Columns["Informatyka_Lacznosc"];
                this.columnUwagi = base.Columns["Uwagi"];
                this.columnKto_modyfikowal = base.Columns["Kto_modyfikowal"];
                this.columnNr_seryjny = base.Columns["Nr_seryjny"];
                this.columnWartosc_zakupu = base.Columns["Wartosc_zakupu"];
                this.columnNr_faktury = base.Columns["Nr_faktury"];
                this.columnRodzaj_ewidencji = base.Columns["Rodzaj_ewidencji"];
                this.columnIndex_finansowy = base.Columns["Index_finansowy"];
                this.columnData_usuniecia = base.Columns["Data_usuniecia"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNr_ewidencyjny = new global::System.Data.DataColumn("Nr_ewidencyjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_ewidencyjny);
                this.columnRodzaj_sprzetu = new global::System.Data.DataColumn("Rodzaj_sprzetu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_sprzetu);
                this.columnNazwa_producenta = new global::System.Data.DataColumn("Nazwa_producenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_producenta);
                this.columnBudynek = new global::System.Data.DataColumn("Budynek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudynek);
                this.columnPietro = new global::System.Data.DataColumn("Pietro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPietro);
                this.columnPomieszczenie = new global::System.Data.DataColumn("Pomieszczenie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPomieszczenie);
                this.columnInformatyka_Lacznosc = new global::System.Data.DataColumn("Informatyka_Lacznosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformatyka_Lacznosc);
                this.columnUwagi = new global::System.Data.DataColumn("Uwagi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi);
                this.columnKto_modyfikowal = new global::System.Data.DataColumn("Kto_modyfikowal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKto_modyfikowal);
                this.columnNr_seryjny = new global::System.Data.DataColumn("Nr_seryjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_seryjny);
                this.columnWartosc_zakupu = new global::System.Data.DataColumn("Wartosc_zakupu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWartosc_zakupu);
                this.columnNr_faktury = new global::System.Data.DataColumn("Nr_faktury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_faktury);
                this.columnRodzaj_ewidencji = new global::System.Data.DataColumn("Rodzaj_ewidencji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_ewidencji);
                this.columnIndex_finansowy = new global::System.Data.DataColumn("Index_finansowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex_finansowy);
                this.columnData_usuniecia = new global::System.Data.DataColumn("Data_usuniecia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_usuniecia);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNr_ewidencyjny.AllowDBNull = false;
                this.columnNr_ewidencyjny.MaxLength = 50;
                this.columnRodzaj_sprzetu.AllowDBNull = false;
                this.columnRodzaj_sprzetu.MaxLength = 10;
                this.columnNazwa_producenta.AllowDBNull = false;
                this.columnNazwa_producenta.MaxLength = 10;
                this.columnBudynek.AllowDBNull = false;
                this.columnBudynek.MaxLength = 10;
                this.columnPietro.AllowDBNull = false;
                this.columnPietro.MaxLength = 10;
                this.columnPomieszczenie.AllowDBNull = false;
                this.columnPomieszczenie.MaxLength = 10;
                this.columnInformatyka_Lacznosc.AllowDBNull = false;
                this.columnInformatyka_Lacznosc.MaxLength = 10;
                this.columnUwagi.MaxLength = 10;
                this.columnKto_modyfikowal.AllowDBNull = false;
                this.columnNr_seryjny.AllowDBNull = false;
                this.columnWartosc_zakupu.AllowDBNull = false;
                this.columnNr_faktury.AllowDBNull = false;
                this.columnRodzaj_ewidencji.AllowDBNull = false;
                this.columnIndex_finansowy.AllowDBNull = false;
                this.columnIndex_finansowy.MaxLength = 50;
                this.columnData_usuniecia.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRow NewHistoryRow() {
                return ((HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistoryRowChanged != null)) {
                    this.HistoryRowChanged(this, new HistoryRowChangeEvent(((HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistoryRowChanging != null)) {
                    this.HistoryRowChanging(this, new HistoryRowChangeEvent(((HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistoryRowDeleted != null)) {
                    this.HistoryRowDeleted(this, new HistoryRowChangeEvent(((HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistoryRowDeleting != null)) {
                    this.HistoryRowDeleting(this, new HistoryRowChangeEvent(((HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveHistoryRow(HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KartaDataTable : global::System.Data.TypedTableBase<KartaRow> {
            
            private global::System.Data.DataColumn columnNr_karty;
            
            private global::System.Data.DataColumn columnNazwa_urzadzenia;
            
            private global::System.Data.DataColumn columnMarka_urzadzenia;
            
            private global::System.Data.DataColumn columnModel_urzadzenia;
            
            private global::System.Data.DataColumn columnNumer_seryjny;
            
            private global::System.Data.DataColumn columnData_zakupu;
            
            private global::System.Data.DataColumn columnData_oddania_do_eksploatacji;
            
            private global::System.Data.DataColumn columnDodatkowe_akcesoria;
            
            private global::System.Data.DataColumn columnUzytkownik;
            
            private global::System.Data.DataColumn columnOd_kiedy;
            
            private global::System.Data.DataColumn columnGdzie;
            
            private global::System.Data.DataColumn columnUzytkownik2;
            
            private global::System.Data.DataColumn columnOd_kiedy2;
            
            private global::System.Data.DataColumn columnGdzie2;
            
            private global::System.Data.DataColumn columnUzytkownik3;
            
            private global::System.Data.DataColumn columnOd_kiedy3;
            
            private global::System.Data.DataColumn columnGdzie3;
            
            private global::System.Data.DataColumn columnUzytkownik4;
            
            private global::System.Data.DataColumn columnOd_kiedy4;
            
            private global::System.Data.DataColumn columnGdzie4;
            
            private global::System.Data.DataColumn columnData_zalozenia;
            
            private global::System.Data.DataColumn columnZalozyciel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaDataTable() {
                this.TableName = "Karta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal KartaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected KartaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_kartyColumn {
                get {
                    return this.columnNr_karty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_urzadzeniaColumn {
                get {
                    return this.columnNazwa_urzadzenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Marka_urzadzeniaColumn {
                get {
                    return this.columnMarka_urzadzenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Model_urzadzeniaColumn {
                get {
                    return this.columnModel_urzadzenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Numer_seryjnyColumn {
                get {
                    return this.columnNumer_seryjny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_zakupuColumn {
                get {
                    return this.columnData_zakupu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_oddania_do_eksploatacjiColumn {
                get {
                    return this.columnData_oddania_do_eksploatacji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dodatkowe_akcesoriaColumn {
                get {
                    return this.columnDodatkowe_akcesoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UzytkownikColumn {
                get {
                    return this.columnUzytkownik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Od_kiedyColumn {
                get {
                    return this.columnOd_kiedy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GdzieColumn {
                get {
                    return this.columnGdzie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Uzytkownik2Column {
                get {
                    return this.columnUzytkownik2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Od_kiedy2Column {
                get {
                    return this.columnOd_kiedy2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Gdzie2Column {
                get {
                    return this.columnGdzie2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Uzytkownik3Column {
                get {
                    return this.columnUzytkownik3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Od_kiedy3Column {
                get {
                    return this.columnOd_kiedy3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Gdzie3Column {
                get {
                    return this.columnGdzie3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Uzytkownik4Column {
                get {
                    return this.columnUzytkownik4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Od_kiedy4Column {
                get {
                    return this.columnOd_kiedy4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Gdzie4Column {
                get {
                    return this.columnGdzie4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_zalozeniaColumn {
                get {
                    return this.columnData_zalozenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ZalozycielColumn {
                get {
                    return this.columnZalozyciel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRow this[int index] {
                get {
                    return ((KartaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KartaRowChangeEventHandler KartaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KartaRowChangeEventHandler KartaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KartaRowChangeEventHandler KartaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KartaRowChangeEventHandler KartaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddKartaRow(KartaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRow AddKartaRow(
                        string Nr_karty, 
                        string Nazwa_urzadzenia, 
                        string Marka_urzadzenia, 
                        string Model_urzadzenia, 
                        string Numer_seryjny, 
                        string Data_zakupu, 
                        string Data_oddania_do_eksploatacji, 
                        string Dodatkowe_akcesoria, 
                        string Uzytkownik, 
                        string Od_kiedy, 
                        string Gdzie, 
                        string Uzytkownik2, 
                        string Od_kiedy2, 
                        string Gdzie2, 
                        string Uzytkownik3, 
                        string Od_kiedy3, 
                        string Gdzie3, 
                        string Uzytkownik4, 
                        string Od_kiedy4, 
                        string Gdzie4, 
                        string Data_zalozenia, 
                        string Zalozyciel) {
                KartaRow rowKartaRow = ((KartaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nr_karty,
                        Nazwa_urzadzenia,
                        Marka_urzadzenia,
                        Model_urzadzenia,
                        Numer_seryjny,
                        Data_zakupu,
                        Data_oddania_do_eksploatacji,
                        Dodatkowe_akcesoria,
                        Uzytkownik,
                        Od_kiedy,
                        Gdzie,
                        Uzytkownik2,
                        Od_kiedy2,
                        Gdzie2,
                        Uzytkownik3,
                        Od_kiedy3,
                        Gdzie3,
                        Uzytkownik4,
                        Od_kiedy4,
                        Gdzie4,
                        Data_zalozenia,
                        Zalozyciel};
                rowKartaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKartaRow);
                return rowKartaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRow FindByNr_karty(string Nr_karty) {
                return ((KartaRow)(this.Rows.Find(new object[] {
                            Nr_karty})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KartaDataTable cln = ((KartaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KartaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnNr_karty = base.Columns["Nr_karty"];
                this.columnNazwa_urzadzenia = base.Columns["Nazwa_urzadzenia"];
                this.columnMarka_urzadzenia = base.Columns["Marka_urzadzenia"];
                this.columnModel_urzadzenia = base.Columns["Model_urzadzenia"];
                this.columnNumer_seryjny = base.Columns["Numer_seryjny"];
                this.columnData_zakupu = base.Columns["Data_zakupu"];
                this.columnData_oddania_do_eksploatacji = base.Columns["Data_oddania_do_eksploatacji"];
                this.columnDodatkowe_akcesoria = base.Columns["Dodatkowe_akcesoria"];
                this.columnUzytkownik = base.Columns["Uzytkownik"];
                this.columnOd_kiedy = base.Columns["Od_kiedy"];
                this.columnGdzie = base.Columns["Gdzie"];
                this.columnUzytkownik2 = base.Columns["Uzytkownik2"];
                this.columnOd_kiedy2 = base.Columns["Od_kiedy2"];
                this.columnGdzie2 = base.Columns["Gdzie2"];
                this.columnUzytkownik3 = base.Columns["Uzytkownik3"];
                this.columnOd_kiedy3 = base.Columns["Od_kiedy3"];
                this.columnGdzie3 = base.Columns["Gdzie3"];
                this.columnUzytkownik4 = base.Columns["Uzytkownik4"];
                this.columnOd_kiedy4 = base.Columns["Od_kiedy4"];
                this.columnGdzie4 = base.Columns["Gdzie4"];
                this.columnData_zalozenia = base.Columns["Data_zalozenia"];
                this.columnZalozyciel = base.Columns["Zalozyciel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnNr_karty = new global::System.Data.DataColumn("Nr_karty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_karty);
                this.columnNazwa_urzadzenia = new global::System.Data.DataColumn("Nazwa_urzadzenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_urzadzenia);
                this.columnMarka_urzadzenia = new global::System.Data.DataColumn("Marka_urzadzenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarka_urzadzenia);
                this.columnModel_urzadzenia = new global::System.Data.DataColumn("Model_urzadzenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_urzadzenia);
                this.columnNumer_seryjny = new global::System.Data.DataColumn("Numer_seryjny", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumer_seryjny);
                this.columnData_zakupu = new global::System.Data.DataColumn("Data_zakupu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_zakupu);
                this.columnData_oddania_do_eksploatacji = new global::System.Data.DataColumn("Data_oddania_do_eksploatacji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_oddania_do_eksploatacji);
                this.columnDodatkowe_akcesoria = new global::System.Data.DataColumn("Dodatkowe_akcesoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDodatkowe_akcesoria);
                this.columnUzytkownik = new global::System.Data.DataColumn("Uzytkownik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUzytkownik);
                this.columnOd_kiedy = new global::System.Data.DataColumn("Od_kiedy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOd_kiedy);
                this.columnGdzie = new global::System.Data.DataColumn("Gdzie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGdzie);
                this.columnUzytkownik2 = new global::System.Data.DataColumn("Uzytkownik2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUzytkownik2);
                this.columnOd_kiedy2 = new global::System.Data.DataColumn("Od_kiedy2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOd_kiedy2);
                this.columnGdzie2 = new global::System.Data.DataColumn("Gdzie2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGdzie2);
                this.columnUzytkownik3 = new global::System.Data.DataColumn("Uzytkownik3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUzytkownik3);
                this.columnOd_kiedy3 = new global::System.Data.DataColumn("Od_kiedy3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOd_kiedy3);
                this.columnGdzie3 = new global::System.Data.DataColumn("Gdzie3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGdzie3);
                this.columnUzytkownik4 = new global::System.Data.DataColumn("Uzytkownik4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUzytkownik4);
                this.columnOd_kiedy4 = new global::System.Data.DataColumn("Od_kiedy4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOd_kiedy4);
                this.columnGdzie4 = new global::System.Data.DataColumn("Gdzie4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGdzie4);
                this.columnData_zalozenia = new global::System.Data.DataColumn("Data_zalozenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_zalozenia);
                this.columnZalozyciel = new global::System.Data.DataColumn("Zalozyciel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZalozyciel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNr_karty}, true));
                this.columnNr_karty.AllowDBNull = false;
                this.columnNr_karty.Unique = true;
                this.columnNazwa_urzadzenia.AllowDBNull = false;
                this.columnNazwa_urzadzenia.MaxLength = 50;
                this.columnMarka_urzadzenia.AllowDBNull = false;
                this.columnMarka_urzadzenia.MaxLength = 50;
                this.columnModel_urzadzenia.AllowDBNull = false;
                this.columnModel_urzadzenia.MaxLength = 50;
                this.columnNumer_seryjny.AllowDBNull = false;
                this.columnNumer_seryjny.MaxLength = 50;
                this.columnData_zakupu.MaxLength = 50;
                this.columnData_oddania_do_eksploatacji.MaxLength = 50;
                this.columnDodatkowe_akcesoria.MaxLength = 50;
                this.columnUzytkownik.AllowDBNull = false;
                this.columnUzytkownik.MaxLength = 50;
                this.columnOd_kiedy.MaxLength = 50;
                this.columnGdzie.MaxLength = 50;
                this.columnUzytkownik2.MaxLength = 50;
                this.columnOd_kiedy2.MaxLength = 50;
                this.columnGdzie2.MaxLength = 50;
                this.columnUzytkownik3.MaxLength = 50;
                this.columnOd_kiedy3.MaxLength = 50;
                this.columnGdzie3.MaxLength = 50;
                this.columnUzytkownik4.MaxLength = 50;
                this.columnOd_kiedy4.MaxLength = 50;
                this.columnGdzie4.MaxLength = 50;
                this.columnData_zalozenia.MaxLength = 50;
                this.columnZalozyciel.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRow NewKartaRow() {
                return ((KartaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KartaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KartaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KartaRowChanged != null)) {
                    this.KartaRowChanged(this, new KartaRowChangeEvent(((KartaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KartaRowChanging != null)) {
                    this.KartaRowChanging(this, new KartaRowChangeEvent(((KartaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KartaRowDeleted != null)) {
                    this.KartaRowDeleted(this, new KartaRowChangeEvent(((KartaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KartaRowDeleting != null)) {
                    this.KartaRowDeleting(this, new KartaRowChangeEvent(((KartaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveKartaRow(KartaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KartaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Karta_konserwacjaDataTable : global::System.Data.TypedTableBase<Karta_konserwacjaRow> {
            
            private global::System.Data.DataColumn columnNr_karty;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnOpis_wykonywanej_czynnosci;
            
            private global::System.Data.DataColumn columnCzas_konserwacji;
            
            private global::System.Data.DataColumn columnWykonawca;
            
            private global::System.Data.DataColumn columnPodpis_uzytkownika_urzadzenia;
            
            private global::System.Data.DataColumn columnUwagi_dotyczace_pracy_urzadzenia;
            
            private global::System.Data.DataColumn columnLp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaDataTable() {
                this.TableName = "Karta_konserwacja";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Karta_konserwacjaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Karta_konserwacjaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_kartyColumn {
                get {
                    return this.columnNr_karty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Opis_wykonywanej_czynnosciColumn {
                get {
                    return this.columnOpis_wykonywanej_czynnosci;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Czas_konserwacjiColumn {
                get {
                    return this.columnCzas_konserwacji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WykonawcaColumn {
                get {
                    return this.columnWykonawca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Podpis_uzytkownika_urzadzeniaColumn {
                get {
                    return this.columnPodpis_uzytkownika_urzadzenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Uwagi_dotyczace_pracy_urzadzeniaColumn {
                get {
                    return this.columnUwagi_dotyczace_pracy_urzadzenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LpColumn {
                get {
                    return this.columnLp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRow this[int index] {
                get {
                    return ((Karta_konserwacjaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_konserwacjaRowChangeEventHandler Karta_konserwacjaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_konserwacjaRowChangeEventHandler Karta_konserwacjaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_konserwacjaRowChangeEventHandler Karta_konserwacjaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_konserwacjaRowChangeEventHandler Karta_konserwacjaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddKarta_konserwacjaRow(Karta_konserwacjaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRow AddKarta_konserwacjaRow(string Nr_karty, string Data, string Opis_wykonywanej_czynnosci, string Czas_konserwacji, string Wykonawca, string Podpis_uzytkownika_urzadzenia, string Uwagi_dotyczace_pracy_urzadzenia, int Lp) {
                Karta_konserwacjaRow rowKarta_konserwacjaRow = ((Karta_konserwacjaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nr_karty,
                        Data,
                        Opis_wykonywanej_czynnosci,
                        Czas_konserwacji,
                        Wykonawca,
                        Podpis_uzytkownika_urzadzenia,
                        Uwagi_dotyczace_pracy_urzadzenia,
                        Lp};
                rowKarta_konserwacjaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKarta_konserwacjaRow);
                return rowKarta_konserwacjaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRow FindByLp(int Lp) {
                return ((Karta_konserwacjaRow)(this.Rows.Find(new object[] {
                            Lp})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Karta_konserwacjaDataTable cln = ((Karta_konserwacjaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Karta_konserwacjaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnNr_karty = base.Columns["Nr_karty"];
                this.columnData = base.Columns["Data"];
                this.columnOpis_wykonywanej_czynnosci = base.Columns["Opis_wykonywanej_czynnosci"];
                this.columnCzas_konserwacji = base.Columns["Czas_konserwacji"];
                this.columnWykonawca = base.Columns["Wykonawca"];
                this.columnPodpis_uzytkownika_urzadzenia = base.Columns["Podpis_uzytkownika_urzadzenia"];
                this.columnUwagi_dotyczace_pracy_urzadzenia = base.Columns["Uwagi_dotyczace_pracy_urzadzenia"];
                this.columnLp = base.Columns["Lp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnNr_karty = new global::System.Data.DataColumn("Nr_karty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_karty);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnOpis_wykonywanej_czynnosci = new global::System.Data.DataColumn("Opis_wykonywanej_czynnosci", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpis_wykonywanej_czynnosci);
                this.columnCzas_konserwacji = new global::System.Data.DataColumn("Czas_konserwacji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCzas_konserwacji);
                this.columnWykonawca = new global::System.Data.DataColumn("Wykonawca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWykonawca);
                this.columnPodpis_uzytkownika_urzadzenia = new global::System.Data.DataColumn("Podpis_uzytkownika_urzadzenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodpis_uzytkownika_urzadzenia);
                this.columnUwagi_dotyczace_pracy_urzadzenia = new global::System.Data.DataColumn("Uwagi_dotyczace_pracy_urzadzenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi_dotyczace_pracy_urzadzenia);
                this.columnLp = new global::System.Data.DataColumn("Lp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLp}, true));
                this.columnNr_karty.AllowDBNull = false;
                this.columnData.MaxLength = 50;
                this.columnOpis_wykonywanej_czynnosci.MaxLength = 50;
                this.columnCzas_konserwacji.MaxLength = 50;
                this.columnWykonawca.MaxLength = 50;
                this.columnPodpis_uzytkownika_urzadzenia.MaxLength = 50;
                this.columnUwagi_dotyczace_pracy_urzadzenia.MaxLength = 50;
                this.columnLp.AllowDBNull = false;
                this.columnLp.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRow NewKarta_konserwacjaRow() {
                return ((Karta_konserwacjaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Karta_konserwacjaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Karta_konserwacjaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Karta_konserwacjaRowChanged != null)) {
                    this.Karta_konserwacjaRowChanged(this, new Karta_konserwacjaRowChangeEvent(((Karta_konserwacjaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Karta_konserwacjaRowChanging != null)) {
                    this.Karta_konserwacjaRowChanging(this, new Karta_konserwacjaRowChangeEvent(((Karta_konserwacjaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Karta_konserwacjaRowDeleted != null)) {
                    this.Karta_konserwacjaRowDeleted(this, new Karta_konserwacjaRowChangeEvent(((Karta_konserwacjaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Karta_konserwacjaRowDeleting != null)) {
                    this.Karta_konserwacjaRowDeleting(this, new Karta_konserwacjaRowChangeEvent(((Karta_konserwacjaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveKarta_konserwacjaRow(Karta_konserwacjaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Karta_konserwacjaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Karta_naprawyDataTable : global::System.Data.TypedTableBase<Karta_naprawyRow> {
            
            private global::System.Data.DataColumn columnNr_karty;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnRodzaj_naprawy;
            
            private global::System.Data.DataColumn columnData_oddania_do_naprawy;
            
            private global::System.Data.DataColumn columnData_odbioru_z_naprawy;
            
            private global::System.Data.DataColumn columnKoszt_naprawy;
            
            private global::System.Data.DataColumn columnPodpis_nadzorujacego_naprawe;
            
            private global::System.Data.DataColumn columnLp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyDataTable() {
                this.TableName = "Karta_naprawy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Karta_naprawyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Karta_naprawyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_kartyColumn {
                get {
                    return this.columnNr_karty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_naprawyColumn {
                get {
                    return this.columnRodzaj_naprawy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_oddania_do_naprawyColumn {
                get {
                    return this.columnData_oddania_do_naprawy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_odbioru_z_naprawyColumn {
                get {
                    return this.columnData_odbioru_z_naprawy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Koszt_naprawyColumn {
                get {
                    return this.columnKoszt_naprawy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Podpis_nadzorujacego_napraweColumn {
                get {
                    return this.columnPodpis_nadzorujacego_naprawe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LpColumn {
                get {
                    return this.columnLp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRow this[int index] {
                get {
                    return ((Karta_naprawyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_naprawyRowChangeEventHandler Karta_naprawyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_naprawyRowChangeEventHandler Karta_naprawyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_naprawyRowChangeEventHandler Karta_naprawyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Karta_naprawyRowChangeEventHandler Karta_naprawyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddKarta_naprawyRow(Karta_naprawyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRow AddKarta_naprawyRow(string Nr_karty, string Data, string Rodzaj_naprawy, string Data_oddania_do_naprawy, string Data_odbioru_z_naprawy, string Koszt_naprawy, string Podpis_nadzorujacego_naprawe, int Lp) {
                Karta_naprawyRow rowKarta_naprawyRow = ((Karta_naprawyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nr_karty,
                        Data,
                        Rodzaj_naprawy,
                        Data_oddania_do_naprawy,
                        Data_odbioru_z_naprawy,
                        Koszt_naprawy,
                        Podpis_nadzorujacego_naprawe,
                        Lp};
                rowKarta_naprawyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKarta_naprawyRow);
                return rowKarta_naprawyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRow FindByLp(int Lp) {
                return ((Karta_naprawyRow)(this.Rows.Find(new object[] {
                            Lp})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Karta_naprawyDataTable cln = ((Karta_naprawyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Karta_naprawyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnNr_karty = base.Columns["Nr_karty"];
                this.columnData = base.Columns["Data"];
                this.columnRodzaj_naprawy = base.Columns["Rodzaj_naprawy"];
                this.columnData_oddania_do_naprawy = base.Columns["Data_oddania_do_naprawy"];
                this.columnData_odbioru_z_naprawy = base.Columns["Data_odbioru_z_naprawy"];
                this.columnKoszt_naprawy = base.Columns["Koszt_naprawy"];
                this.columnPodpis_nadzorujacego_naprawe = base.Columns["Podpis_nadzorujacego_naprawe"];
                this.columnLp = base.Columns["Lp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnNr_karty = new global::System.Data.DataColumn("Nr_karty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_karty);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnRodzaj_naprawy = new global::System.Data.DataColumn("Rodzaj_naprawy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_naprawy);
                this.columnData_oddania_do_naprawy = new global::System.Data.DataColumn("Data_oddania_do_naprawy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_oddania_do_naprawy);
                this.columnData_odbioru_z_naprawy = new global::System.Data.DataColumn("Data_odbioru_z_naprawy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_odbioru_z_naprawy);
                this.columnKoszt_naprawy = new global::System.Data.DataColumn("Koszt_naprawy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoszt_naprawy);
                this.columnPodpis_nadzorujacego_naprawe = new global::System.Data.DataColumn("Podpis_nadzorujacego_naprawe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodpis_nadzorujacego_naprawe);
                this.columnLp = new global::System.Data.DataColumn("Lp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLp}, true));
                this.columnNr_karty.AllowDBNull = false;
                this.columnData.MaxLength = 50;
                this.columnRodzaj_naprawy.MaxLength = 50;
                this.columnData_oddania_do_naprawy.MaxLength = 50;
                this.columnData_odbioru_z_naprawy.MaxLength = 50;
                this.columnKoszt_naprawy.MaxLength = 50;
                this.columnPodpis_nadzorujacego_naprawe.MaxLength = 50;
                this.columnLp.AllowDBNull = false;
                this.columnLp.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRow NewKarta_naprawyRow() {
                return ((Karta_naprawyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Karta_naprawyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Karta_naprawyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Karta_naprawyRowChanged != null)) {
                    this.Karta_naprawyRowChanged(this, new Karta_naprawyRowChangeEvent(((Karta_naprawyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Karta_naprawyRowChanging != null)) {
                    this.Karta_naprawyRowChanging(this, new Karta_naprawyRowChangeEvent(((Karta_naprawyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Karta_naprawyRowDeleted != null)) {
                    this.Karta_naprawyRowDeleted(this, new Karta_naprawyRowChangeEvent(((Karta_naprawyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Karta_naprawyRowDeleting != null)) {
                    this.Karta_naprawyRowDeleting(this, new Karta_naprawyRowChangeEvent(((Karta_naprawyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveKarta_naprawyRow(Karta_naprawyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Karta_naprawyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ewidencja_STDataTable : global::System.Data.TypedTableBase<Ewidencja_STRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNazwa_przedmiotu;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnOpis;
            
            private global::System.Data.DataColumn columnDokument_ksiegowy;
            
            private global::System.Data.DataColumn columnPrzychod;
            
            private global::System.Data.DataColumn columnRozchod;
            
            private global::System.Data.DataColumn columnStan;
            
            private global::System.Data.DataColumn columnUwagi;
            
            private global::System.Data.DataColumn columnIndex_finansowy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STDataTable() {
                this.TableName = "Ewidencja_ST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_STDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Ewidencja_STDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_przedmiotuColumn {
                get {
                    return this.columnNazwa_przedmiotu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OpisColumn {
                get {
                    return this.columnOpis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dokument_ksiegowyColumn {
                get {
                    return this.columnDokument_ksiegowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrzychodColumn {
                get {
                    return this.columnPrzychod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RozchodColumn {
                get {
                    return this.columnRozchod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UwagiColumn {
                get {
                    return this.columnUwagi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Index_finansowyColumn {
                get {
                    return this.columnIndex_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRow this[int index] {
                get {
                    return ((Ewidencja_STRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_STRowChangeEventHandler Ewidencja_STRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_STRowChangeEventHandler Ewidencja_STRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_STRowChangeEventHandler Ewidencja_STRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_STRowChangeEventHandler Ewidencja_STRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddEwidencja_STRow(Ewidencja_STRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRow AddEwidencja_STRow(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi, string Index_finansowy) {
                Ewidencja_STRow rowEwidencja_STRow = ((Ewidencja_STRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Nazwa_przedmiotu,
                        JM,
                        Data,
                        Opis,
                        Dokument_ksiegowy,
                        Przychod,
                        Rozchod,
                        Stan,
                        Uwagi,
                        Index_finansowy};
                rowEwidencja_STRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEwidencja_STRow);
                return rowEwidencja_STRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRow FindById(int Id) {
                return ((Ewidencja_STRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ewidencja_STDataTable cln = ((Ewidencja_STDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ewidencja_STDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNazwa_przedmiotu = base.Columns["Nazwa_przedmiotu"];
                this.columnJM = base.Columns["JM"];
                this.columnData = base.Columns["Data"];
                this.columnOpis = base.Columns["Opis"];
                this.columnDokument_ksiegowy = base.Columns["Dokument_ksiegowy"];
                this.columnPrzychod = base.Columns["Przychod"];
                this.columnRozchod = base.Columns["Rozchod"];
                this.columnStan = base.Columns["Stan"];
                this.columnUwagi = base.Columns["Uwagi"];
                this.columnIndex_finansowy = base.Columns["Index_finansowy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNazwa_przedmiotu = new global::System.Data.DataColumn("Nazwa_przedmiotu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_przedmiotu);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnOpis = new global::System.Data.DataColumn("Opis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpis);
                this.columnDokument_ksiegowy = new global::System.Data.DataColumn("Dokument_ksiegowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDokument_ksiegowy);
                this.columnPrzychod = new global::System.Data.DataColumn("Przychod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrzychod);
                this.columnRozchod = new global::System.Data.DataColumn("Rozchod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRozchod);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.columnUwagi = new global::System.Data.DataColumn("Uwagi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi);
                this.columnIndex_finansowy = new global::System.Data.DataColumn("Index_finansowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex_finansowy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNazwa_przedmiotu.AllowDBNull = false;
                this.columnNazwa_przedmiotu.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnData.AllowDBNull = false;
                this.columnData.MaxLength = 50;
                this.columnOpis.AllowDBNull = false;
                this.columnOpis.MaxLength = 50;
                this.columnDokument_ksiegowy.AllowDBNull = false;
                this.columnDokument_ksiegowy.MaxLength = 10;
                this.columnPrzychod.AllowDBNull = false;
                this.columnPrzychod.MaxLength = 10;
                this.columnRozchod.AllowDBNull = false;
                this.columnRozchod.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
                this.columnUwagi.MaxLength = 50;
                this.columnIndex_finansowy.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRow NewEwidencja_STRow() {
                return ((Ewidencja_STRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ewidencja_STRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ewidencja_STRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ewidencja_STRowChanged != null)) {
                    this.Ewidencja_STRowChanged(this, new Ewidencja_STRowChangeEvent(((Ewidencja_STRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ewidencja_STRowChanging != null)) {
                    this.Ewidencja_STRowChanging(this, new Ewidencja_STRowChangeEvent(((Ewidencja_STRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ewidencja_STRowDeleted != null)) {
                    this.Ewidencja_STRowDeleted(this, new Ewidencja_STRowChangeEvent(((Ewidencja_STRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ewidencja_STRowDeleting != null)) {
                    this.Ewidencja_STRowDeleting(this, new Ewidencja_STRowChangeEvent(((Ewidencja_STRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveEwidencja_STRow(Ewidencja_STRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ewidencja_STDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ewidencja_ponizejDataTable : global::System.Data.TypedTableBase<Ewidencja_ponizejRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNazwa_przedmiotu;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnOpis;
            
            private global::System.Data.DataColumn columnDokument_ksiegowy;
            
            private global::System.Data.DataColumn columnPrzychod;
            
            private global::System.Data.DataColumn columnRozchod;
            
            private global::System.Data.DataColumn columnStan;
            
            private global::System.Data.DataColumn columnUwagi;
            
            private global::System.Data.DataColumn columnIndex_finansowy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejDataTable() {
                this.TableName = "Ewidencja_ponizej";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_ponizejDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Ewidencja_ponizejDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_przedmiotuColumn {
                get {
                    return this.columnNazwa_przedmiotu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OpisColumn {
                get {
                    return this.columnOpis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dokument_ksiegowyColumn {
                get {
                    return this.columnDokument_ksiegowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrzychodColumn {
                get {
                    return this.columnPrzychod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RozchodColumn {
                get {
                    return this.columnRozchod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UwagiColumn {
                get {
                    return this.columnUwagi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Index_finansowyColumn {
                get {
                    return this.columnIndex_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRow this[int index] {
                get {
                    return ((Ewidencja_ponizejRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_ponizejRowChangeEventHandler Ewidencja_ponizejRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_ponizejRowChangeEventHandler Ewidencja_ponizejRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_ponizejRowChangeEventHandler Ewidencja_ponizejRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_ponizejRowChangeEventHandler Ewidencja_ponizejRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddEwidencja_ponizejRow(Ewidencja_ponizejRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRow AddEwidencja_ponizejRow(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi, string Index_finansowy) {
                Ewidencja_ponizejRow rowEwidencja_ponizejRow = ((Ewidencja_ponizejRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Nazwa_przedmiotu,
                        JM,
                        Data,
                        Opis,
                        Dokument_ksiegowy,
                        Przychod,
                        Rozchod,
                        Stan,
                        Uwagi,
                        Index_finansowy};
                rowEwidencja_ponizejRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEwidencja_ponizejRow);
                return rowEwidencja_ponizejRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRow FindById(int Id) {
                return ((Ewidencja_ponizejRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ewidencja_ponizejDataTable cln = ((Ewidencja_ponizejDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ewidencja_ponizejDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNazwa_przedmiotu = base.Columns["Nazwa_przedmiotu"];
                this.columnJM = base.Columns["JM"];
                this.columnData = base.Columns["Data"];
                this.columnOpis = base.Columns["Opis"];
                this.columnDokument_ksiegowy = base.Columns["Dokument_ksiegowy"];
                this.columnPrzychod = base.Columns["Przychod"];
                this.columnRozchod = base.Columns["Rozchod"];
                this.columnStan = base.Columns["Stan"];
                this.columnUwagi = base.Columns["Uwagi"];
                this.columnIndex_finansowy = base.Columns["Index_finansowy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNazwa_przedmiotu = new global::System.Data.DataColumn("Nazwa_przedmiotu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_przedmiotu);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnOpis = new global::System.Data.DataColumn("Opis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpis);
                this.columnDokument_ksiegowy = new global::System.Data.DataColumn("Dokument_ksiegowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDokument_ksiegowy);
                this.columnPrzychod = new global::System.Data.DataColumn("Przychod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrzychod);
                this.columnRozchod = new global::System.Data.DataColumn("Rozchod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRozchod);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.columnUwagi = new global::System.Data.DataColumn("Uwagi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi);
                this.columnIndex_finansowy = new global::System.Data.DataColumn("Index_finansowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex_finansowy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNazwa_przedmiotu.AllowDBNull = false;
                this.columnNazwa_przedmiotu.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnData.AllowDBNull = false;
                this.columnData.MaxLength = 50;
                this.columnOpis.AllowDBNull = false;
                this.columnOpis.MaxLength = 50;
                this.columnDokument_ksiegowy.AllowDBNull = false;
                this.columnDokument_ksiegowy.MaxLength = 10;
                this.columnPrzychod.AllowDBNull = false;
                this.columnPrzychod.MaxLength = 10;
                this.columnRozchod.AllowDBNull = false;
                this.columnRozchod.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
                this.columnUwagi.MaxLength = 50;
                this.columnIndex_finansowy.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRow NewEwidencja_ponizejRow() {
                return ((Ewidencja_ponizejRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ewidencja_ponizejRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ewidencja_ponizejRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ewidencja_ponizejRowChanged != null)) {
                    this.Ewidencja_ponizejRowChanged(this, new Ewidencja_ponizejRowChangeEvent(((Ewidencja_ponizejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ewidencja_ponizejRowChanging != null)) {
                    this.Ewidencja_ponizejRowChanging(this, new Ewidencja_ponizejRowChangeEvent(((Ewidencja_ponizejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ewidencja_ponizejRowDeleted != null)) {
                    this.Ewidencja_ponizejRowDeleted(this, new Ewidencja_ponizejRowChangeEvent(((Ewidencja_ponizejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ewidencja_ponizejRowDeleting != null)) {
                    this.Ewidencja_ponizejRowDeleting(this, new Ewidencja_ponizejRowChangeEvent(((Ewidencja_ponizejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveEwidencja_ponizejRow(Ewidencja_ponizejRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ewidencja_ponizejDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ewidencja_powyzejDataTable : global::System.Data.TypedTableBase<Ewidencja_powyzejRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNazwa_przedmiotu;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnOpis;
            
            private global::System.Data.DataColumn columnDokument_ksiegowy;
            
            private global::System.Data.DataColumn columnPrzychod;
            
            private global::System.Data.DataColumn columnRozchod;
            
            private global::System.Data.DataColumn columnStan;
            
            private global::System.Data.DataColumn columnUwagi;
            
            private global::System.Data.DataColumn columnIndex_finansowy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejDataTable() {
                this.TableName = "Ewidencja_powyzej";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_powyzejDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Ewidencja_powyzejDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwa_przedmiotuColumn {
                get {
                    return this.columnNazwa_przedmiotu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OpisColumn {
                get {
                    return this.columnOpis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Dokument_ksiegowyColumn {
                get {
                    return this.columnDokument_ksiegowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrzychodColumn {
                get {
                    return this.columnPrzychod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RozchodColumn {
                get {
                    return this.columnRozchod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UwagiColumn {
                get {
                    return this.columnUwagi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Index_finansowyColumn {
                get {
                    return this.columnIndex_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRow this[int index] {
                get {
                    return ((Ewidencja_powyzejRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_powyzejRowChangeEventHandler Ewidencja_powyzejRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_powyzejRowChangeEventHandler Ewidencja_powyzejRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_powyzejRowChangeEventHandler Ewidencja_powyzejRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ewidencja_powyzejRowChangeEventHandler Ewidencja_powyzejRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddEwidencja_powyzejRow(Ewidencja_powyzejRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRow AddEwidencja_powyzejRow(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi, string Index_finansowy) {
                Ewidencja_powyzejRow rowEwidencja_powyzejRow = ((Ewidencja_powyzejRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Nazwa_przedmiotu,
                        JM,
                        Data,
                        Opis,
                        Dokument_ksiegowy,
                        Przychod,
                        Rozchod,
                        Stan,
                        Uwagi,
                        Index_finansowy};
                rowEwidencja_powyzejRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEwidencja_powyzejRow);
                return rowEwidencja_powyzejRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRow FindById(int Id) {
                return ((Ewidencja_powyzejRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ewidencja_powyzejDataTable cln = ((Ewidencja_powyzejDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ewidencja_powyzejDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNazwa_przedmiotu = base.Columns["Nazwa_przedmiotu"];
                this.columnJM = base.Columns["JM"];
                this.columnData = base.Columns["Data"];
                this.columnOpis = base.Columns["Opis"];
                this.columnDokument_ksiegowy = base.Columns["Dokument_ksiegowy"];
                this.columnPrzychod = base.Columns["Przychod"];
                this.columnRozchod = base.Columns["Rozchod"];
                this.columnStan = base.Columns["Stan"];
                this.columnUwagi = base.Columns["Uwagi"];
                this.columnIndex_finansowy = base.Columns["Index_finansowy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNazwa_przedmiotu = new global::System.Data.DataColumn("Nazwa_przedmiotu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwa_przedmiotu);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnOpis = new global::System.Data.DataColumn("Opis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpis);
                this.columnDokument_ksiegowy = new global::System.Data.DataColumn("Dokument_ksiegowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDokument_ksiegowy);
                this.columnPrzychod = new global::System.Data.DataColumn("Przychod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrzychod);
                this.columnRozchod = new global::System.Data.DataColumn("Rozchod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRozchod);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.columnUwagi = new global::System.Data.DataColumn("Uwagi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUwagi);
                this.columnIndex_finansowy = new global::System.Data.DataColumn("Index_finansowy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex_finansowy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNazwa_przedmiotu.AllowDBNull = false;
                this.columnNazwa_przedmiotu.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnData.AllowDBNull = false;
                this.columnData.MaxLength = 50;
                this.columnOpis.AllowDBNull = false;
                this.columnOpis.MaxLength = 50;
                this.columnDokument_ksiegowy.AllowDBNull = false;
                this.columnDokument_ksiegowy.MaxLength = 10;
                this.columnPrzychod.AllowDBNull = false;
                this.columnPrzychod.MaxLength = 10;
                this.columnRozchod.AllowDBNull = false;
                this.columnRozchod.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
                this.columnUwagi.MaxLength = 50;
                this.columnIndex_finansowy.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRow NewEwidencja_powyzejRow() {
                return ((Ewidencja_powyzejRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ewidencja_powyzejRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ewidencja_powyzejRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ewidencja_powyzejRowChanged != null)) {
                    this.Ewidencja_powyzejRowChanged(this, new Ewidencja_powyzejRowChangeEvent(((Ewidencja_powyzejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ewidencja_powyzejRowChanging != null)) {
                    this.Ewidencja_powyzejRowChanging(this, new Ewidencja_powyzejRowChangeEvent(((Ewidencja_powyzejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ewidencja_powyzejRowDeleted != null)) {
                    this.Ewidencja_powyzejRowDeleted(this, new Ewidencja_powyzejRowChangeEvent(((Ewidencja_powyzejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ewidencja_powyzejRowDeleting != null)) {
                    this.Ewidencja_powyzejRowDeleting(this, new Ewidencja_powyzejRowChangeEvent(((Ewidencja_powyzejRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveEwidencja_powyzejRow(Ewidencja_powyzejRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ewidencja_powyzejDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PonizejStanOtwarciaDataTable : global::System.Data.TypedTableBase<PonizejStanOtwarciaRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnRodzaj;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnRok;
            
            private global::System.Data.DataColumn columnStan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaDataTable() {
                this.TableName = "PonizejStanOtwarcia";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal PonizejStanOtwarciaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected PonizejStanOtwarciaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RodzajColumn {
                get {
                    return this.columnRodzaj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RokColumn {
                get {
                    return this.columnRok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRow this[int index] {
                get {
                    return ((PonizejStanOtwarciaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PonizejStanOtwarciaRowChangeEventHandler PonizejStanOtwarciaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PonizejStanOtwarciaRowChangeEventHandler PonizejStanOtwarciaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PonizejStanOtwarciaRowChangeEventHandler PonizejStanOtwarciaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PonizejStanOtwarciaRowChangeEventHandler PonizejStanOtwarciaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddPonizejStanOtwarciaRow(PonizejStanOtwarciaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRow AddPonizejStanOtwarciaRow(int Id, string Rodzaj, string JM, string Rok, string Stan) {
                PonizejStanOtwarciaRow rowPonizejStanOtwarciaRow = ((PonizejStanOtwarciaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Rodzaj,
                        JM,
                        Rok,
                        Stan};
                rowPonizejStanOtwarciaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPonizejStanOtwarciaRow);
                return rowPonizejStanOtwarciaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRow FindById(int Id) {
                return ((PonizejStanOtwarciaRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PonizejStanOtwarciaDataTable cln = ((PonizejStanOtwarciaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PonizejStanOtwarciaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnRodzaj = base.Columns["Rodzaj"];
                this.columnJM = base.Columns["JM"];
                this.columnRok = base.Columns["Rok"];
                this.columnStan = base.Columns["Stan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnRodzaj = new global::System.Data.DataColumn("Rodzaj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnRok = new global::System.Data.DataColumn("Rok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRok);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnRodzaj.AllowDBNull = false;
                this.columnRodzaj.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnRok.AllowDBNull = false;
                this.columnRok.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRow NewPonizejStanOtwarciaRow() {
                return ((PonizejStanOtwarciaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PonizejStanOtwarciaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PonizejStanOtwarciaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PonizejStanOtwarciaRowChanged != null)) {
                    this.PonizejStanOtwarciaRowChanged(this, new PonizejStanOtwarciaRowChangeEvent(((PonizejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PonizejStanOtwarciaRowChanging != null)) {
                    this.PonizejStanOtwarciaRowChanging(this, new PonizejStanOtwarciaRowChangeEvent(((PonizejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PonizejStanOtwarciaRowDeleted != null)) {
                    this.PonizejStanOtwarciaRowDeleted(this, new PonizejStanOtwarciaRowChangeEvent(((PonizejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PonizejStanOtwarciaRowDeleting != null)) {
                    this.PonizejStanOtwarciaRowDeleting(this, new PonizejStanOtwarciaRowChangeEvent(((PonizejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovePonizejStanOtwarciaRow(PonizejStanOtwarciaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PonizejStanOtwarciaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PowyzejStanOtwarciaDataTable : global::System.Data.TypedTableBase<PowyzejStanOtwarciaRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnRodzaj;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnRok;
            
            private global::System.Data.DataColumn columnStan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaDataTable() {
                this.TableName = "PowyzejStanOtwarcia";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal PowyzejStanOtwarciaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected PowyzejStanOtwarciaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RodzajColumn {
                get {
                    return this.columnRodzaj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RokColumn {
                get {
                    return this.columnRok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRow this[int index] {
                get {
                    return ((PowyzejStanOtwarciaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PowyzejStanOtwarciaRowChangeEventHandler PowyzejStanOtwarciaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PowyzejStanOtwarciaRowChangeEventHandler PowyzejStanOtwarciaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PowyzejStanOtwarciaRowChangeEventHandler PowyzejStanOtwarciaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event PowyzejStanOtwarciaRowChangeEventHandler PowyzejStanOtwarciaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddPowyzejStanOtwarciaRow(PowyzejStanOtwarciaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRow AddPowyzejStanOtwarciaRow(int Id, string Rodzaj, string JM, string Rok, string Stan) {
                PowyzejStanOtwarciaRow rowPowyzejStanOtwarciaRow = ((PowyzejStanOtwarciaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Rodzaj,
                        JM,
                        Rok,
                        Stan};
                rowPowyzejStanOtwarciaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPowyzejStanOtwarciaRow);
                return rowPowyzejStanOtwarciaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRow FindById(int Id) {
                return ((PowyzejStanOtwarciaRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PowyzejStanOtwarciaDataTable cln = ((PowyzejStanOtwarciaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PowyzejStanOtwarciaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnRodzaj = base.Columns["Rodzaj"];
                this.columnJM = base.Columns["JM"];
                this.columnRok = base.Columns["Rok"];
                this.columnStan = base.Columns["Stan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnRodzaj = new global::System.Data.DataColumn("Rodzaj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnRok = new global::System.Data.DataColumn("Rok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRok);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnRodzaj.AllowDBNull = false;
                this.columnRodzaj.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnRok.AllowDBNull = false;
                this.columnRok.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRow NewPowyzejStanOtwarciaRow() {
                return ((PowyzejStanOtwarciaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PowyzejStanOtwarciaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PowyzejStanOtwarciaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PowyzejStanOtwarciaRowChanged != null)) {
                    this.PowyzejStanOtwarciaRowChanged(this, new PowyzejStanOtwarciaRowChangeEvent(((PowyzejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PowyzejStanOtwarciaRowChanging != null)) {
                    this.PowyzejStanOtwarciaRowChanging(this, new PowyzejStanOtwarciaRowChangeEvent(((PowyzejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PowyzejStanOtwarciaRowDeleted != null)) {
                    this.PowyzejStanOtwarciaRowDeleted(this, new PowyzejStanOtwarciaRowChangeEvent(((PowyzejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PowyzejStanOtwarciaRowDeleting != null)) {
                    this.PowyzejStanOtwarciaRowDeleting(this, new PowyzejStanOtwarciaRowChangeEvent(((PowyzejStanOtwarciaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovePowyzejStanOtwarciaRow(PowyzejStanOtwarciaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PowyzejStanOtwarciaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StanOtwarciaSTDataTable : global::System.Data.TypedTableBase<StanOtwarciaSTRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnRodzaj;
            
            private global::System.Data.DataColumn columnJM;
            
            private global::System.Data.DataColumn columnRok;
            
            private global::System.Data.DataColumn columnStan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTDataTable() {
                this.TableName = "StanOtwarciaST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal StanOtwarciaSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected StanOtwarciaSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RodzajColumn {
                get {
                    return this.columnRodzaj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JMColumn {
                get {
                    return this.columnJM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RokColumn {
                get {
                    return this.columnRok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StanColumn {
                get {
                    return this.columnStan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRow this[int index] {
                get {
                    return ((StanOtwarciaSTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event StanOtwarciaSTRowChangeEventHandler StanOtwarciaSTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event StanOtwarciaSTRowChangeEventHandler StanOtwarciaSTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event StanOtwarciaSTRowChangeEventHandler StanOtwarciaSTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event StanOtwarciaSTRowChangeEventHandler StanOtwarciaSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddStanOtwarciaSTRow(StanOtwarciaSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRow AddStanOtwarciaSTRow(int Id, string Rodzaj, string JM, string Rok, string Stan) {
                StanOtwarciaSTRow rowStanOtwarciaSTRow = ((StanOtwarciaSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Rodzaj,
                        JM,
                        Rok,
                        Stan};
                rowStanOtwarciaSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStanOtwarciaSTRow);
                return rowStanOtwarciaSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRow FindById(int Id) {
                return ((StanOtwarciaSTRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StanOtwarciaSTDataTable cln = ((StanOtwarciaSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StanOtwarciaSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnRodzaj = base.Columns["Rodzaj"];
                this.columnJM = base.Columns["JM"];
                this.columnRok = base.Columns["Rok"];
                this.columnStan = base.Columns["Stan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnRodzaj = new global::System.Data.DataColumn("Rodzaj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj);
                this.columnJM = new global::System.Data.DataColumn("JM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJM);
                this.columnRok = new global::System.Data.DataColumn("Rok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRok);
                this.columnStan = new global::System.Data.DataColumn("Stan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnRodzaj.AllowDBNull = false;
                this.columnRodzaj.MaxLength = 50;
                this.columnJM.AllowDBNull = false;
                this.columnJM.MaxLength = 10;
                this.columnRok.AllowDBNull = false;
                this.columnRok.MaxLength = 10;
                this.columnStan.AllowDBNull = false;
                this.columnStan.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRow NewStanOtwarciaSTRow() {
                return ((StanOtwarciaSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StanOtwarciaSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StanOtwarciaSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StanOtwarciaSTRowChanged != null)) {
                    this.StanOtwarciaSTRowChanged(this, new StanOtwarciaSTRowChangeEvent(((StanOtwarciaSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StanOtwarciaSTRowChanging != null)) {
                    this.StanOtwarciaSTRowChanging(this, new StanOtwarciaSTRowChangeEvent(((StanOtwarciaSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StanOtwarciaSTRowDeleted != null)) {
                    this.StanOtwarciaSTRowDeleted(this, new StanOtwarciaSTRowChangeEvent(((StanOtwarciaSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StanOtwarciaSTRowDeleting != null)) {
                    this.StanOtwarciaSTRowDeleting(this, new StanOtwarciaSTRowChangeEvent(((StanOtwarciaSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveStanOtwarciaSTRow(StanOtwarciaSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StanOtwarciaSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FakturyDataTable : global::System.Data.TypedTableBase<FakturyRow> {
            
            private global::System.Data.DataColumn columnLp;
            
            private global::System.Data.DataColumn columnMiesiac;
            
            private global::System.Data.DataColumn columnParagraf;
            
            private global::System.Data.DataColumn columnPozycja_paragraf;
            
            private global::System.Data.DataColumn columnNr_faktury;
            
            private global::System.Data.DataColumn columnData_faktury;
            
            private global::System.Data.DataColumn columnDostawca;
            
            private global::System.Data.DataColumn columnSpecyfikacja;
            
            private global::System.Data.DataColumn columnIlosc;
            
            private global::System.Data.DataColumn columnJednostka_miary;
            
            private global::System.Data.DataColumn columnIndeks_finansowy;
            
            private global::System.Data.DataColumn columnRodzaj_ewidencji;
            
            private global::System.Data.DataColumn columnWartosc;
            
            private global::System.Data.DataColumn columnTermin_platnosci;
            
            private global::System.Data.DataColumn columnSposob_zaplaty;
            
            private global::System.Data.DataColumn columnPrzekazano_do_DF;
            
            private global::System.Data.DataColumn columnNazwisko_Imie;
            
            private global::System.Data.DataColumn columnOpis_faktury;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyDataTable() {
                this.TableName = "Faktury";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FakturyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected FakturyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LpColumn {
                get {
                    return this.columnLp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MiesiacColumn {
                get {
                    return this.columnMiesiac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ParagrafColumn {
                get {
                    return this.columnParagraf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Pozycja_paragrafColumn {
                get {
                    return this.columnPozycja_paragraf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nr_fakturyColumn {
                get {
                    return this.columnNr_faktury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Data_fakturyColumn {
                get {
                    return this.columnData_faktury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DostawcaColumn {
                get {
                    return this.columnDostawca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SpecyfikacjaColumn {
                get {
                    return this.columnSpecyfikacja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IloscColumn {
                get {
                    return this.columnIlosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Jednostka_miaryColumn {
                get {
                    return this.columnJednostka_miary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Indeks_finansowyColumn {
                get {
                    return this.columnIndeks_finansowy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_ewidencjiColumn {
                get {
                    return this.columnRodzaj_ewidencji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WartoscColumn {
                get {
                    return this.columnWartosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Termin_platnosciColumn {
                get {
                    return this.columnTermin_platnosci;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Sposob_zaplatyColumn {
                get {
                    return this.columnSposob_zaplaty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Przekazano_do_DFColumn {
                get {
                    return this.columnPrzekazano_do_DF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nazwisko_ImieColumn {
                get {
                    return this.columnNazwisko_Imie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Opis_fakturyColumn {
                get {
                    return this.columnOpis_faktury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRow this[int index] {
                get {
                    return ((FakturyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FakturyRowChangeEventHandler FakturyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FakturyRowChangeEventHandler FakturyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FakturyRowChangeEventHandler FakturyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FakturyRowChangeEventHandler FakturyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddFakturyRow(FakturyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRow AddFakturyRow(
                        string Miesiac, 
                        int Paragraf, 
                        int Pozycja_paragraf, 
                        string Nr_faktury, 
                        string Data_faktury, 
                        string Dostawca, 
                        string Specyfikacja, 
                        int Ilosc, 
                        string Jednostka_miary, 
                        int Indeks_finansowy, 
                        string Rodzaj_ewidencji, 
                        string Wartosc, 
                        string Termin_platnosci, 
                        string Sposob_zaplaty, 
                        string Przekazano_do_DF, 
                        string Nazwisko_Imie, 
                        string Opis_faktury) {
                FakturyRow rowFakturyRow = ((FakturyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Miesiac,
                        Paragraf,
                        Pozycja_paragraf,
                        Nr_faktury,
                        Data_faktury,
                        Dostawca,
                        Specyfikacja,
                        Ilosc,
                        Jednostka_miary,
                        Indeks_finansowy,
                        Rodzaj_ewidencji,
                        Wartosc,
                        Termin_platnosci,
                        Sposob_zaplaty,
                        Przekazano_do_DF,
                        Nazwisko_Imie,
                        Opis_faktury};
                rowFakturyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFakturyRow);
                return rowFakturyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRow FindByLp(int Lp) {
                return ((FakturyRow)(this.Rows.Find(new object[] {
                            Lp})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FakturyDataTable cln = ((FakturyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FakturyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnLp = base.Columns["Lp"];
                this.columnMiesiac = base.Columns["Miesiac"];
                this.columnParagraf = base.Columns["Paragraf"];
                this.columnPozycja_paragraf = base.Columns["Pozycja_paragraf"];
                this.columnNr_faktury = base.Columns["Nr_faktury"];
                this.columnData_faktury = base.Columns["Data_faktury"];
                this.columnDostawca = base.Columns["Dostawca"];
                this.columnSpecyfikacja = base.Columns["Specyfikacja"];
                this.columnIlosc = base.Columns["Ilosc"];
                this.columnJednostka_miary = base.Columns["Jednostka_miary"];
                this.columnIndeks_finansowy = base.Columns["Indeks_finansowy"];
                this.columnRodzaj_ewidencji = base.Columns["Rodzaj_ewidencji"];
                this.columnWartosc = base.Columns["Wartosc"];
                this.columnTermin_platnosci = base.Columns["Termin_platnosci"];
                this.columnSposob_zaplaty = base.Columns["Sposob_zaplaty"];
                this.columnPrzekazano_do_DF = base.Columns["Przekazano_do_DF"];
                this.columnNazwisko_Imie = base.Columns["Nazwisko_Imie"];
                this.columnOpis_faktury = base.Columns["Opis_faktury"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnLp = new global::System.Data.DataColumn("Lp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLp);
                this.columnMiesiac = new global::System.Data.DataColumn("Miesiac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiesiac);
                this.columnParagraf = new global::System.Data.DataColumn("Paragraf", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParagraf);
                this.columnPozycja_paragraf = new global::System.Data.DataColumn("Pozycja_paragraf", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPozycja_paragraf);
                this.columnNr_faktury = new global::System.Data.DataColumn("Nr_faktury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNr_faktury);
                this.columnData_faktury = new global::System.Data.DataColumn("Data_faktury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_faktury);
                this.columnDostawca = new global::System.Data.DataColumn("Dostawca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDostawca);
                this.columnSpecyfikacja = new global::System.Data.DataColumn("Specyfikacja", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecyfikacja);
                this.columnIlosc = new global::System.Data.DataColumn("Ilosc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIlosc);
                this.columnJednostka_miary = new global::System.Data.DataColumn("Jednostka_miary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJednostka_miary);
                this.columnIndeks_finansowy = new global::System.Data.DataColumn("Indeks_finansowy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndeks_finansowy);
                this.columnRodzaj_ewidencji = new global::System.Data.DataColumn("Rodzaj_ewidencji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_ewidencji);
                this.columnWartosc = new global::System.Data.DataColumn("Wartosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWartosc);
                this.columnTermin_platnosci = new global::System.Data.DataColumn("Termin_platnosci", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermin_platnosci);
                this.columnSposob_zaplaty = new global::System.Data.DataColumn("Sposob_zaplaty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSposob_zaplaty);
                this.columnPrzekazano_do_DF = new global::System.Data.DataColumn("Przekazano_do_DF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrzekazano_do_DF);
                this.columnNazwisko_Imie = new global::System.Data.DataColumn("Nazwisko_Imie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazwisko_Imie);
                this.columnOpis_faktury = new global::System.Data.DataColumn("Opis_faktury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpis_faktury);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLp}, true));
                this.columnLp.AutoIncrement = true;
                this.columnLp.AllowDBNull = false;
                this.columnLp.Unique = true;
                this.columnMiesiac.AllowDBNull = false;
                this.columnMiesiac.MaxLength = 50;
                this.columnParagraf.AllowDBNull = false;
                this.columnPozycja_paragraf.AllowDBNull = false;
                this.columnNr_faktury.AllowDBNull = false;
                this.columnNr_faktury.MaxLength = 50;
                this.columnData_faktury.AllowDBNull = false;
                this.columnData_faktury.MaxLength = 50;
                this.columnDostawca.AllowDBNull = false;
                this.columnDostawca.MaxLength = 50;
                this.columnSpecyfikacja.AllowDBNull = false;
                this.columnSpecyfikacja.MaxLength = 50;
                this.columnIlosc.AllowDBNull = false;
                this.columnJednostka_miary.AllowDBNull = false;
                this.columnJednostka_miary.MaxLength = 10;
                this.columnRodzaj_ewidencji.MaxLength = 50;
                this.columnWartosc.AllowDBNull = false;
                this.columnWartosc.MaxLength = 50;
                this.columnTermin_platnosci.AllowDBNull = false;
                this.columnTermin_platnosci.MaxLength = 50;
                this.columnSposob_zaplaty.AllowDBNull = false;
                this.columnSposob_zaplaty.MaxLength = 50;
                this.columnPrzekazano_do_DF.AllowDBNull = false;
                this.columnPrzekazano_do_DF.MaxLength = 50;
                this.columnNazwisko_Imie.AllowDBNull = false;
                this.columnNazwisko_Imie.MaxLength = 2147483647;
                this.columnOpis_faktury.AllowDBNull = false;
                this.columnOpis_faktury.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRow NewFakturyRow() {
                return ((FakturyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FakturyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FakturyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FakturyRowChanged != null)) {
                    this.FakturyRowChanged(this, new FakturyRowChangeEvent(((FakturyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FakturyRowChanging != null)) {
                    this.FakturyRowChanging(this, new FakturyRowChangeEvent(((FakturyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FakturyRowDeleted != null)) {
                    this.FakturyRowDeleted(this, new FakturyRowChangeEvent(((FakturyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FakturyRowDeleting != null)) {
                    this.FakturyRowDeleting(this, new FakturyRowChangeEvent(((FakturyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveFakturyRow(FakturyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EwidencjaDataSet ds = new EwidencjaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FakturyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EwiRow : global::System.Data.DataRow {
            
            private EwiDataTable tableEwi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal EwiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEwi = ((EwiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableEwi.IdColumn]));
                }
                set {
                    this[this.tableEwi.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_ewidencyjny {
                get {
                    return ((string)(this[this.tableEwi.Nr_ewidencyjnyColumn]));
                }
                set {
                    this[this.tableEwi.Nr_ewidencyjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_sprzętu {
                get {
                    return ((string)(this[this.tableEwi.Rodzaj_sprzętuColumn]));
                }
                set {
                    this[this.tableEwi.Rodzaj_sprzętuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_Producent {
                get {
                    return ((string)(this[this.tableEwi.Nazwa_ProducentColumn]));
                }
                set {
                    this[this.tableEwi.Nazwa_ProducentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rok_produkcji {
                get {
                    return ((string)(this[this.tableEwi.Rok_produkcjiColumn]));
                }
                set {
                    this[this.tableEwi.Rok_produkcjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Termin_gwarancji {
                get {
                    return ((string)(this[this.tableEwi.Termin_gwarancjiColumn]));
                }
                set {
                    this[this.tableEwi.Termin_gwarancjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_seryjny {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Nr_seryjnyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Nr_seryjny\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Nr_seryjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wartosc_zakupu {
                get {
                    return ((string)(this[this.tableEwi.Wartosc_zakupuColumn]));
                }
                set {
                    this[this.tableEwi.Wartosc_zakupuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_faktury {
                get {
                    return ((string)(this[this.tableEwi.Nr_fakturyColumn]));
                }
                set {
                    this[this.tableEwi.Nr_fakturyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_ewidencji {
                get {
                    return ((string)(this[this.tableEwi.Rodzaj_ewidencjiColumn]));
                }
                set {
                    this[this.tableEwi.Rodzaj_ewidencjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Mac_adres {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Mac_adresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Mac_adres\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Mac_adresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IP_adres1 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.IP_adres1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'IP_adres1\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.IP_adres1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IP_adres2 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.IP_adres2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'IP_adres2\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.IP_adres2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IP_adres3 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.IP_adres3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'IP_adres3\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.IP_adres3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Karta_grafiki1 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Karta_grafiki1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Karta_grafiki1\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Karta_grafiki1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Karta_grafiki2 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Karta_grafiki2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Karta_grafiki2\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Karta_grafiki2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Procesor {
                get {
                    try {
                        return ((string)(this[this.tableEwi.ProcesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Procesor\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.ProcesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Ram {
                get {
                    try {
                        return ((string)(this[this.tableEwi.RamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Ram\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.RamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dysk1 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Dysk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Dysk1\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Dysk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dysk2 {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Dysk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Dysk2\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Dysk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Budynek {
                get {
                    return ((string)(this[this.tableEwi.BudynekColumn]));
                }
                set {
                    this[this.tableEwi.BudynekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pietro {
                get {
                    return ((string)(this[this.tableEwi.PietroColumn]));
                }
                set {
                    this[this.tableEwi.PietroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pomieszczenie {
                get {
                    return ((string)(this[this.tableEwi.PomieszczenieColumn]));
                }
                set {
                    this[this.tableEwi.PomieszczenieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Informatyka_Lacznosc {
                get {
                    return ((string)(this[this.tableEwi.Informatyka_LacznoscColumn]));
                }
                set {
                    this[this.tableEwi.Informatyka_LacznoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string System_operacyjny {
                get {
                    try {
                        return ((string)(this[this.tableEwi.System_operacyjnyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'System_operacyjny\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.System_operacyjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Numer_karty {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Numer_kartyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Numer_karty\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Numer_kartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi {
                get {
                    try {
                        return ((string)(this[this.tableEwi.UwagiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.UwagiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Index_finansowy {
                get {
                    try {
                        return ((string)(this[this.tableEwi.Index_finansowyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Index_finansowy\' w tabeli \'Ewi\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwi.Index_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNr_seryjnyNull() {
                return this.IsNull(this.tableEwi.Nr_seryjnyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNr_seryjnyNull() {
                this[this.tableEwi.Nr_seryjnyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMac_adresNull() {
                return this.IsNull(this.tableEwi.Mac_adresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMac_adresNull() {
                this[this.tableEwi.Mac_adresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIP_adres1Null() {
                return this.IsNull(this.tableEwi.IP_adres1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIP_adres1Null() {
                this[this.tableEwi.IP_adres1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIP_adres2Null() {
                return this.IsNull(this.tableEwi.IP_adres2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIP_adres2Null() {
                this[this.tableEwi.IP_adres2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIP_adres3Null() {
                return this.IsNull(this.tableEwi.IP_adres3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIP_adres3Null() {
                this[this.tableEwi.IP_adres3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKarta_grafiki1Null() {
                return this.IsNull(this.tableEwi.Karta_grafiki1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKarta_grafiki1Null() {
                this[this.tableEwi.Karta_grafiki1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKarta_grafiki2Null() {
                return this.IsNull(this.tableEwi.Karta_grafiki2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKarta_grafiki2Null() {
                this[this.tableEwi.Karta_grafiki2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProcesorNull() {
                return this.IsNull(this.tableEwi.ProcesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProcesorNull() {
                this[this.tableEwi.ProcesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRamNull() {
                return this.IsNull(this.tableEwi.RamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRamNull() {
                this[this.tableEwi.RamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDysk1Null() {
                return this.IsNull(this.tableEwi.Dysk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDysk1Null() {
                this[this.tableEwi.Dysk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDysk2Null() {
                return this.IsNull(this.tableEwi.Dysk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDysk2Null() {
                this[this.tableEwi.Dysk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSystem_operacyjnyNull() {
                return this.IsNull(this.tableEwi.System_operacyjnyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSystem_operacyjnyNull() {
                this[this.tableEwi.System_operacyjnyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNumer_kartyNull() {
                return this.IsNull(this.tableEwi.Numer_kartyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNumer_kartyNull() {
                this[this.tableEwi.Numer_kartyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagiNull() {
                return this.IsNull(this.tableEwi.UwagiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagiNull() {
                this[this.tableEwi.UwagiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndex_finansowyNull() {
                return this.IsNull(this.tableEwi.Index_finansowyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndex_finansowyNull() {
                this[this.tableEwi.Index_finansowyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HistoryRow : global::System.Data.DataRow {
            
            private HistoryDataTable tableHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistory = ((HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableHistory.IdColumn]));
                }
                set {
                    this[this.tableHistory.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_ewidencyjny {
                get {
                    return ((string)(this[this.tableHistory.Nr_ewidencyjnyColumn]));
                }
                set {
                    this[this.tableHistory.Nr_ewidencyjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_sprzetu {
                get {
                    return ((string)(this[this.tableHistory.Rodzaj_sprzetuColumn]));
                }
                set {
                    this[this.tableHistory.Rodzaj_sprzetuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_producenta {
                get {
                    return ((string)(this[this.tableHistory.Nazwa_producentaColumn]));
                }
                set {
                    this[this.tableHistory.Nazwa_producentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Budynek {
                get {
                    return ((string)(this[this.tableHistory.BudynekColumn]));
                }
                set {
                    this[this.tableHistory.BudynekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pietro {
                get {
                    return ((string)(this[this.tableHistory.PietroColumn]));
                }
                set {
                    this[this.tableHistory.PietroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pomieszczenie {
                get {
                    return ((string)(this[this.tableHistory.PomieszczenieColumn]));
                }
                set {
                    this[this.tableHistory.PomieszczenieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Informatyka_Lacznosc {
                get {
                    return ((string)(this[this.tableHistory.Informatyka_LacznoscColumn]));
                }
                set {
                    this[this.tableHistory.Informatyka_LacznoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi {
                get {
                    try {
                        return ((string)(this[this.tableHistory.UwagiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi\' w tabeli \'History\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistory.UwagiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Kto_modyfikowal {
                get {
                    return ((string)(this[this.tableHistory.Kto_modyfikowalColumn]));
                }
                set {
                    this[this.tableHistory.Kto_modyfikowalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_seryjny {
                get {
                    return ((string)(this[this.tableHistory.Nr_seryjnyColumn]));
                }
                set {
                    this[this.tableHistory.Nr_seryjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wartosc_zakupu {
                get {
                    return ((string)(this[this.tableHistory.Wartosc_zakupuColumn]));
                }
                set {
                    this[this.tableHistory.Wartosc_zakupuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_faktury {
                get {
                    return ((string)(this[this.tableHistory.Nr_fakturyColumn]));
                }
                set {
                    this[this.tableHistory.Nr_fakturyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_ewidencji {
                get {
                    return ((string)(this[this.tableHistory.Rodzaj_ewidencjiColumn]));
                }
                set {
                    this[this.tableHistory.Rodzaj_ewidencjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Index_finansowy {
                get {
                    return ((string)(this[this.tableHistory.Index_finansowyColumn]));
                }
                set {
                    this[this.tableHistory.Index_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_usuniecia {
                get {
                    try {
                        return ((string)(this[this.tableHistory.Data_usunieciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_usuniecia\' w tabeli \'History\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistory.Data_usunieciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagiNull() {
                return this.IsNull(this.tableHistory.UwagiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagiNull() {
                this[this.tableHistory.UwagiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_usunieciaNull() {
                return this.IsNull(this.tableHistory.Data_usunieciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_usunieciaNull() {
                this[this.tableHistory.Data_usunieciaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KartaRow : global::System.Data.DataRow {
            
            private KartaDataTable tableKarta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal KartaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKarta = ((KartaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_karty {
                get {
                    return ((string)(this[this.tableKarta.Nr_kartyColumn]));
                }
                set {
                    this[this.tableKarta.Nr_kartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_urzadzenia {
                get {
                    return ((string)(this[this.tableKarta.Nazwa_urzadzeniaColumn]));
                }
                set {
                    this[this.tableKarta.Nazwa_urzadzeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Marka_urzadzenia {
                get {
                    return ((string)(this[this.tableKarta.Marka_urzadzeniaColumn]));
                }
                set {
                    this[this.tableKarta.Marka_urzadzeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Model_urzadzenia {
                get {
                    return ((string)(this[this.tableKarta.Model_urzadzeniaColumn]));
                }
                set {
                    this[this.tableKarta.Model_urzadzeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Numer_seryjny {
                get {
                    return ((string)(this[this.tableKarta.Numer_seryjnyColumn]));
                }
                set {
                    this[this.tableKarta.Numer_seryjnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_zakupu {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Data_zakupuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_zakupu\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Data_zakupuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_oddania_do_eksploatacji {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Data_oddania_do_eksploatacjiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_oddania_do_eksploatacji\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Data_oddania_do_eksploatacjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dodatkowe_akcesoria {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Dodatkowe_akcesoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Dodatkowe_akcesoria\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Dodatkowe_akcesoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uzytkownik {
                get {
                    return ((string)(this[this.tableKarta.UzytkownikColumn]));
                }
                set {
                    this[this.tableKarta.UzytkownikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Od_kiedy {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Od_kiedyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Od_kiedy\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Od_kiedyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gdzie {
                get {
                    try {
                        return ((string)(this[this.tableKarta.GdzieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Gdzie\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.GdzieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uzytkownik2 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Uzytkownik2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uzytkownik2\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Uzytkownik2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Od_kiedy2 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Od_kiedy2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Od_kiedy2\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Od_kiedy2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gdzie2 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Gdzie2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Gdzie2\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Gdzie2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uzytkownik3 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Uzytkownik3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uzytkownik3\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Uzytkownik3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Od_kiedy3 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Od_kiedy3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Od_kiedy3\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Od_kiedy3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gdzie3 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Gdzie3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Gdzie3\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Gdzie3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uzytkownik4 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Uzytkownik4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uzytkownik4\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Uzytkownik4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Od_kiedy4 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Od_kiedy4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Od_kiedy4\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Od_kiedy4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gdzie4 {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Gdzie4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Gdzie4\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Gdzie4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_zalozenia {
                get {
                    try {
                        return ((string)(this[this.tableKarta.Data_zalozeniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_zalozenia\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.Data_zalozeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Zalozyciel {
                get {
                    try {
                        return ((string)(this[this.tableKarta.ZalozycielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Zalozyciel\' w tabeli \'Karta\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta.ZalozycielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_zakupuNull() {
                return this.IsNull(this.tableKarta.Data_zakupuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_zakupuNull() {
                this[this.tableKarta.Data_zakupuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_oddania_do_eksploatacjiNull() {
                return this.IsNull(this.tableKarta.Data_oddania_do_eksploatacjiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_oddania_do_eksploatacjiNull() {
                this[this.tableKarta.Data_oddania_do_eksploatacjiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDodatkowe_akcesoriaNull() {
                return this.IsNull(this.tableKarta.Dodatkowe_akcesoriaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDodatkowe_akcesoriaNull() {
                this[this.tableKarta.Dodatkowe_akcesoriaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOd_kiedyNull() {
                return this.IsNull(this.tableKarta.Od_kiedyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOd_kiedyNull() {
                this[this.tableKarta.Od_kiedyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGdzieNull() {
                return this.IsNull(this.tableKarta.GdzieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGdzieNull() {
                this[this.tableKarta.GdzieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUzytkownik2Null() {
                return this.IsNull(this.tableKarta.Uzytkownik2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUzytkownik2Null() {
                this[this.tableKarta.Uzytkownik2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOd_kiedy2Null() {
                return this.IsNull(this.tableKarta.Od_kiedy2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOd_kiedy2Null() {
                this[this.tableKarta.Od_kiedy2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGdzie2Null() {
                return this.IsNull(this.tableKarta.Gdzie2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGdzie2Null() {
                this[this.tableKarta.Gdzie2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUzytkownik3Null() {
                return this.IsNull(this.tableKarta.Uzytkownik3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUzytkownik3Null() {
                this[this.tableKarta.Uzytkownik3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOd_kiedy3Null() {
                return this.IsNull(this.tableKarta.Od_kiedy3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOd_kiedy3Null() {
                this[this.tableKarta.Od_kiedy3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGdzie3Null() {
                return this.IsNull(this.tableKarta.Gdzie3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGdzie3Null() {
                this[this.tableKarta.Gdzie3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUzytkownik4Null() {
                return this.IsNull(this.tableKarta.Uzytkownik4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUzytkownik4Null() {
                this[this.tableKarta.Uzytkownik4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOd_kiedy4Null() {
                return this.IsNull(this.tableKarta.Od_kiedy4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOd_kiedy4Null() {
                this[this.tableKarta.Od_kiedy4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGdzie4Null() {
                return this.IsNull(this.tableKarta.Gdzie4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGdzie4Null() {
                this[this.tableKarta.Gdzie4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_zalozeniaNull() {
                return this.IsNull(this.tableKarta.Data_zalozeniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_zalozeniaNull() {
                this[this.tableKarta.Data_zalozeniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsZalozycielNull() {
                return this.IsNull(this.tableKarta.ZalozycielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetZalozycielNull() {
                this[this.tableKarta.ZalozycielColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Karta_konserwacjaRow : global::System.Data.DataRow {
            
            private Karta_konserwacjaDataTable tableKarta_konserwacja;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Karta_konserwacjaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKarta_konserwacja = ((Karta_konserwacjaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_karty {
                get {
                    return ((string)(this[this.tableKarta_konserwacja.Nr_kartyColumn]));
                }
                set {
                    this[this.tableKarta_konserwacja.Nr_kartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data\' w tabeli \'Karta_konserwacja\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Opis_wykonywanej_czynnosci {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.Opis_wykonywanej_czynnosciColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Opis_wykonywanej_czynnosci\' w tabeli \'Karta_konserwacja\' to DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.Opis_wykonywanej_czynnosciColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Czas_konserwacji {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.Czas_konserwacjiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Czas_konserwacji\' w tabeli \'Karta_konserwacja\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.Czas_konserwacjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wykonawca {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.WykonawcaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Wykonawca\' w tabeli \'Karta_konserwacja\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.WykonawcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Podpis_uzytkownika_urzadzenia {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.Podpis_uzytkownika_urzadzeniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Podpis_uzytkownika_urzadzenia\' w tabeli \'Karta_konserwacja\' to" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.Podpis_uzytkownika_urzadzeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi_dotyczace_pracy_urzadzenia {
                get {
                    try {
                        return ((string)(this[this.tableKarta_konserwacja.Uwagi_dotyczace_pracy_urzadzeniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi_dotyczace_pracy_urzadzenia\' w tabeli \'Karta_konserwacja\'" +
                                " to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_konserwacja.Uwagi_dotyczace_pracy_urzadzeniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Lp {
                get {
                    return ((int)(this[this.tableKarta_konserwacja.LpColumn]));
                }
                set {
                    this[this.tableKarta_konserwacja.LpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataNull() {
                return this.IsNull(this.tableKarta_konserwacja.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataNull() {
                this[this.tableKarta_konserwacja.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOpis_wykonywanej_czynnosciNull() {
                return this.IsNull(this.tableKarta_konserwacja.Opis_wykonywanej_czynnosciColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOpis_wykonywanej_czynnosciNull() {
                this[this.tableKarta_konserwacja.Opis_wykonywanej_czynnosciColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCzas_konserwacjiNull() {
                return this.IsNull(this.tableKarta_konserwacja.Czas_konserwacjiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCzas_konserwacjiNull() {
                this[this.tableKarta_konserwacja.Czas_konserwacjiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWykonawcaNull() {
                return this.IsNull(this.tableKarta_konserwacja.WykonawcaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWykonawcaNull() {
                this[this.tableKarta_konserwacja.WykonawcaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPodpis_uzytkownika_urzadzeniaNull() {
                return this.IsNull(this.tableKarta_konserwacja.Podpis_uzytkownika_urzadzeniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPodpis_uzytkownika_urzadzeniaNull() {
                this[this.tableKarta_konserwacja.Podpis_uzytkownika_urzadzeniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagi_dotyczace_pracy_urzadzeniaNull() {
                return this.IsNull(this.tableKarta_konserwacja.Uwagi_dotyczace_pracy_urzadzeniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagi_dotyczace_pracy_urzadzeniaNull() {
                this[this.tableKarta_konserwacja.Uwagi_dotyczace_pracy_urzadzeniaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Karta_naprawyRow : global::System.Data.DataRow {
            
            private Karta_naprawyDataTable tableKarta_naprawy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Karta_naprawyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKarta_naprawy = ((Karta_naprawyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_karty {
                get {
                    return ((string)(this[this.tableKarta_naprawy.Nr_kartyColumn]));
                }
                set {
                    this[this.tableKarta_naprawy.Nr_kartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data\' w tabeli \'Karta_naprawy\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_naprawy {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.Rodzaj_naprawyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Rodzaj_naprawy\' w tabeli \'Karta_naprawy\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.Rodzaj_naprawyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_oddania_do_naprawy {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.Data_oddania_do_naprawyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_oddania_do_naprawy\' w tabeli \'Karta_naprawy\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.Data_oddania_do_naprawyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_odbioru_z_naprawy {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.Data_odbioru_z_naprawyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Data_odbioru_z_naprawy\' w tabeli \'Karta_naprawy\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.Data_odbioru_z_naprawyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Koszt_naprawy {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.Koszt_naprawyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Koszt_naprawy\' w tabeli \'Karta_naprawy\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.Koszt_naprawyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Podpis_nadzorujacego_naprawe {
                get {
                    try {
                        return ((string)(this[this.tableKarta_naprawy.Podpis_nadzorujacego_napraweColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Podpis_nadzorujacego_naprawe\' w tabeli \'Karta_naprawy\' to DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableKarta_naprawy.Podpis_nadzorujacego_napraweColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Lp {
                get {
                    return ((int)(this[this.tableKarta_naprawy.LpColumn]));
                }
                set {
                    this[this.tableKarta_naprawy.LpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataNull() {
                return this.IsNull(this.tableKarta_naprawy.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataNull() {
                this[this.tableKarta_naprawy.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRodzaj_naprawyNull() {
                return this.IsNull(this.tableKarta_naprawy.Rodzaj_naprawyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRodzaj_naprawyNull() {
                this[this.tableKarta_naprawy.Rodzaj_naprawyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_oddania_do_naprawyNull() {
                return this.IsNull(this.tableKarta_naprawy.Data_oddania_do_naprawyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_oddania_do_naprawyNull() {
                this[this.tableKarta_naprawy.Data_oddania_do_naprawyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsData_odbioru_z_naprawyNull() {
                return this.IsNull(this.tableKarta_naprawy.Data_odbioru_z_naprawyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetData_odbioru_z_naprawyNull() {
                this[this.tableKarta_naprawy.Data_odbioru_z_naprawyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKoszt_naprawyNull() {
                return this.IsNull(this.tableKarta_naprawy.Koszt_naprawyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKoszt_naprawyNull() {
                this[this.tableKarta_naprawy.Koszt_naprawyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPodpis_nadzorujacego_napraweNull() {
                return this.IsNull(this.tableKarta_naprawy.Podpis_nadzorujacego_napraweColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPodpis_nadzorujacego_napraweNull() {
                this[this.tableKarta_naprawy.Podpis_nadzorujacego_napraweColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ewidencja_STRow : global::System.Data.DataRow {
            
            private Ewidencja_STDataTable tableEwidencja_ST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_STRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEwidencja_ST = ((Ewidencja_STDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableEwidencja_ST.IdColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_przedmiotu {
                get {
                    return ((string)(this[this.tableEwidencja_ST.Nazwa_przedmiotuColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.Nazwa_przedmiotuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tableEwidencja_ST.JMColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data {
                get {
                    return ((string)(this[this.tableEwidencja_ST.DataColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Opis {
                get {
                    return ((string)(this[this.tableEwidencja_ST.OpisColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.OpisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dokument_ksiegowy {
                get {
                    return ((string)(this[this.tableEwidencja_ST.Dokument_ksiegowyColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.Dokument_ksiegowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Przychod {
                get {
                    return ((string)(this[this.tableEwidencja_ST.PrzychodColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.PrzychodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rozchod {
                get {
                    return ((string)(this[this.tableEwidencja_ST.RozchodColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.RozchodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tableEwidencja_ST.StanColumn]));
                }
                set {
                    this[this.tableEwidencja_ST.StanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_ST.UwagiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi\' w tabeli \'Ewidencja_ST\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_ST.UwagiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Index_finansowy {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_ST.Index_finansowyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Index_finansowy\' w tabeli \'Ewidencja_ST\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_ST.Index_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagiNull() {
                return this.IsNull(this.tableEwidencja_ST.UwagiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagiNull() {
                this[this.tableEwidencja_ST.UwagiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndex_finansowyNull() {
                return this.IsNull(this.tableEwidencja_ST.Index_finansowyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndex_finansowyNull() {
                this[this.tableEwidencja_ST.Index_finansowyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ewidencja_ponizejRow : global::System.Data.DataRow {
            
            private Ewidencja_ponizejDataTable tableEwidencja_ponizej;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_ponizejRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEwidencja_ponizej = ((Ewidencja_ponizejDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableEwidencja_ponizej.IdColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_przedmiotu {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.Nazwa_przedmiotuColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.Nazwa_przedmiotuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.JMColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.DataColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Opis {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.OpisColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.OpisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dokument_ksiegowy {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.Dokument_ksiegowyColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.Dokument_ksiegowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Przychod {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.PrzychodColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.PrzychodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rozchod {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.RozchodColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.RozchodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tableEwidencja_ponizej.StanColumn]));
                }
                set {
                    this[this.tableEwidencja_ponizej.StanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_ponizej.UwagiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi\' w tabeli \'Ewidencja_ponizej\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_ponizej.UwagiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Index_finansowy {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_ponizej.Index_finansowyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Index_finansowy\' w tabeli \'Ewidencja_ponizej\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_ponizej.Index_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagiNull() {
                return this.IsNull(this.tableEwidencja_ponizej.UwagiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagiNull() {
                this[this.tableEwidencja_ponizej.UwagiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndex_finansowyNull() {
                return this.IsNull(this.tableEwidencja_ponizej.Index_finansowyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndex_finansowyNull() {
                this[this.tableEwidencja_ponizej.Index_finansowyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ewidencja_powyzejRow : global::System.Data.DataRow {
            
            private Ewidencja_powyzejDataTable tableEwidencja_powyzej;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ewidencja_powyzejRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEwidencja_powyzej = ((Ewidencja_powyzejDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableEwidencja_powyzej.IdColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwa_przedmiotu {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.Nazwa_przedmiotuColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.Nazwa_przedmiotuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.JMColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.DataColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Opis {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.OpisColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.OpisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dokument_ksiegowy {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.Dokument_ksiegowyColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.Dokument_ksiegowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Przychod {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.PrzychodColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.PrzychodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rozchod {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.RozchodColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.RozchodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tableEwidencja_powyzej.StanColumn]));
                }
                set {
                    this[this.tableEwidencja_powyzej.StanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Uwagi {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_powyzej.UwagiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Uwagi\' w tabeli \'Ewidencja_powyzej\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_powyzej.UwagiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Index_finansowy {
                get {
                    try {
                        return ((string)(this[this.tableEwidencja_powyzej.Index_finansowyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Index_finansowy\' w tabeli \'Ewidencja_powyzej\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableEwidencja_powyzej.Index_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUwagiNull() {
                return this.IsNull(this.tableEwidencja_powyzej.UwagiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUwagiNull() {
                this[this.tableEwidencja_powyzej.UwagiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndex_finansowyNull() {
                return this.IsNull(this.tableEwidencja_powyzej.Index_finansowyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndex_finansowyNull() {
                this[this.tableEwidencja_powyzej.Index_finansowyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PonizejStanOtwarciaRow : global::System.Data.DataRow {
            
            private PonizejStanOtwarciaDataTable tablePonizejStanOtwarcia;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal PonizejStanOtwarciaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePonizejStanOtwarcia = ((PonizejStanOtwarciaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tablePonizejStanOtwarcia.IdColumn]));
                }
                set {
                    this[this.tablePonizejStanOtwarcia.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj {
                get {
                    return ((string)(this[this.tablePonizejStanOtwarcia.RodzajColumn]));
                }
                set {
                    this[this.tablePonizejStanOtwarcia.RodzajColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tablePonizejStanOtwarcia.JMColumn]));
                }
                set {
                    this[this.tablePonizejStanOtwarcia.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rok {
                get {
                    return ((string)(this[this.tablePonizejStanOtwarcia.RokColumn]));
                }
                set {
                    this[this.tablePonizejStanOtwarcia.RokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tablePonizejStanOtwarcia.StanColumn]));
                }
                set {
                    this[this.tablePonizejStanOtwarcia.StanColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PowyzejStanOtwarciaRow : global::System.Data.DataRow {
            
            private PowyzejStanOtwarciaDataTable tablePowyzejStanOtwarcia;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal PowyzejStanOtwarciaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePowyzejStanOtwarcia = ((PowyzejStanOtwarciaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tablePowyzejStanOtwarcia.IdColumn]));
                }
                set {
                    this[this.tablePowyzejStanOtwarcia.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj {
                get {
                    return ((string)(this[this.tablePowyzejStanOtwarcia.RodzajColumn]));
                }
                set {
                    this[this.tablePowyzejStanOtwarcia.RodzajColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tablePowyzejStanOtwarcia.JMColumn]));
                }
                set {
                    this[this.tablePowyzejStanOtwarcia.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rok {
                get {
                    return ((string)(this[this.tablePowyzejStanOtwarcia.RokColumn]));
                }
                set {
                    this[this.tablePowyzejStanOtwarcia.RokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tablePowyzejStanOtwarcia.StanColumn]));
                }
                set {
                    this[this.tablePowyzejStanOtwarcia.StanColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StanOtwarciaSTRow : global::System.Data.DataRow {
            
            private StanOtwarciaSTDataTable tableStanOtwarciaST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal StanOtwarciaSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStanOtwarciaST = ((StanOtwarciaSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableStanOtwarciaST.IdColumn]));
                }
                set {
                    this[this.tableStanOtwarciaST.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj {
                get {
                    return ((string)(this[this.tableStanOtwarciaST.RodzajColumn]));
                }
                set {
                    this[this.tableStanOtwarciaST.RodzajColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JM {
                get {
                    return ((string)(this[this.tableStanOtwarciaST.JMColumn]));
                }
                set {
                    this[this.tableStanOtwarciaST.JMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rok {
                get {
                    return ((string)(this[this.tableStanOtwarciaST.RokColumn]));
                }
                set {
                    this[this.tableStanOtwarciaST.RokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Stan {
                get {
                    return ((string)(this[this.tableStanOtwarciaST.StanColumn]));
                }
                set {
                    this[this.tableStanOtwarciaST.StanColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FakturyRow : global::System.Data.DataRow {
            
            private FakturyDataTable tableFaktury;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FakturyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFaktury = ((FakturyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Lp {
                get {
                    return ((int)(this[this.tableFaktury.LpColumn]));
                }
                set {
                    this[this.tableFaktury.LpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Miesiac {
                get {
                    return ((string)(this[this.tableFaktury.MiesiacColumn]));
                }
                set {
                    this[this.tableFaktury.MiesiacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Paragraf {
                get {
                    return ((int)(this[this.tableFaktury.ParagrafColumn]));
                }
                set {
                    this[this.tableFaktury.ParagrafColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Pozycja_paragraf {
                get {
                    return ((int)(this[this.tableFaktury.Pozycja_paragrafColumn]));
                }
                set {
                    this[this.tableFaktury.Pozycja_paragrafColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nr_faktury {
                get {
                    return ((string)(this[this.tableFaktury.Nr_fakturyColumn]));
                }
                set {
                    this[this.tableFaktury.Nr_fakturyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Data_faktury {
                get {
                    return ((string)(this[this.tableFaktury.Data_fakturyColumn]));
                }
                set {
                    this[this.tableFaktury.Data_fakturyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dostawca {
                get {
                    return ((string)(this[this.tableFaktury.DostawcaColumn]));
                }
                set {
                    this[this.tableFaktury.DostawcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Specyfikacja {
                get {
                    return ((string)(this[this.tableFaktury.SpecyfikacjaColumn]));
                }
                set {
                    this[this.tableFaktury.SpecyfikacjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Ilosc {
                get {
                    return ((int)(this[this.tableFaktury.IloscColumn]));
                }
                set {
                    this[this.tableFaktury.IloscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Jednostka_miary {
                get {
                    return ((string)(this[this.tableFaktury.Jednostka_miaryColumn]));
                }
                set {
                    this[this.tableFaktury.Jednostka_miaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Indeks_finansowy {
                get {
                    try {
                        return ((int)(this[this.tableFaktury.Indeks_finansowyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Indeks_finansowy\' w tabeli \'Faktury\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableFaktury.Indeks_finansowyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rodzaj_ewidencji {
                get {
                    try {
                        return ((string)(this[this.tableFaktury.Rodzaj_ewidencjiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'Rodzaj_ewidencji\' w tabeli \'Faktury\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableFaktury.Rodzaj_ewidencjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wartosc {
                get {
                    return ((string)(this[this.tableFaktury.WartoscColumn]));
                }
                set {
                    this[this.tableFaktury.WartoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Termin_platnosci {
                get {
                    return ((string)(this[this.tableFaktury.Termin_platnosciColumn]));
                }
                set {
                    this[this.tableFaktury.Termin_platnosciColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Sposob_zaplaty {
                get {
                    return ((string)(this[this.tableFaktury.Sposob_zaplatyColumn]));
                }
                set {
                    this[this.tableFaktury.Sposob_zaplatyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Przekazano_do_DF {
                get {
                    return ((string)(this[this.tableFaktury.Przekazano_do_DFColumn]));
                }
                set {
                    this[this.tableFaktury.Przekazano_do_DFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Nazwisko_Imie {
                get {
                    return ((string)(this[this.tableFaktury.Nazwisko_ImieColumn]));
                }
                set {
                    this[this.tableFaktury.Nazwisko_ImieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Opis_faktury {
                get {
                    return ((string)(this[this.tableFaktury.Opis_fakturyColumn]));
                }
                set {
                    this[this.tableFaktury.Opis_fakturyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndeks_finansowyNull() {
                return this.IsNull(this.tableFaktury.Indeks_finansowyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndeks_finansowyNull() {
                this[this.tableFaktury.Indeks_finansowyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRodzaj_ewidencjiNull() {
                return this.IsNull(this.tableFaktury.Rodzaj_ewidencjiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRodzaj_ewidencjiNull() {
                this[this.tableFaktury.Rodzaj_ewidencjiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class EwiRowChangeEvent : global::System.EventArgs {
            
            private EwiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRowChangeEvent(EwiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public EwiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class HistoryRowChangeEvent : global::System.EventArgs {
            
            private HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRowChangeEvent(HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class KartaRowChangeEvent : global::System.EventArgs {
            
            private KartaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRowChangeEvent(KartaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KartaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Karta_konserwacjaRowChangeEvent : global::System.EventArgs {
            
            private Karta_konserwacjaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRowChangeEvent(Karta_konserwacjaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_konserwacjaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Karta_naprawyRowChangeEvent : global::System.EventArgs {
            
            private Karta_naprawyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRowChangeEvent(Karta_naprawyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Karta_naprawyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Ewidencja_STRowChangeEvent : global::System.EventArgs {
            
            private Ewidencja_STRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRowChangeEvent(Ewidencja_STRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_STRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Ewidencja_ponizejRowChangeEvent : global::System.EventArgs {
            
            private Ewidencja_ponizejRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRowChangeEvent(Ewidencja_ponizejRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_ponizejRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Ewidencja_powyzejRowChangeEvent : global::System.EventArgs {
            
            private Ewidencja_powyzejRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRowChangeEvent(Ewidencja_powyzejRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ewidencja_powyzejRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class PonizejStanOtwarciaRowChangeEvent : global::System.EventArgs {
            
            private PonizejStanOtwarciaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRowChangeEvent(PonizejStanOtwarciaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PonizejStanOtwarciaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class PowyzejStanOtwarciaRowChangeEvent : global::System.EventArgs {
            
            private PowyzejStanOtwarciaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRowChangeEvent(PowyzejStanOtwarciaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public PowyzejStanOtwarciaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class StanOtwarciaSTRowChangeEvent : global::System.EventArgs {
            
            private StanOtwarciaSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRowChangeEvent(StanOtwarciaSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public StanOtwarciaSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class FakturyRowChangeEvent : global::System.EventArgs {
            
            private FakturyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRowChangeEvent(FakturyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FakturyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EwiInf.EwidencjaDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EwiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public EwiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ewi";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Nr_ewidencyjny", "Nr_ewidencyjny");
            tableMapping.ColumnMappings.Add("Rodzaj_sprzętu", "Rodzaj_sprzętu");
            tableMapping.ColumnMappings.Add("Nazwa_Producent", "Nazwa_Producent");
            tableMapping.ColumnMappings.Add("Rok_produkcji", "Rok_produkcji");
            tableMapping.ColumnMappings.Add("Termin_gwarancji", "Termin_gwarancji");
            tableMapping.ColumnMappings.Add("Nr_seryjny", "Nr_seryjny");
            tableMapping.ColumnMappings.Add("Wartosc_zakupu", "Wartosc_zakupu");
            tableMapping.ColumnMappings.Add("Nr_faktury", "Nr_faktury");
            tableMapping.ColumnMappings.Add("Rodzaj_ewidencji", "Rodzaj_ewidencji");
            tableMapping.ColumnMappings.Add("Mac_adres", "Mac_adres");
            tableMapping.ColumnMappings.Add("IP_adres1", "IP_adres1");
            tableMapping.ColumnMappings.Add("IP_adres2", "IP_adres2");
            tableMapping.ColumnMappings.Add("IP_adres3", "IP_adres3");
            tableMapping.ColumnMappings.Add("Karta_grafiki1", "Karta_grafiki1");
            tableMapping.ColumnMappings.Add("Karta_grafiki2", "Karta_grafiki2");
            tableMapping.ColumnMappings.Add("Procesor", "Procesor");
            tableMapping.ColumnMappings.Add("Ram", "Ram");
            tableMapping.ColumnMappings.Add("Dysk1", "Dysk1");
            tableMapping.ColumnMappings.Add("Dysk2", "Dysk2");
            tableMapping.ColumnMappings.Add("Budynek", "Budynek");
            tableMapping.ColumnMappings.Add("Pietro", "Pietro");
            tableMapping.ColumnMappings.Add("Pomieszczenie", "Pomieszczenie");
            tableMapping.ColumnMappings.Add("Informatyka_Lacznosc", "Informatyka_Lacznosc");
            tableMapping.ColumnMappings.Add("System_operacyjny", "System_operacyjny");
            tableMapping.ColumnMappings.Add("Numer_karty", "Numer_karty");
            tableMapping.ColumnMappings.Add("Uwagi", "Uwagi");
            tableMapping.ColumnMappings.Add("Index_finansowy", "Index_finansowy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Ewi] WHERE (([Id] = @Original_Id) AND ([Nr_ewidencyjny] = @Original_" +
                "Nr_ewidencyjny) AND ([Rodzaj_sprzętu] = @Original_Rodzaj_sprzętu) AND ([Nazwa_Pr" +
                "oducent] = @Original_Nazwa_Producent) AND ([Rok_produkcji] = @Original_Rok_produ" +
                "kcji) AND ([Termin_gwarancji] = @Original_Termin_gwarancji) AND ((@IsNull_Nr_ser" +
                "yjny = 1 AND [Nr_seryjny] IS NULL) OR ([Nr_seryjny] = @Original_Nr_seryjny)) AND" +
                " ([Wartosc_zakupu] = @Original_Wartosc_zakupu) AND ([Nr_faktury] = @Original_Nr_" +
                "faktury) AND ([Rodzaj_ewidencji] = @Original_Rodzaj_ewidencji) AND ((@IsNull_Mac" +
                "_adres = 1 AND [Mac_adres] IS NULL) OR ([Mac_adres] = @Original_Mac_adres)) AND " +
                "((@IsNull_IP_adres1 = 1 AND [IP_adres1] IS NULL) OR ([IP_adres1] = @Original_IP_" +
                "adres1)) AND ((@IsNull_IP_adres2 = 1 AND [IP_adres2] IS NULL) OR ([IP_adres2] = " +
                "@Original_IP_adres2)) AND ((@IsNull_IP_adres3 = 1 AND [IP_adres3] IS NULL) OR ([" +
                "IP_adres3] = @Original_IP_adres3)) AND ((@IsNull_Karta_grafiki1 = 1 AND [Karta_g" +
                "rafiki1] IS NULL) OR ([Karta_grafiki1] = @Original_Karta_grafiki1)) AND ((@IsNul" +
                "l_Karta_grafiki2 = 1 AND [Karta_grafiki2] IS NULL) OR ([Karta_grafiki2] = @Origi" +
                "nal_Karta_grafiki2)) AND ((@IsNull_Procesor = 1 AND [Procesor] IS NULL) OR ([Pro" +
                "cesor] = @Original_Procesor)) AND ((@IsNull_Ram = 1 AND [Ram] IS NULL) OR ([Ram]" +
                " = @Original_Ram)) AND ((@IsNull_Dysk1 = 1 AND [Dysk1] IS NULL) OR ([Dysk1] = @O" +
                "riginal_Dysk1)) AND ((@IsNull_Dysk2 = 1 AND [Dysk2] IS NULL) OR ([Dysk2] = @Orig" +
                "inal_Dysk2)) AND ([Budynek] = @Original_Budynek) AND ([Pietro] = @Original_Pietr" +
                "o) AND ([Pomieszczenie] = @Original_Pomieszczenie) AND ([Informatyka_Lacznosc] =" +
                " @Original_Informatyka_Lacznosc) AND ((@IsNull_Numer_karty = 1 AND [Numer_karty]" +
                " IS NULL) OR ([Numer_karty] = @Original_Numer_karty)) AND ((@IsNull_System_opera" +
                "cyjny = 1 AND [System_operacyjny] IS NULL) OR ([System_operacyjny] = @Original_S" +
                "ystem_operacyjny)) AND ((@IsNull_Index_finansowy = 1 AND [Index_finansowy] IS NU" +
                "LL) OR ([Index_finansowy] = @Original_Index_finansowy)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_ewidencyjny", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_sprzętu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzętu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_Producent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_Producent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok_produkcji", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok_produkcji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Termin_gwarancji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_gwarancji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nr_seryjny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mac_adres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mac_adres", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Karta_grafiki1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Karta_grafiki1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Karta_grafiki2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Karta_grafiki2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Procesor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Procesor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ram", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ram", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dysk1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dysk1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dysk2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dysk2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Numer_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numer_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_System_operacyjny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_System_operacyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Ewi] ([Id], [Nr_ewidencyjny], [Rodzaj_sprzętu], [Nazwa_Producent], [Rok_produkcji], [Termin_gwarancji], [Nr_seryjny], [Wartosc_zakupu], [Nr_faktury], [Rodzaj_ewidencji], [Mac_adres], [IP_adres1], [IP_adres2], [IP_adres3], [Karta_grafiki1], [Karta_grafiki2], [Procesor], [Ram], [Dysk1], [Dysk2], [Budynek], [Pietro], [Pomieszczenie], [Informatyka_Lacznosc], [Numer_karty], [System_operacyjny], [Uwagi], [Index_finansowy]) VALUES (@Id, @Nr_ewidencyjny, @Rodzaj_sprzętu, @Nazwa_Producent, @Rok_produkcji, @Termin_gwarancji, @Nr_seryjny, @Wartosc_zakupu, @Nr_faktury, @Rodzaj_ewidencji, @Mac_adres, @IP_adres1, @IP_adres2, @IP_adres3, @Karta_grafiki1, @Karta_grafiki2, @Procesor, @Ram, @Dysk1, @Dysk2, @Budynek, @Pietro, @Pomieszczenie, @Informatyka_Lacznosc, @Numer_karty, @System_operacyjny, @Uwagi, @Index_finansowy);
SELECT Id, Nr_ewidencyjny, Rodzaj_sprzętu, Nazwa_Producent, Rok_produkcji, Termin_gwarancji, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Mac_adres, IP_adres1, IP_adres2, IP_adres3, Karta_grafiki1, Karta_grafiki2, Procesor, Ram, Dysk1, Dysk2, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Numer_karty, System_operacyjny, Uwagi, Index_finansowy FROM Ewi WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_ewidencyjny", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_sprzętu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzętu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_Producent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_Producent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok_produkcji", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok_produkcji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Termin_gwarancji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_gwarancji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mac_adres", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Karta_grafiki1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Karta_grafiki2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Procesor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ram", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dysk1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dysk2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numer_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@System_operacyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Ewi] SET [Id] = @Id, [Nr_ewidencyjny] = @Nr_ewidencyjny, [Rodzaj_sprzętu]" +
                " = @Rodzaj_sprzętu, [Nazwa_Producent] = @Nazwa_Producent, [Rok_produkcji] = @Rok" +
                "_produkcji, [Termin_gwarancji] = @Termin_gwarancji, [Nr_seryjny] = @Nr_seryjny, " +
                "[Wartosc_zakupu] = @Wartosc_zakupu, [Nr_faktury] = @Nr_faktury, [Rodzaj_ewidencj" +
                "i] = @Rodzaj_ewidencji, [Mac_adres] = @Mac_adres, [IP_adres1] = @IP_adres1, [IP_" +
                "adres2] = @IP_adres2, [IP_adres3] = @IP_adres3, [Karta_grafiki1] = @Karta_grafik" +
                "i1, [Karta_grafiki2] = @Karta_grafiki2, [Procesor] = @Procesor, [Ram] = @Ram, [D" +
                "ysk1] = @Dysk1, [Dysk2] = @Dysk2, [Budynek] = @Budynek, [Pietro] = @Pietro, [Pom" +
                "ieszczenie] = @Pomieszczenie, [Informatyka_Lacznosc] = @Informatyka_Lacznosc, [N" +
                "umer_karty] = @Numer_karty, [System_operacyjny] = @System_operacyjny, [Uwagi] = " +
                "@Uwagi, [Index_finansowy] = @Index_finansowy WHERE (([Id] = @Original_Id) AND ([" +
                "Nr_ewidencyjny] = @Original_Nr_ewidencyjny) AND ([Rodzaj_sprzętu] = @Original_Ro" +
                "dzaj_sprzętu) AND ([Nazwa_Producent] = @Original_Nazwa_Producent) AND ([Rok_prod" +
                "ukcji] = @Original_Rok_produkcji) AND ([Termin_gwarancji] = @Original_Termin_gwa" +
                "rancji) AND ((@IsNull_Nr_seryjny = 1 AND [Nr_seryjny] IS NULL) OR ([Nr_seryjny] " +
                "= @Original_Nr_seryjny)) AND ([Wartosc_zakupu] = @Original_Wartosc_zakupu) AND (" +
                "[Nr_faktury] = @Original_Nr_faktury) AND ([Rodzaj_ewidencji] = @Original_Rodzaj_" +
                "ewidencji) AND ((@IsNull_Mac_adres = 1 AND [Mac_adres] IS NULL) OR ([Mac_adres] " +
                "= @Original_Mac_adres)) AND ((@IsNull_IP_adres1 = 1 AND [IP_adres1] IS NULL) OR " +
                "([IP_adres1] = @Original_IP_adres1)) AND ((@IsNull_IP_adres2 = 1 AND [IP_adres2]" +
                " IS NULL) OR ([IP_adres2] = @Original_IP_adres2)) AND ((@IsNull_IP_adres3 = 1 AN" +
                "D [IP_adres3] IS NULL) OR ([IP_adres3] = @Original_IP_adres3)) AND ((@IsNull_Kar" +
                "ta_grafiki1 = 1 AND [Karta_grafiki1] IS NULL) OR ([Karta_grafiki1] = @Original_K" +
                "arta_grafiki1)) AND ((@IsNull_Karta_grafiki2 = 1 AND [Karta_grafiki2] IS NULL) O" +
                "R ([Karta_grafiki2] = @Original_Karta_grafiki2)) AND ((@IsNull_Procesor = 1 AND " +
                "[Procesor] IS NULL) OR ([Procesor] = @Original_Procesor)) AND ((@IsNull_Ram = 1 " +
                "AND [Ram] IS NULL) OR ([Ram] = @Original_Ram)) AND ((@IsNull_Dysk1 = 1 AND [Dysk" +
                "1] IS NULL) OR ([Dysk1] = @Original_Dysk1)) AND ((@IsNull_Dysk2 = 1 AND [Dysk2] " +
                "IS NULL) OR ([Dysk2] = @Original_Dysk2)) AND ([Budynek] = @Original_Budynek) AND" +
                " ([Pietro] = @Original_Pietro) AND ([Pomieszczenie] = @Original_Pomieszczenie) A" +
                "ND ([Informatyka_Lacznosc] = @Original_Informatyka_Lacznosc) AND ((@IsNull_Numer" +
                "_karty = 1 AND [Numer_karty] IS NULL) OR ([Numer_karty] = @Original_Numer_karty)" +
                ") AND ((@IsNull_System_operacyjny = 1 AND [System_operacyjny] IS NULL) OR ([Syst" +
                "em_operacyjny] = @Original_System_operacyjny)) AND ((@IsNull_Index_finansowy = 1" +
                " AND [Index_finansowy] IS NULL) OR ([Index_finansowy] = @Original_Index_finansow" +
                "y)));\r\nSELECT Id, Nr_ewidencyjny, Rodzaj_sprzętu, Nazwa_Producent, Rok_produkcji" +
                ", Termin_gwarancji, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Ma" +
                "c_adres, IP_adres1, IP_adres2, IP_adres3, Karta_grafiki1, Karta_grafiki2, Proces" +
                "or, Ram, Dysk1, Dysk2, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Num" +
                "er_karty, System_operacyjny, Uwagi, Index_finansowy FROM Ewi WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_ewidencyjny", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_sprzętu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzętu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_Producent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_Producent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok_produkcji", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok_produkcji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Termin_gwarancji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_gwarancji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mac_adres", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_adres3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Karta_grafiki1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Karta_grafiki2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Procesor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ram", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dysk1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dysk2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numer_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@System_operacyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_ewidencyjny", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_sprzętu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzętu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_Producent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_Producent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok_produkcji", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok_produkcji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Termin_gwarancji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_gwarancji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nr_seryjny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mac_adres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mac_adres", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mac_adres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_adres3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_adres3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_adres3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Karta_grafiki1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Karta_grafiki1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Karta_grafiki2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Karta_grafiki2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Karta_grafiki2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Procesor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Procesor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Procesor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ram", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ram", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ram", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dysk1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dysk1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dysk2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dysk2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dysk2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Numer_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numer_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_System_operacyjny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_System_operacyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_operacyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id, Nr_ewidencyjny, Rodzaj_sprzętu, Nazwa_Producent, Rok_produkcji, Termin_gwarancji, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Mac_adres, IP_adres1, IP_adres2, IP_adres3, Karta_grafiki1, 
                         Karta_grafiki2, Procesor, Ram, Dysk1, Dysk2, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Numer_karty, System_operacyjny, Uwagi, Index_finansowy
FROM            Ewi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.EwiDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.EwiDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.EwiDataTable dataTable = new EwidencjaDataSet.EwiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.EwiDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ewi");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_Nr_ewidencyjny, 
                    string Original_Rodzaj_sprzętu, 
                    string Original_Nazwa_Producent, 
                    string Original_Rok_produkcji, 
                    string Original_Termin_gwarancji, 
                    string Original_Nr_seryjny, 
                    string Original_Wartosc_zakupu, 
                    string Original_Nr_faktury, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Mac_adres, 
                    string Original_IP_adres1, 
                    string Original_IP_adres2, 
                    string Original_IP_adres3, 
                    string Original_Karta_grafiki1, 
                    string Original_Karta_grafiki2, 
                    string Original_Procesor, 
                    string Original_Ram, 
                    string Original_Dysk1, 
                    string Original_Dysk2, 
                    string Original_Budynek, 
                    string Original_Pietro, 
                    string Original_Pomieszczenie, 
                    string Original_Informatyka_Lacznosc, 
                    string Original_Numer_karty, 
                    string Original_System_operacyjny, 
                    global::System.Nullable<int> Original_Index_finansowy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_ewidencyjny");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nr_ewidencyjny));
            }
            if ((Original_Rodzaj_sprzętu == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_sprzętu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Rodzaj_sprzętu));
            }
            if ((Original_Nazwa_Producent == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_Producent");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Nazwa_Producent));
            }
            if ((Original_Rok_produkcji == null)) {
                throw new global::System.ArgumentNullException("Original_Rok_produkcji");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Rok_produkcji));
            }
            if ((Original_Termin_gwarancji == null)) {
                throw new global::System.ArgumentNullException("Original_Termin_gwarancji");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Termin_gwarancji));
            }
            if ((Original_Nr_seryjny == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Nr_seryjny));
            }
            if ((Original_Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc_zakupu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Wartosc_zakupu));
            }
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_ewidencji");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Mac_adres == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Mac_adres));
            }
            if ((Original_IP_adres1 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_IP_adres1));
            }
            if ((Original_IP_adres2 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_IP_adres2));
            }
            if ((Original_IP_adres3 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_IP_adres3));
            }
            if ((Original_Karta_grafiki1 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Karta_grafiki1));
            }
            if ((Original_Karta_grafiki2 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Karta_grafiki2));
            }
            if ((Original_Procesor == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Procesor));
            }
            if ((Original_Ram == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Ram));
            }
            if ((Original_Dysk1 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Dysk1));
            }
            if ((Original_Dysk2 == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Dysk2));
            }
            if ((Original_Budynek == null)) {
                throw new global::System.ArgumentNullException("Original_Budynek");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Budynek));
            }
            if ((Original_Pietro == null)) {
                throw new global::System.ArgumentNullException("Original_Pietro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Pietro));
            }
            if ((Original_Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Original_Pomieszczenie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Pomieszczenie));
            }
            if ((Original_Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Original_Informatyka_Lacznosc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Informatyka_Lacznosc));
            }
            if ((Original_Numer_karty == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Numer_karty));
            }
            if ((Original_System_operacyjny == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_System_operacyjny));
            }
            if ((Original_Index_finansowy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_Index_finansowy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Id, 
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzętu, 
                    string Nazwa_Producent, 
                    string Rok_produkcji, 
                    string Termin_gwarancji, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Mac_adres, 
                    string IP_adres1, 
                    string IP_adres2, 
                    string IP_adres3, 
                    string Karta_grafiki1, 
                    string Karta_grafiki2, 
                    string Procesor, 
                    string Ram, 
                    string Dysk1, 
                    string Dysk2, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Numer_karty, 
                    string System_operacyjny, 
                    string Uwagi, 
                    global::System.Nullable<int> Index_finansowy) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Nr_ewidencyjny");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nr_ewidencyjny));
            }
            if ((Rodzaj_sprzętu == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_sprzętu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Rodzaj_sprzętu));
            }
            if ((Nazwa_Producent == null)) {
                throw new global::System.ArgumentNullException("Nazwa_Producent");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Nazwa_Producent));
            }
            if ((Rok_produkcji == null)) {
                throw new global::System.ArgumentNullException("Rok_produkcji");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Rok_produkcji));
            }
            if ((Termin_gwarancji == null)) {
                throw new global::System.ArgumentNullException("Termin_gwarancji");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Termin_gwarancji));
            }
            if ((Nr_seryjny == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Nr_seryjny));
            }
            if ((Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Wartosc_zakupu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Wartosc_zakupu));
            }
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Nr_faktury));
            }
            if ((Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_ewidencji");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Mac_adres == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Mac_adres));
            }
            if ((IP_adres1 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(IP_adres1));
            }
            if ((IP_adres2 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(IP_adres2));
            }
            if ((IP_adres3 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(IP_adres3));
            }
            if ((Karta_grafiki1 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Karta_grafiki1));
            }
            if ((Karta_grafiki2 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Karta_grafiki2));
            }
            if ((Procesor == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Procesor));
            }
            if ((Ram == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Ram));
            }
            if ((Dysk1 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Dysk1));
            }
            if ((Dysk2 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Dysk2));
            }
            if ((Budynek == null)) {
                throw new global::System.ArgumentNullException("Budynek");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Budynek));
            }
            if ((Pietro == null)) {
                throw new global::System.ArgumentNullException("Pietro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Pietro));
            }
            if ((Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Pomieszczenie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Pomieszczenie));
            }
            if ((Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Informatyka_Lacznosc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Informatyka_Lacznosc));
            }
            if ((Numer_karty == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Numer_karty));
            }
            if ((System_operacyjny == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(System_operacyjny));
            }
            if ((Uwagi == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Uwagi));
            }
            if ((Index_finansowy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Index_finansowy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzętu, 
                    string Nazwa_Producent, 
                    string Rok_produkcji, 
                    string Termin_gwarancji, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Mac_adres, 
                    string IP_adres1, 
                    string IP_adres2, 
                    string IP_adres3, 
                    string Karta_grafiki1, 
                    string Karta_grafiki2, 
                    string Procesor, 
                    string Ram, 
                    string Dysk1, 
                    string Dysk2, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Numer_karty, 
                    string System_operacyjny, 
                    string Uwagi, 
                    global::System.Nullable<int> Index_finansowy, 
                    int Original_Id, 
                    string Original_Nr_ewidencyjny, 
                    string Original_Rodzaj_sprzętu, 
                    string Original_Nazwa_Producent, 
                    string Original_Rok_produkcji, 
                    string Original_Termin_gwarancji, 
                    string Original_Nr_seryjny, 
                    string Original_Wartosc_zakupu, 
                    string Original_Nr_faktury, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Mac_adres, 
                    string Original_IP_adres1, 
                    string Original_IP_adres2, 
                    string Original_IP_adres3, 
                    string Original_Karta_grafiki1, 
                    string Original_Karta_grafiki2, 
                    string Original_Procesor, 
                    string Original_Ram, 
                    string Original_Dysk1, 
                    string Original_Dysk2, 
                    string Original_Budynek, 
                    string Original_Pietro, 
                    string Original_Pomieszczenie, 
                    string Original_Informatyka_Lacznosc, 
                    string Original_Numer_karty, 
                    string Original_System_operacyjny, 
                    global::System.Nullable<int> Original_Index_finansowy) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Nr_ewidencyjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nr_ewidencyjny));
            }
            if ((Rodzaj_sprzętu == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_sprzętu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Rodzaj_sprzętu));
            }
            if ((Nazwa_Producent == null)) {
                throw new global::System.ArgumentNullException("Nazwa_Producent");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Nazwa_Producent));
            }
            if ((Rok_produkcji == null)) {
                throw new global::System.ArgumentNullException("Rok_produkcji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Rok_produkcji));
            }
            if ((Termin_gwarancji == null)) {
                throw new global::System.ArgumentNullException("Termin_gwarancji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Termin_gwarancji));
            }
            if ((Nr_seryjny == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Nr_seryjny));
            }
            if ((Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Wartosc_zakupu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Wartosc_zakupu));
            }
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Nr_faktury));
            }
            if ((Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_ewidencji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Mac_adres == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Mac_adres));
            }
            if ((IP_adres1 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(IP_adres1));
            }
            if ((IP_adres2 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(IP_adres2));
            }
            if ((IP_adres3 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(IP_adres3));
            }
            if ((Karta_grafiki1 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Karta_grafiki1));
            }
            if ((Karta_grafiki2 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Karta_grafiki2));
            }
            if ((Procesor == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Procesor));
            }
            if ((Ram == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Ram));
            }
            if ((Dysk1 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Dysk1));
            }
            if ((Dysk2 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Dysk2));
            }
            if ((Budynek == null)) {
                throw new global::System.ArgumentNullException("Budynek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Budynek));
            }
            if ((Pietro == null)) {
                throw new global::System.ArgumentNullException("Pietro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Pietro));
            }
            if ((Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Pomieszczenie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Pomieszczenie));
            }
            if ((Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Informatyka_Lacznosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Informatyka_Lacznosc));
            }
            if ((Numer_karty == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Numer_karty));
            }
            if ((System_operacyjny == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(System_operacyjny));
            }
            if ((Uwagi == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Uwagi));
            }
            if ((Index_finansowy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Index_finansowy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Id));
            if ((Original_Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_ewidencyjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Nr_ewidencyjny));
            }
            if ((Original_Rodzaj_sprzętu == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_sprzętu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Rodzaj_sprzętu));
            }
            if ((Original_Nazwa_Producent == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_Producent");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Nazwa_Producent));
            }
            if ((Original_Rok_produkcji == null)) {
                throw new global::System.ArgumentNullException("Original_Rok_produkcji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Rok_produkcji));
            }
            if ((Original_Termin_gwarancji == null)) {
                throw new global::System.ArgumentNullException("Original_Termin_gwarancji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Termin_gwarancji));
            }
            if ((Original_Nr_seryjny == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Nr_seryjny));
            }
            if ((Original_Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc_zakupu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Wartosc_zakupu));
            }
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_ewidencji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Mac_adres == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Mac_adres));
            }
            if ((Original_IP_adres1 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_IP_adres1));
            }
            if ((Original_IP_adres2 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_IP_adres2));
            }
            if ((Original_IP_adres3 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_IP_adres3));
            }
            if ((Original_Karta_grafiki1 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Karta_grafiki1));
            }
            if ((Original_Karta_grafiki2 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_Karta_grafiki2));
            }
            if ((Original_Procesor == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Procesor));
            }
            if ((Original_Ram == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_Ram));
            }
            if ((Original_Dysk1 == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Dysk1));
            }
            if ((Original_Dysk2 == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Dysk2));
            }
            if ((Original_Budynek == null)) {
                throw new global::System.ArgumentNullException("Original_Budynek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_Budynek));
            }
            if ((Original_Pietro == null)) {
                throw new global::System.ArgumentNullException("Original_Pietro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Pietro));
            }
            if ((Original_Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Original_Pomieszczenie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Pomieszczenie));
            }
            if ((Original_Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Original_Informatyka_Lacznosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Informatyka_Lacznosc));
            }
            if ((Original_Numer_karty == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_Numer_karty));
            }
            if ((Original_System_operacyjny == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_System_operacyjny));
            }
            if ((Original_Index_finansowy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_Index_finansowy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzętu, 
                    string Nazwa_Producent, 
                    string Rok_produkcji, 
                    string Termin_gwarancji, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Mac_adres, 
                    string IP_adres1, 
                    string IP_adres2, 
                    string IP_adres3, 
                    string Karta_grafiki1, 
                    string Karta_grafiki2, 
                    string Procesor, 
                    string Ram, 
                    string Dysk1, 
                    string Dysk2, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Numer_karty, 
                    string System_operacyjny, 
                    string Uwagi, 
                    global::System.Nullable<int> Index_finansowy, 
                    int Original_Id, 
                    string Original_Nr_ewidencyjny, 
                    string Original_Rodzaj_sprzętu, 
                    string Original_Nazwa_Producent, 
                    string Original_Rok_produkcji, 
                    string Original_Termin_gwarancji, 
                    string Original_Nr_seryjny, 
                    string Original_Wartosc_zakupu, 
                    string Original_Nr_faktury, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Mac_adres, 
                    string Original_IP_adres1, 
                    string Original_IP_adres2, 
                    string Original_IP_adres3, 
                    string Original_Karta_grafiki1, 
                    string Original_Karta_grafiki2, 
                    string Original_Procesor, 
                    string Original_Ram, 
                    string Original_Dysk1, 
                    string Original_Dysk2, 
                    string Original_Budynek, 
                    string Original_Pietro, 
                    string Original_Pomieszczenie, 
                    string Original_Informatyka_Lacznosc, 
                    string Original_Numer_karty, 
                    string Original_System_operacyjny, 
                    global::System.Nullable<int> Original_Index_finansowy) {
            return this.Update(Original_Id, Nr_ewidencyjny, Rodzaj_sprzętu, Nazwa_Producent, Rok_produkcji, Termin_gwarancji, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Mac_adres, IP_adres1, IP_adres2, IP_adres3, Karta_grafiki1, Karta_grafiki2, Procesor, Ram, Dysk1, Dysk2, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Numer_karty, System_operacyjny, Uwagi, Index_finansowy, Original_Id, Original_Nr_ewidencyjny, Original_Rodzaj_sprzętu, Original_Nazwa_Producent, Original_Rok_produkcji, Original_Termin_gwarancji, Original_Nr_seryjny, Original_Wartosc_zakupu, Original_Nr_faktury, Original_Rodzaj_ewidencji, Original_Mac_adres, Original_IP_adres1, Original_IP_adres2, Original_IP_adres3, Original_Karta_grafiki1, Original_Karta_grafiki2, Original_Procesor, Original_Ram, Original_Dysk1, Original_Dysk2, Original_Budynek, Original_Pietro, Original_Pomieszczenie, Original_Informatyka_Lacznosc, Original_Numer_karty, Original_System_operacyjny, Original_Index_finansowy);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "History";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Nr_ewidencyjny", "Nr_ewidencyjny");
            tableMapping.ColumnMappings.Add("Rodzaj_sprzetu", "Rodzaj_sprzetu");
            tableMapping.ColumnMappings.Add("Nazwa_producenta", "Nazwa_producenta");
            tableMapping.ColumnMappings.Add("Budynek", "Budynek");
            tableMapping.ColumnMappings.Add("Pietro", "Pietro");
            tableMapping.ColumnMappings.Add("Pomieszczenie", "Pomieszczenie");
            tableMapping.ColumnMappings.Add("Informatyka_Lacznosc", "Informatyka_Lacznosc");
            tableMapping.ColumnMappings.Add("Uwagi", "Uwagi");
            tableMapping.ColumnMappings.Add("Index_finansowy", "Index_finansowy");
            tableMapping.ColumnMappings.Add("Kto_modyfikowal", "Kto_modyfikowal");
            tableMapping.ColumnMappings.Add("Nr_seryjny", "Nr_seryjny");
            tableMapping.ColumnMappings.Add("Wartosc_zakupu", "Wartosc_zakupu");
            tableMapping.ColumnMappings.Add("Nr_faktury", "Nr_faktury");
            tableMapping.ColumnMappings.Add("Rodzaj_ewidencji", "Rodzaj_ewidencji");
            tableMapping.ColumnMappings.Add("Data_usuniecia", "Data_usuniecia");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [History] WHERE (([Id] = @Original_Id) AND ([Nr_ewidencyjny] = @Original_Nr_ewidencyjny) AND ([Rodzaj_sprzetu] = @Original_Rodzaj_sprzetu) AND ([Nazwa_producenta] = @Original_Nazwa_producenta) AND ([Budynek] = @Original_Budynek) AND ([Pietro] = @Original_Pietro) AND ([Pomieszczenie] = @Original_Pomieszczenie) AND ([Informatyka_Lacznosc] = @Original_Informatyka_Lacznosc) AND ((@IsNull_Index_finansowy = 1 AND [Index_finansowy] IS NULL) OR ([Index_finansowy] = @Original_Index_finansowy)) AND ([Kto_modyfikowal] = @Original_Kto_modyfikowal) AND ([Nr_seryjny] = @Original_Nr_seryjny) AND ([Wartosc_zakupu] = @Original_Wartosc_zakupu) AND ([Nr_faktury] = @Original_Nr_faktury) AND ([Rodzaj_ewidencji] = @Original_Rodzaj_ewidencji) AND ((@IsNull_Data_usuniecia = 1 AND [Data_usuniecia] IS NULL) OR ([Data_usuniecia] = @Original_Data_usuniecia)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_ewidencyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_sprzetu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzetu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_producenta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_producenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Index_finansowy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kto_modyfikowal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kto_modyfikowal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_usuniecia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_usuniecia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [History] ([Id], [Nr_ewidencyjny], [Rodzaj_sprzetu], [Nazwa_producenta], [Budynek], [Pietro], [Pomieszczenie], [Informatyka_Lacznosc], [Uwagi], [Index_finansowy], [Kto_modyfikowal], [Nr_seryjny], [Wartosc_zakupu], [Nr_faktury], [Rodzaj_ewidencji], [Data_usuniecia]) VALUES (@Id, @Nr_ewidencyjny, @Rodzaj_sprzetu, @Nazwa_producenta, @Budynek, @Pietro, @Pomieszczenie, @Informatyka_Lacznosc, @Uwagi, @Index_finansowy, @Kto_modyfikowal, @Nr_seryjny, @Wartosc_zakupu, @Nr_faktury, @Rodzaj_ewidencji, @Data_usuniecia);
SELECT Id, Nr_ewidencyjny, Rodzaj_sprzetu, Nazwa_producenta, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Uwagi, Index_finansowy, Kto_modyfikowal, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Data_usuniecia FROM History WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_ewidencyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_sprzetu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzetu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_producenta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_producenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index_finansowy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kto_modyfikowal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kto_modyfikowal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_usuniecia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [History] SET [Id] = @Id, [Nr_ewidencyjny] = @Nr_ewidencyjny, [Rodzaj_sprz" +
                "etu] = @Rodzaj_sprzetu, [Nazwa_producenta] = @Nazwa_producenta, [Budynek] = @Bud" +
                "ynek, [Pietro] = @Pietro, [Pomieszczenie] = @Pomieszczenie, [Informatyka_Lacznos" +
                "c] = @Informatyka_Lacznosc, [Uwagi] = @Uwagi, [Index_finansowy] = @Index_finanso" +
                "wy, [Kto_modyfikowal] = @Kto_modyfikowal, [Nr_seryjny] = @Nr_seryjny, [Wartosc_z" +
                "akupu] = @Wartosc_zakupu, [Nr_faktury] = @Nr_faktury, [Rodzaj_ewidencji] = @Rodz" +
                "aj_ewidencji, [Data_usuniecia] = @Data_usuniecia WHERE (([Id] = @Original_Id) AN" +
                "D ([Nr_ewidencyjny] = @Original_Nr_ewidencyjny) AND ([Rodzaj_sprzetu] = @Origina" +
                "l_Rodzaj_sprzetu) AND ([Nazwa_producenta] = @Original_Nazwa_producenta) AND ([Bu" +
                "dynek] = @Original_Budynek) AND ([Pietro] = @Original_Pietro) AND ([Pomieszczeni" +
                "e] = @Original_Pomieszczenie) AND ([Informatyka_Lacznosc] = @Original_Informatyk" +
                "a_Lacznosc) AND ((@IsNull_Index_finansowy = 1 AND [Index_finansowy] IS NULL) OR " +
                "([Index_finansowy] = @Original_Index_finansowy)) AND ([Kto_modyfikowal] = @Origi" +
                "nal_Kto_modyfikowal) AND ([Nr_seryjny] = @Original_Nr_seryjny) AND ([Wartosc_zak" +
                "upu] = @Original_Wartosc_zakupu) AND ([Nr_faktury] = @Original_Nr_faktury) AND (" +
                "[Rodzaj_ewidencji] = @Original_Rodzaj_ewidencji) AND ((@IsNull_Data_usuniecia = " +
                "1 AND [Data_usuniecia] IS NULL) OR ([Data_usuniecia] = @Original_Data_usuniecia)" +
                "));\r\nSELECT Id, Nr_ewidencyjny, Rodzaj_sprzetu, Nazwa_producenta, Budynek, Pietr" +
                "o, Pomieszczenie, Informatyka_Lacznosc, Uwagi, Index_finansowy, Kto_modyfikowal," +
                " Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Data_usuniecia FROM H" +
                "istory WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_ewidencyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_sprzetu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzetu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_producenta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_producenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index_finansowy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Kto_modyfikowal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kto_modyfikowal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_usuniecia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_ewidencyjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_ewidencyjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_sprzetu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_sprzetu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_producenta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_producenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budynek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budynek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pietro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pietro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pomieszczenie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pomieszczenie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Informatyka_Lacznosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Informatyka_Lacznosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Index_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Index_finansowy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Index_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Kto_modyfikowal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Kto_modyfikowal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_usuniecia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_usuniecia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_usuniecia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Nr_ewidencyjny, Rodzaj_sprzetu, Nazwa_producenta, Budynek, Pietro, Pom" +
                "ieszczenie, Informatyka_Lacznosc, Uwagi, Index_finansowy, Kto_modyfikowal, Nr_se" +
                "ryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Data_usuniecia FROM History" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.HistoryDataTable dataTable = new EwidencjaDataSet.HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Nr_ewidencyjny, string Original_Rodzaj_sprzetu, string Original_Nazwa_producenta, string Original_Budynek, string Original_Pietro, string Original_Pomieszczenie, string Original_Informatyka_Lacznosc, string Original_Index_finansowy, string Original_Kto_modyfikowal, string Original_Nr_seryjny, string Original_Wartosc_zakupu, string Original_Nr_faktury, string Original_Rodzaj_ewidencji, string Original_Data_usuniecia) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_ewidencyjny");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nr_ewidencyjny));
            }
            if ((Original_Rodzaj_sprzetu == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_sprzetu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Rodzaj_sprzetu));
            }
            if ((Original_Nazwa_producenta == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_producenta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Nazwa_producenta));
            }
            if ((Original_Budynek == null)) {
                throw new global::System.ArgumentNullException("Original_Budynek");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Budynek));
            }
            if ((Original_Pietro == null)) {
                throw new global::System.ArgumentNullException("Original_Pietro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Pietro));
            }
            if ((Original_Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Original_Pomieszczenie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Pomieszczenie));
            }
            if ((Original_Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Original_Informatyka_Lacznosc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Informatyka_Lacznosc));
            }
            if ((Original_Index_finansowy == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Index_finansowy));
            }
            if ((Original_Kto_modyfikowal == null)) {
                throw new global::System.ArgumentNullException("Original_Kto_modyfikowal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Kto_modyfikowal));
            }
            if ((Original_Nr_seryjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_seryjny");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Nr_seryjny));
            }
            if ((Original_Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc_zakupu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Wartosc_zakupu));
            }
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_ewidencji");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Data_usuniecia == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Data_usuniecia));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Id, 
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzetu, 
                    string Nazwa_producenta, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Uwagi, 
                    string Index_finansowy, 
                    string Kto_modyfikowal, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Data_usuniecia) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Nr_ewidencyjny");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nr_ewidencyjny));
            }
            if ((Rodzaj_sprzetu == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_sprzetu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Rodzaj_sprzetu));
            }
            if ((Nazwa_producenta == null)) {
                throw new global::System.ArgumentNullException("Nazwa_producenta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Nazwa_producenta));
            }
            if ((Budynek == null)) {
                throw new global::System.ArgumentNullException("Budynek");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Budynek));
            }
            if ((Pietro == null)) {
                throw new global::System.ArgumentNullException("Pietro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Pietro));
            }
            if ((Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Pomieszczenie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Pomieszczenie));
            }
            if ((Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Informatyka_Lacznosc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Informatyka_Lacznosc));
            }
            if ((Uwagi == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Uwagi));
            }
            if ((Index_finansowy == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Index_finansowy));
            }
            if ((Kto_modyfikowal == null)) {
                throw new global::System.ArgumentNullException("Kto_modyfikowal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Kto_modyfikowal));
            }
            if ((Nr_seryjny == null)) {
                throw new global::System.ArgumentNullException("Nr_seryjny");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Nr_seryjny));
            }
            if ((Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Wartosc_zakupu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Wartosc_zakupu));
            }
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Nr_faktury));
            }
            if ((Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_ewidencji");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Data_usuniecia == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Data_usuniecia));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzetu, 
                    string Nazwa_producenta, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Uwagi, 
                    string Index_finansowy, 
                    string Kto_modyfikowal, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Data_usuniecia, 
                    int Original_Id, 
                    string Original_Nr_ewidencyjny, 
                    string Original_Rodzaj_sprzetu, 
                    string Original_Nazwa_producenta, 
                    string Original_Budynek, 
                    string Original_Pietro, 
                    string Original_Pomieszczenie, 
                    string Original_Informatyka_Lacznosc, 
                    string Original_Index_finansowy, 
                    string Original_Kto_modyfikowal, 
                    string Original_Nr_seryjny, 
                    string Original_Wartosc_zakupu, 
                    string Original_Nr_faktury, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Data_usuniecia) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Nr_ewidencyjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nr_ewidencyjny));
            }
            if ((Rodzaj_sprzetu == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_sprzetu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Rodzaj_sprzetu));
            }
            if ((Nazwa_producenta == null)) {
                throw new global::System.ArgumentNullException("Nazwa_producenta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Nazwa_producenta));
            }
            if ((Budynek == null)) {
                throw new global::System.ArgumentNullException("Budynek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Budynek));
            }
            if ((Pietro == null)) {
                throw new global::System.ArgumentNullException("Pietro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Pietro));
            }
            if ((Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Pomieszczenie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Pomieszczenie));
            }
            if ((Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Informatyka_Lacznosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Informatyka_Lacznosc));
            }
            if ((Uwagi == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Uwagi));
            }
            if ((Index_finansowy == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Index_finansowy));
            }
            if ((Kto_modyfikowal == null)) {
                throw new global::System.ArgumentNullException("Kto_modyfikowal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Kto_modyfikowal));
            }
            if ((Nr_seryjny == null)) {
                throw new global::System.ArgumentNullException("Nr_seryjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Nr_seryjny));
            }
            if ((Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Wartosc_zakupu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Wartosc_zakupu));
            }
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Nr_faktury));
            }
            if ((Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Rodzaj_ewidencji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Data_usuniecia == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Data_usuniecia));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Id));
            if ((Original_Nr_ewidencyjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_ewidencyjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Nr_ewidencyjny));
            }
            if ((Original_Rodzaj_sprzetu == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_sprzetu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Rodzaj_sprzetu));
            }
            if ((Original_Nazwa_producenta == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_producenta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Nazwa_producenta));
            }
            if ((Original_Budynek == null)) {
                throw new global::System.ArgumentNullException("Original_Budynek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Budynek));
            }
            if ((Original_Pietro == null)) {
                throw new global::System.ArgumentNullException("Original_Pietro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Pietro));
            }
            if ((Original_Pomieszczenie == null)) {
                throw new global::System.ArgumentNullException("Original_Pomieszczenie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Pomieszczenie));
            }
            if ((Original_Informatyka_Lacznosc == null)) {
                throw new global::System.ArgumentNullException("Original_Informatyka_Lacznosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Informatyka_Lacznosc));
            }
            if ((Original_Index_finansowy == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Index_finansowy));
            }
            if ((Original_Kto_modyfikowal == null)) {
                throw new global::System.ArgumentNullException("Original_Kto_modyfikowal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Kto_modyfikowal));
            }
            if ((Original_Nr_seryjny == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_seryjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Nr_seryjny));
            }
            if ((Original_Wartosc_zakupu == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc_zakupu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Wartosc_zakupu));
            }
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj_ewidencji");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Data_usuniecia == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Data_usuniecia));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nr_ewidencyjny, 
                    string Rodzaj_sprzetu, 
                    string Nazwa_producenta, 
                    string Budynek, 
                    string Pietro, 
                    string Pomieszczenie, 
                    string Informatyka_Lacznosc, 
                    string Uwagi, 
                    string Index_finansowy, 
                    string Kto_modyfikowal, 
                    string Nr_seryjny, 
                    string Wartosc_zakupu, 
                    string Nr_faktury, 
                    string Rodzaj_ewidencji, 
                    string Data_usuniecia, 
                    int Original_Id, 
                    string Original_Nr_ewidencyjny, 
                    string Original_Rodzaj_sprzetu, 
                    string Original_Nazwa_producenta, 
                    string Original_Budynek, 
                    string Original_Pietro, 
                    string Original_Pomieszczenie, 
                    string Original_Informatyka_Lacznosc, 
                    string Original_Index_finansowy, 
                    string Original_Kto_modyfikowal, 
                    string Original_Nr_seryjny, 
                    string Original_Wartosc_zakupu, 
                    string Original_Nr_faktury, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Data_usuniecia) {
            return this.Update(Original_Id, Nr_ewidencyjny, Rodzaj_sprzetu, Nazwa_producenta, Budynek, Pietro, Pomieszczenie, Informatyka_Lacznosc, Uwagi, Index_finansowy, Kto_modyfikowal, Nr_seryjny, Wartosc_zakupu, Nr_faktury, Rodzaj_ewidencji, Data_usuniecia, Original_Id, Original_Nr_ewidencyjny, Original_Rodzaj_sprzetu, Original_Nazwa_producenta, Original_Budynek, Original_Pietro, Original_Pomieszczenie, Original_Informatyka_Lacznosc, Original_Index_finansowy, Original_Kto_modyfikowal, Original_Nr_seryjny, Original_Wartosc_zakupu, Original_Nr_faktury, Original_Rodzaj_ewidencji, Original_Data_usuniecia);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KartaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public KartaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Karta";
            tableMapping.ColumnMappings.Add("Nr_karty", "Nr_karty");
            tableMapping.ColumnMappings.Add("Nazwa_urzadzenia", "Nazwa_urzadzenia");
            tableMapping.ColumnMappings.Add("Marka_urzadzenia", "Marka_urzadzenia");
            tableMapping.ColumnMappings.Add("Model_urzadzenia", "Model_urzadzenia");
            tableMapping.ColumnMappings.Add("Numer_seryjny", "Numer_seryjny");
            tableMapping.ColumnMappings.Add("Data_zakupu", "Data_zakupu");
            tableMapping.ColumnMappings.Add("Data_oddania_do_eksploatacji", "Data_oddania_do_eksploatacji");
            tableMapping.ColumnMappings.Add("Dodatkowe_akcesoria", "Dodatkowe_akcesoria");
            tableMapping.ColumnMappings.Add("Uzytkownik", "Uzytkownik");
            tableMapping.ColumnMappings.Add("Od_kiedy", "Od_kiedy");
            tableMapping.ColumnMappings.Add("Gdzie", "Gdzie");
            tableMapping.ColumnMappings.Add("Uzytkownik2", "Uzytkownik2");
            tableMapping.ColumnMappings.Add("Od_kiedy2", "Od_kiedy2");
            tableMapping.ColumnMappings.Add("Gdzie2", "Gdzie2");
            tableMapping.ColumnMappings.Add("Uzytkownik3", "Uzytkownik3");
            tableMapping.ColumnMappings.Add("Od_kiedy3", "Od_kiedy3");
            tableMapping.ColumnMappings.Add("Gdzie3", "Gdzie3");
            tableMapping.ColumnMappings.Add("Uzytkownik4", "Uzytkownik4");
            tableMapping.ColumnMappings.Add("Od_kiedy4", "Od_kiedy4");
            tableMapping.ColumnMappings.Add("Gdzie4", "Gdzie4");
            tableMapping.ColumnMappings.Add("Data_zalozenia", "Data_zalozenia");
            tableMapping.ColumnMappings.Add("Zalozyciel", "Zalozyciel");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Karta] WHERE (([Nr_karty] = @Original_Nr_karty) AND ([Nazwa_ur" +
                "zadzenia] = @Original_Nazwa_urzadzenia) AND ([Marka_urzadzenia] = @Original_Mark" +
                "a_urzadzenia) AND ([Model_urzadzenia] = @Original_Model_urzadzenia) AND ([Numer_" +
                "seryjny] = @Original_Numer_seryjny) AND ((@IsNull_Data_zakupu = 1 AND [Data_zaku" +
                "pu] IS NULL) OR ([Data_zakupu] = @Original_Data_zakupu)) AND ((@IsNull_Data_odda" +
                "nia_do_eksploatacji = 1 AND [Data_oddania_do_eksploatacji] IS NULL) OR ([Data_od" +
                "dania_do_eksploatacji] = @Original_Data_oddania_do_eksploatacji)) AND ((@IsNull_" +
                "Dodatkowe_akcesoria = 1 AND [Dodatkowe_akcesoria] IS NULL) OR ([Dodatkowe_akceso" +
                "ria] = @Original_Dodatkowe_akcesoria)) AND ([Uzytkownik] = @Original_Uzytkownik)" +
                " AND ((@IsNull_Od_kiedy = 1 AND [Od_kiedy] IS NULL) OR ([Od_kiedy] = @Original_O" +
                "d_kiedy)) AND ((@IsNull_Gdzie = 1 AND [Gdzie] IS NULL) OR ([Gdzie] = @Original_G" +
                "dzie)) AND ((@IsNull_Uzytkownik2 = 1 AND [Uzytkownik2] IS NULL) OR ([Uzytkownik2" +
                "] = @Original_Uzytkownik2)) AND ((@IsNull_Od_kiedy2 = 1 AND [Od_kiedy2] IS NULL)" +
                " OR ([Od_kiedy2] = @Original_Od_kiedy2)) AND ((@IsNull_Gdzie2 = 1 AND [Gdzie2] I" +
                "S NULL) OR ([Gdzie2] = @Original_Gdzie2)) AND ((@IsNull_Uzytkownik3 = 1 AND [Uzy" +
                "tkownik3] IS NULL) OR ([Uzytkownik3] = @Original_Uzytkownik3)) AND ((@IsNull_Od_" +
                "kiedy3 = 1 AND [Od_kiedy3] IS NULL) OR ([Od_kiedy3] = @Original_Od_kiedy3)) AND " +
                "((@IsNull_Gdzie3 = 1 AND [Gdzie3] IS NULL) OR ([Gdzie3] = @Original_Gdzie3)) AND" +
                " ((@IsNull_Uzytkownik4 = 1 AND [Uzytkownik4] IS NULL) OR ([Uzytkownik4] = @Origi" +
                "nal_Uzytkownik4)) AND ((@IsNull_Od_kiedy4 = 1 AND [Od_kiedy4] IS NULL) OR ([Od_k" +
                "iedy4] = @Original_Od_kiedy4)) AND ((@IsNull_Gdzie4 = 1 AND [Gdzie4] IS NULL) OR" +
                " ([Gdzie4] = @Original_Gdzie4)) AND ((@IsNull_Data_zalozenia = 1 AND [Data_zaloz" +
                "enia] IS NULL) OR ([Data_zalozenia] = @Original_Data_zalozenia)) AND ((@IsNull_Z" +
                "alozyciel = 1 AND [Zalozyciel] IS NULL) OR ([Zalozyciel] = @Original_Zalozyciel)" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marka_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marka_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numer_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_zakupu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dodatkowe_akcesoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dodatkowe_akcesoria", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_zalozenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_zalozenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Zalozyciel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zalozyciel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Karta] ([Nr_karty], [Nazwa_urzadzenia], [Marka_urzadzenia], [Model_urzadzenia], [Numer_seryjny], [Data_zakupu], [Data_oddania_do_eksploatacji], [Dodatkowe_akcesoria], [Uzytkownik], [Od_kiedy], [Gdzie], [Uzytkownik2], [Od_kiedy2], [Gdzie2], [Uzytkownik3], [Od_kiedy3], [Gdzie3], [Uzytkownik4], [Od_kiedy4], [Gdzie4], [Data_zalozenia], [Zalozyciel]) VALUES (@Nr_karty, @Nazwa_urzadzenia, @Marka_urzadzenia, @Model_urzadzenia, @Numer_seryjny, @Data_zakupu, @Data_oddania_do_eksploatacji, @Dodatkowe_akcesoria, @Uzytkownik, @Od_kiedy, @Gdzie, @Uzytkownik2, @Od_kiedy2, @Gdzie2, @Uzytkownik3, @Od_kiedy3, @Gdzie3, @Uzytkownik4, @Od_kiedy4, @Gdzie4, @Data_zalozenia, @Zalozyciel);
SELECT Nr_karty, Nazwa_urzadzenia, Marka_urzadzenia, Model_urzadzenia, Numer_seryjny, Data_zakupu, Data_oddania_do_eksploatacji, Dodatkowe_akcesoria, Uzytkownik, Od_kiedy, Gdzie, Uzytkownik2, Od_kiedy2, Gdzie2, Uzytkownik3, Od_kiedy3, Gdzie3, Uzytkownik4, Od_kiedy4, Gdzie4, Data_zalozenia, Zalozyciel FROM Karta WHERE (Nr_karty = @Nr_karty)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marka_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marka_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numer_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dodatkowe_akcesoria", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_zalozenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zalozyciel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Karta] SET [Nr_karty] = @Nr_karty, [Nazwa_urzadzenia] = @Nazwa_urza" +
                "dzenia, [Marka_urzadzenia] = @Marka_urzadzenia, [Model_urzadzenia] = @Model_urza" +
                "dzenia, [Numer_seryjny] = @Numer_seryjny, [Data_zakupu] = @Data_zakupu, [Data_od" +
                "dania_do_eksploatacji] = @Data_oddania_do_eksploatacji, [Dodatkowe_akcesoria] = " +
                "@Dodatkowe_akcesoria, [Uzytkownik] = @Uzytkownik, [Od_kiedy] = @Od_kiedy, [Gdzie" +
                "] = @Gdzie, [Uzytkownik2] = @Uzytkownik2, [Od_kiedy2] = @Od_kiedy2, [Gdzie2] = @" +
                "Gdzie2, [Uzytkownik3] = @Uzytkownik3, [Od_kiedy3] = @Od_kiedy3, [Gdzie3] = @Gdzi" +
                "e3, [Uzytkownik4] = @Uzytkownik4, [Od_kiedy4] = @Od_kiedy4, [Gdzie4] = @Gdzie4, " +
                "[Data_zalozenia] = @Data_zalozenia, [Zalozyciel] = @Zalozyciel WHERE (([Nr_karty" +
                "] = @Original_Nr_karty) AND ([Nazwa_urzadzenia] = @Original_Nazwa_urzadzenia) AN" +
                "D ([Marka_urzadzenia] = @Original_Marka_urzadzenia) AND ([Model_urzadzenia] = @O" +
                "riginal_Model_urzadzenia) AND ([Numer_seryjny] = @Original_Numer_seryjny) AND ((" +
                "@IsNull_Data_zakupu = 1 AND [Data_zakupu] IS NULL) OR ([Data_zakupu] = @Original" +
                "_Data_zakupu)) AND ((@IsNull_Data_oddania_do_eksploatacji = 1 AND [Data_oddania_" +
                "do_eksploatacji] IS NULL) OR ([Data_oddania_do_eksploatacji] = @Original_Data_od" +
                "dania_do_eksploatacji)) AND ((@IsNull_Dodatkowe_akcesoria = 1 AND [Dodatkowe_akc" +
                "esoria] IS NULL) OR ([Dodatkowe_akcesoria] = @Original_Dodatkowe_akcesoria)) AND" +
                " ([Uzytkownik] = @Original_Uzytkownik) AND ((@IsNull_Od_kiedy = 1 AND [Od_kiedy]" +
                " IS NULL) OR ([Od_kiedy] = @Original_Od_kiedy)) AND ((@IsNull_Gdzie = 1 AND [Gdz" +
                "ie] IS NULL) OR ([Gdzie] = @Original_Gdzie)) AND ((@IsNull_Uzytkownik2 = 1 AND [" +
                "Uzytkownik2] IS NULL) OR ([Uzytkownik2] = @Original_Uzytkownik2)) AND ((@IsNull_" +
                "Od_kiedy2 = 1 AND [Od_kiedy2] IS NULL) OR ([Od_kiedy2] = @Original_Od_kiedy2)) A" +
                "ND ((@IsNull_Gdzie2 = 1 AND [Gdzie2] IS NULL) OR ([Gdzie2] = @Original_Gdzie2)) " +
                "AND ((@IsNull_Uzytkownik3 = 1 AND [Uzytkownik3] IS NULL) OR ([Uzytkownik3] = @Or" +
                "iginal_Uzytkownik3)) AND ((@IsNull_Od_kiedy3 = 1 AND [Od_kiedy3] IS NULL) OR ([O" +
                "d_kiedy3] = @Original_Od_kiedy3)) AND ((@IsNull_Gdzie3 = 1 AND [Gdzie3] IS NULL)" +
                " OR ([Gdzie3] = @Original_Gdzie3)) AND ((@IsNull_Uzytkownik4 = 1 AND [Uzytkownik" +
                "4] IS NULL) OR ([Uzytkownik4] = @Original_Uzytkownik4)) AND ((@IsNull_Od_kiedy4 " +
                "= 1 AND [Od_kiedy4] IS NULL) OR ([Od_kiedy4] = @Original_Od_kiedy4)) AND ((@IsNu" +
                "ll_Gdzie4 = 1 AND [Gdzie4] IS NULL) OR ([Gdzie4] = @Original_Gdzie4)) AND ((@IsN" +
                "ull_Data_zalozenia = 1 AND [Data_zalozenia] IS NULL) OR ([Data_zalozenia] = @Ori" +
                "ginal_Data_zalozenia)) AND ((@IsNull_Zalozyciel = 1 AND [Zalozyciel] IS NULL) OR" +
                " ([Zalozyciel] = @Original_Zalozyciel)));\r\nSELECT Nr_karty, Nazwa_urzadzenia, Ma" +
                "rka_urzadzenia, Model_urzadzenia, Numer_seryjny, Data_zakupu, Data_oddania_do_ek" +
                "sploatacji, Dodatkowe_akcesoria, Uzytkownik, Od_kiedy, Gdzie, Uzytkownik2, Od_ki" +
                "edy2, Gdzie2, Uzytkownik3, Od_kiedy3, Gdzie3, Uzytkownik4, Od_kiedy4, Gdzie4, Da" +
                "ta_zalozenia, Zalozyciel FROM Karta WHERE (Nr_karty = @Nr_karty)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marka_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marka_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numer_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_seryjny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dodatkowe_akcesoria", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uzytkownik4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Od_kiedy4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gdzie4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_zalozenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zalozyciel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marka_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marka_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numer_seryjny", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numer_seryjny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_zakupu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_zakupu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zakupu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_oddania_do_eksploatacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_eksploatacji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dodatkowe_akcesoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dodatkowe_akcesoria", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dodatkowe_akcesoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uzytkownik4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uzytkownik4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uzytkownik4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Od_kiedy4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Od_kiedy4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Od_kiedy4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gdzie4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gdzie4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gdzie4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_zalozenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_zalozenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_zalozenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Zalozyciel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zalozyciel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zalozyciel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Nr_karty, Nazwa_urzadzenia, Marka_urzadzenia, Model_urzadzenia, Numer_seryjny, Data_zakupu, Data_oddania_do_eksploatacji, Dodatkowe_akcesoria, Uzytkownik, Od_kiedy, Gdzie, Uzytkownik2, Od_kiedy2, Gdzie2, Uzytkownik3, Od_kiedy3, Gdzie3, Uzytkownik4, Od_kiedy4, Gdzie4, Data_zalozenia, Zalozyciel FROM dbo.Karta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.KartaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.KartaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.KartaDataTable dataTable = new EwidencjaDataSet.KartaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.KartaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Karta");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Nr_karty, 
                    string Original_Nazwa_urzadzenia, 
                    string Original_Marka_urzadzenia, 
                    string Original_Model_urzadzenia, 
                    string Original_Numer_seryjny, 
                    string Original_Data_zakupu, 
                    string Original_Data_oddania_do_eksploatacji, 
                    string Original_Dodatkowe_akcesoria, 
                    string Original_Uzytkownik, 
                    string Original_Od_kiedy, 
                    string Original_Gdzie, 
                    string Original_Uzytkownik2, 
                    string Original_Od_kiedy2, 
                    string Original_Gdzie2, 
                    string Original_Uzytkownik3, 
                    string Original_Od_kiedy3, 
                    string Original_Gdzie3, 
                    string Original_Uzytkownik4, 
                    string Original_Od_kiedy4, 
                    string Original_Gdzie4, 
                    string Original_Data_zalozenia, 
                    string Original_Zalozyciel) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Nr_karty));
            if ((Original_Nazwa_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_urzadzenia");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nazwa_urzadzenia));
            }
            if ((Original_Marka_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Marka_urzadzenia");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Marka_urzadzenia));
            }
            if ((Original_Model_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Model_urzadzenia");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Model_urzadzenia));
            }
            if ((Original_Numer_seryjny == null)) {
                throw new global::System.ArgumentNullException("Original_Numer_seryjny");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Numer_seryjny));
            }
            if ((Original_Data_zakupu == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Data_zakupu));
            }
            if ((Original_Data_oddania_do_eksploatacji == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Data_oddania_do_eksploatacji));
            }
            if ((Original_Dodatkowe_akcesoria == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Dodatkowe_akcesoria));
            }
            if ((Original_Uzytkownik == null)) {
                throw new global::System.ArgumentNullException("Original_Uzytkownik");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Uzytkownik));
            }
            if ((Original_Od_kiedy == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Od_kiedy));
            }
            if ((Original_Gdzie == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Gdzie));
            }
            if ((Original_Uzytkownik2 == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Uzytkownik2));
            }
            if ((Original_Od_kiedy2 == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Od_kiedy2));
            }
            if ((Original_Gdzie2 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Gdzie2));
            }
            if ((Original_Uzytkownik3 == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_Uzytkownik3));
            }
            if ((Original_Od_kiedy3 == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Od_kiedy3));
            }
            if ((Original_Gdzie3 == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_Gdzie3));
            }
            if ((Original_Uzytkownik4 == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Uzytkownik4));
            }
            if ((Original_Od_kiedy4 == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Od_kiedy4));
            }
            if ((Original_Gdzie4 == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Gdzie4));
            }
            if ((Original_Data_zalozenia == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_Data_zalozenia));
            }
            if ((Original_Zalozyciel == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_Zalozyciel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Nr_karty, 
                    string Nazwa_urzadzenia, 
                    string Marka_urzadzenia, 
                    string Model_urzadzenia, 
                    string Numer_seryjny, 
                    string Data_zakupu, 
                    string Data_oddania_do_eksploatacji, 
                    string Dodatkowe_akcesoria, 
                    string Uzytkownik, 
                    string Od_kiedy, 
                    string Gdzie, 
                    string Uzytkownik2, 
                    string Od_kiedy2, 
                    string Gdzie2, 
                    string Uzytkownik3, 
                    string Od_kiedy3, 
                    string Gdzie3, 
                    string Uzytkownik4, 
                    string Od_kiedy4, 
                    string Gdzie4, 
                    string Data_zalozenia, 
                    string Zalozyciel) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Nr_karty));
            if ((Nazwa_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Nazwa_urzadzenia");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nazwa_urzadzenia));
            }
            if ((Marka_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Marka_urzadzenia");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Marka_urzadzenia));
            }
            if ((Model_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Model_urzadzenia");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Model_urzadzenia));
            }
            if ((Numer_seryjny == null)) {
                throw new global::System.ArgumentNullException("Numer_seryjny");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Numer_seryjny));
            }
            if ((Data_zakupu == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Data_zakupu));
            }
            if ((Data_oddania_do_eksploatacji == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Data_oddania_do_eksploatacji));
            }
            if ((Dodatkowe_akcesoria == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Dodatkowe_akcesoria));
            }
            if ((Uzytkownik == null)) {
                throw new global::System.ArgumentNullException("Uzytkownik");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Uzytkownik));
            }
            if ((Od_kiedy == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Od_kiedy));
            }
            if ((Gdzie == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Gdzie));
            }
            if ((Uzytkownik2 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Uzytkownik2));
            }
            if ((Od_kiedy2 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Od_kiedy2));
            }
            if ((Gdzie2 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Gdzie2));
            }
            if ((Uzytkownik3 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Uzytkownik3));
            }
            if ((Od_kiedy3 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Od_kiedy3));
            }
            if ((Gdzie3 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Gdzie3));
            }
            if ((Uzytkownik4 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Uzytkownik4));
            }
            if ((Od_kiedy4 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Od_kiedy4));
            }
            if ((Gdzie4 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Gdzie4));
            }
            if ((Data_zalozenia == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Data_zalozenia));
            }
            if ((Zalozyciel == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Zalozyciel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Nr_karty, 
                    string Nazwa_urzadzenia, 
                    string Marka_urzadzenia, 
                    string Model_urzadzenia, 
                    string Numer_seryjny, 
                    string Data_zakupu, 
                    string Data_oddania_do_eksploatacji, 
                    string Dodatkowe_akcesoria, 
                    string Uzytkownik, 
                    string Od_kiedy, 
                    string Gdzie, 
                    string Uzytkownik2, 
                    string Od_kiedy2, 
                    string Gdzie2, 
                    string Uzytkownik3, 
                    string Od_kiedy3, 
                    string Gdzie3, 
                    string Uzytkownik4, 
                    string Od_kiedy4, 
                    string Gdzie4, 
                    string Data_zalozenia, 
                    string Zalozyciel, 
                    int Original_Nr_karty, 
                    string Original_Nazwa_urzadzenia, 
                    string Original_Marka_urzadzenia, 
                    string Original_Model_urzadzenia, 
                    string Original_Numer_seryjny, 
                    string Original_Data_zakupu, 
                    string Original_Data_oddania_do_eksploatacji, 
                    string Original_Dodatkowe_akcesoria, 
                    string Original_Uzytkownik, 
                    string Original_Od_kiedy, 
                    string Original_Gdzie, 
                    string Original_Uzytkownik2, 
                    string Original_Od_kiedy2, 
                    string Original_Gdzie2, 
                    string Original_Uzytkownik3, 
                    string Original_Od_kiedy3, 
                    string Original_Gdzie3, 
                    string Original_Uzytkownik4, 
                    string Original_Od_kiedy4, 
                    string Original_Gdzie4, 
                    string Original_Data_zalozenia, 
                    string Original_Zalozyciel) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Nr_karty));
            if ((Nazwa_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Nazwa_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nazwa_urzadzenia));
            }
            if ((Marka_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Marka_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Marka_urzadzenia));
            }
            if ((Model_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Model_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Model_urzadzenia));
            }
            if ((Numer_seryjny == null)) {
                throw new global::System.ArgumentNullException("Numer_seryjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Numer_seryjny));
            }
            if ((Data_zakupu == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Data_zakupu));
            }
            if ((Data_oddania_do_eksploatacji == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Data_oddania_do_eksploatacji));
            }
            if ((Dodatkowe_akcesoria == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Dodatkowe_akcesoria));
            }
            if ((Uzytkownik == null)) {
                throw new global::System.ArgumentNullException("Uzytkownik");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Uzytkownik));
            }
            if ((Od_kiedy == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Od_kiedy));
            }
            if ((Gdzie == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Gdzie));
            }
            if ((Uzytkownik2 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Uzytkownik2));
            }
            if ((Od_kiedy2 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Od_kiedy2));
            }
            if ((Gdzie2 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Gdzie2));
            }
            if ((Uzytkownik3 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Uzytkownik3));
            }
            if ((Od_kiedy3 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Od_kiedy3));
            }
            if ((Gdzie3 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Gdzie3));
            }
            if ((Uzytkownik4 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Uzytkownik4));
            }
            if ((Od_kiedy4 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Od_kiedy4));
            }
            if ((Gdzie4 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Gdzie4));
            }
            if ((Data_zalozenia == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Data_zalozenia));
            }
            if ((Zalozyciel == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Zalozyciel));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_Nr_karty));
            if ((Original_Nazwa_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Nazwa_urzadzenia));
            }
            if ((Original_Marka_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Marka_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Marka_urzadzenia));
            }
            if ((Original_Model_urzadzenia == null)) {
                throw new global::System.ArgumentNullException("Original_Model_urzadzenia");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Model_urzadzenia));
            }
            if ((Original_Numer_seryjny == null)) {
                throw new global::System.ArgumentNullException("Original_Numer_seryjny");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Numer_seryjny));
            }
            if ((Original_Data_zakupu == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Data_zakupu));
            }
            if ((Original_Data_oddania_do_eksploatacji == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Data_oddania_do_eksploatacji));
            }
            if ((Original_Dodatkowe_akcesoria == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Dodatkowe_akcesoria));
            }
            if ((Original_Uzytkownik == null)) {
                throw new global::System.ArgumentNullException("Original_Uzytkownik");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Uzytkownik));
            }
            if ((Original_Od_kiedy == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Od_kiedy));
            }
            if ((Original_Gdzie == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Gdzie));
            }
            if ((Original_Uzytkownik2 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Uzytkownik2));
            }
            if ((Original_Od_kiedy2 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Od_kiedy2));
            }
            if ((Original_Gdzie2 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Gdzie2));
            }
            if ((Original_Uzytkownik3 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Uzytkownik3));
            }
            if ((Original_Od_kiedy3 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Od_kiedy3));
            }
            if ((Original_Gdzie3 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Gdzie3));
            }
            if ((Original_Uzytkownik4 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Uzytkownik4));
            }
            if ((Original_Od_kiedy4 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Od_kiedy4));
            }
            if ((Original_Gdzie4 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Gdzie4));
            }
            if ((Original_Data_zalozenia == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Data_zalozenia));
            }
            if ((Original_Zalozyciel == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_Zalozyciel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nazwa_urzadzenia, 
                    string Marka_urzadzenia, 
                    string Model_urzadzenia, 
                    string Numer_seryjny, 
                    string Data_zakupu, 
                    string Data_oddania_do_eksploatacji, 
                    string Dodatkowe_akcesoria, 
                    string Uzytkownik, 
                    string Od_kiedy, 
                    string Gdzie, 
                    string Uzytkownik2, 
                    string Od_kiedy2, 
                    string Gdzie2, 
                    string Uzytkownik3, 
                    string Od_kiedy3, 
                    string Gdzie3, 
                    string Uzytkownik4, 
                    string Od_kiedy4, 
                    string Gdzie4, 
                    string Data_zalozenia, 
                    string Zalozyciel, 
                    int Original_Nr_karty, 
                    string Original_Nazwa_urzadzenia, 
                    string Original_Marka_urzadzenia, 
                    string Original_Model_urzadzenia, 
                    string Original_Numer_seryjny, 
                    string Original_Data_zakupu, 
                    string Original_Data_oddania_do_eksploatacji, 
                    string Original_Dodatkowe_akcesoria, 
                    string Original_Uzytkownik, 
                    string Original_Od_kiedy, 
                    string Original_Gdzie, 
                    string Original_Uzytkownik2, 
                    string Original_Od_kiedy2, 
                    string Original_Gdzie2, 
                    string Original_Uzytkownik3, 
                    string Original_Od_kiedy3, 
                    string Original_Gdzie3, 
                    string Original_Uzytkownik4, 
                    string Original_Od_kiedy4, 
                    string Original_Gdzie4, 
                    string Original_Data_zalozenia, 
                    string Original_Zalozyciel) {
            return this.Update(Original_Nr_karty, Nazwa_urzadzenia, Marka_urzadzenia, Model_urzadzenia, Numer_seryjny, Data_zakupu, Data_oddania_do_eksploatacji, Dodatkowe_akcesoria, Uzytkownik, Od_kiedy, Gdzie, Uzytkownik2, Od_kiedy2, Gdzie2, Uzytkownik3, Od_kiedy3, Gdzie3, Uzytkownik4, Od_kiedy4, Gdzie4, Data_zalozenia, Zalozyciel, Original_Nr_karty, Original_Nazwa_urzadzenia, Original_Marka_urzadzenia, Original_Model_urzadzenia, Original_Numer_seryjny, Original_Data_zakupu, Original_Data_oddania_do_eksploatacji, Original_Dodatkowe_akcesoria, Original_Uzytkownik, Original_Od_kiedy, Original_Gdzie, Original_Uzytkownik2, Original_Od_kiedy2, Original_Gdzie2, Original_Uzytkownik3, Original_Od_kiedy3, Original_Gdzie3, Original_Uzytkownik4, Original_Od_kiedy4, Original_Gdzie4, Original_Data_zalozenia, Original_Zalozyciel);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Karta_konserwacjaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Karta_konserwacjaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Karta_konserwacja";
            tableMapping.ColumnMappings.Add("Nr_karty", "Nr_karty");
            tableMapping.ColumnMappings.Add("Data", "Data");
            tableMapping.ColumnMappings.Add("Opis_wykonywanej_czynnosci", "Opis_wykonywanej_czynnosci");
            tableMapping.ColumnMappings.Add("Czas_konserwacji", "Czas_konserwacji");
            tableMapping.ColumnMappings.Add("Wykonawca", "Wykonawca");
            tableMapping.ColumnMappings.Add("Podpis_uzytkownika_urzadzenia", "Podpis_uzytkownika_urzadzenia");
            tableMapping.ColumnMappings.Add("Uwagi_dotyczace_pracy_urzadzenia", "Uwagi_dotyczace_pracy_urzadzenia");
            tableMapping.ColumnMappings.Add("Lp", "Lp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Karta_konserwacja] WHERE (([Nr_karty] = @Original_Nr_karty) AND ((@IsNull_Data = 1 AND [Data] IS NULL) OR ([Data] = @Original_Data)) AND ((@IsNull_Opis_wykonywanej_czynnosci = 1 AND [Opis_wykonywanej_czynnosci] IS NULL) OR ([Opis_wykonywanej_czynnosci] = @Original_Opis_wykonywanej_czynnosci)) AND ((@IsNull_Czas_konserwacji = 1 AND [Czas_konserwacji] IS NULL) OR ([Czas_konserwacji] = @Original_Czas_konserwacji)) AND ((@IsNull_Wykonawca = 1 AND [Wykonawca] IS NULL) OR ([Wykonawca] = @Original_Wykonawca)) AND ((@IsNull_Podpis_uzytkownika_urzadzenia = 1 AND [Podpis_uzytkownika_urzadzenia] IS NULL) OR ([Podpis_uzytkownika_urzadzenia] = @Original_Podpis_uzytkownika_urzadzenia)) AND ((@IsNull_Uwagi_dotyczace_pracy_urzadzenia = 1 AND [Uwagi_dotyczace_pracy_urzadzenia] IS NULL) OR ([Uwagi_dotyczace_pracy_urzadzenia] = @Original_Uwagi_dotyczace_pracy_urzadzenia)) AND ([Lp] = @Original_Lp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Czas_konserwacji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Czas_konserwacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wykonawca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wykonawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Karta_konserwacja] ([Nr_karty], [Data], [Opis_wykonywanej_czynnosci], [Czas_konserwacji], [Wykonawca], [Podpis_uzytkownika_urzadzenia], [Uwagi_dotyczace_pracy_urzadzenia], [Lp]) VALUES (@Nr_karty, @Data, @Opis_wykonywanej_czynnosci, @Czas_konserwacji, @Wykonawca, @Podpis_uzytkownika_urzadzenia, @Uwagi_dotyczace_pracy_urzadzenia, @Lp);
SELECT Nr_karty, Data, Opis_wykonywanej_czynnosci, Czas_konserwacji, Wykonawca, Podpis_uzytkownika_urzadzenia, Uwagi_dotyczace_pracy_urzadzenia, Lp FROM Karta_konserwacja WHERE (Lp = @Lp)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Czas_konserwacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wykonawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Karta_konserwacja] SET [Nr_karty] = @Nr_karty, [Data] = @Data, [Opis_wykonywanej_czynnosci] = @Opis_wykonywanej_czynnosci, [Czas_konserwacji] = @Czas_konserwacji, [Wykonawca] = @Wykonawca, [Podpis_uzytkownika_urzadzenia] = @Podpis_uzytkownika_urzadzenia, [Uwagi_dotyczace_pracy_urzadzenia] = @Uwagi_dotyczace_pracy_urzadzenia, [Lp] = @Lp WHERE (([Nr_karty] = @Original_Nr_karty) AND ((@IsNull_Data = 1 AND [Data] IS NULL) OR ([Data] = @Original_Data)) AND ((@IsNull_Opis_wykonywanej_czynnosci = 1 AND [Opis_wykonywanej_czynnosci] IS NULL) OR ([Opis_wykonywanej_czynnosci] = @Original_Opis_wykonywanej_czynnosci)) AND ((@IsNull_Czas_konserwacji = 1 AND [Czas_konserwacji] IS NULL) OR ([Czas_konserwacji] = @Original_Czas_konserwacji)) AND ((@IsNull_Wykonawca = 1 AND [Wykonawca] IS NULL) OR ([Wykonawca] = @Original_Wykonawca)) AND ((@IsNull_Podpis_uzytkownika_urzadzenia = 1 AND [Podpis_uzytkownika_urzadzenia] IS NULL) OR ([Podpis_uzytkownika_urzadzenia] = @Original_Podpis_uzytkownika_urzadzenia)) AND ((@IsNull_Uwagi_dotyczace_pracy_urzadzenia = 1 AND [Uwagi_dotyczace_pracy_urzadzenia] IS NULL) OR ([Uwagi_dotyczace_pracy_urzadzenia] = @Original_Uwagi_dotyczace_pracy_urzadzenia)) AND ([Lp] = @Original_Lp));
SELECT Nr_karty, Data, Opis_wykonywanej_czynnosci, Czas_konserwacji, Wykonawca, Podpis_uzytkownika_urzadzenia, Uwagi_dotyczace_pracy_urzadzenia, Lp FROM Karta_konserwacja WHERE (Lp = @Lp)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Czas_konserwacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wykonawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Opis_wykonywanej_czynnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_wykonywanej_czynnosci", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Czas_konserwacji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Czas_konserwacji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Czas_konserwacji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wykonawca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wykonawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wykonawca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Podpis_uzytkownika_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_uzytkownika_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi_dotyczace_pracy_urzadzenia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Nr_karty, Data, Opis_wykonywanej_czynnosci, Czas_konserwacji, Wykonawca, P" +
                "odpis_uzytkownika_urzadzenia, Uwagi_dotyczace_pracy_urzadzenia, Lp FROM Karta_ko" +
                "nserwacja";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.Karta_konserwacjaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.Karta_konserwacjaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.Karta_konserwacjaDataTable dataTable = new EwidencjaDataSet.Karta_konserwacjaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.Karta_konserwacjaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Karta_konserwacja");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Nr_karty, string Original_Data, string Original_Opis_wykonywanej_czynnosci, string Original_Czas_konserwacji, string Original_Wykonawca, string Original_Podpis_uzytkownika_urzadzenia, string Original_Uwagi_dotyczace_pracy_urzadzenia, int Original_Lp) {
            if ((Original_Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_karty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Nr_karty));
            }
            if ((Original_Data == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Data));
            }
            if ((Original_Opis_wykonywanej_czynnosci == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Opis_wykonywanej_czynnosci));
            }
            if ((Original_Czas_konserwacji == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Czas_konserwacji));
            }
            if ((Original_Wykonawca == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Wykonawca));
            }
            if ((Original_Podpis_uzytkownika_urzadzenia == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Podpis_uzytkownika_urzadzenia));
            }
            if ((Original_Uwagi_dotyczace_pracy_urzadzenia == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Uwagi_dotyczace_pracy_urzadzenia));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Lp));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nr_karty, string Data, string Opis_wykonywanej_czynnosci, string Czas_konserwacji, string Wykonawca, string Podpis_uzytkownika_urzadzenia, string Uwagi_dotyczace_pracy_urzadzenia, int Lp) {
            if ((Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Nr_karty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nr_karty));
            }
            if ((Data == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Data));
            }
            if ((Opis_wykonywanej_czynnosci == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Opis_wykonywanej_czynnosci));
            }
            if ((Czas_konserwacji == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Czas_konserwacji));
            }
            if ((Wykonawca == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Wykonawca));
            }
            if ((Podpis_uzytkownika_urzadzenia == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Podpis_uzytkownika_urzadzenia));
            }
            if ((Uwagi_dotyczace_pracy_urzadzenia == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Uwagi_dotyczace_pracy_urzadzenia));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Lp));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nr_karty, 
                    string Data, 
                    string Opis_wykonywanej_czynnosci, 
                    string Czas_konserwacji, 
                    string Wykonawca, 
                    string Podpis_uzytkownika_urzadzenia, 
                    string Uwagi_dotyczace_pracy_urzadzenia, 
                    int Lp, 
                    string Original_Nr_karty, 
                    string Original_Data, 
                    string Original_Opis_wykonywanej_czynnosci, 
                    string Original_Czas_konserwacji, 
                    string Original_Wykonawca, 
                    string Original_Podpis_uzytkownika_urzadzenia, 
                    string Original_Uwagi_dotyczace_pracy_urzadzenia, 
                    int Original_Lp) {
            if ((Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Nr_karty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nr_karty));
            }
            if ((Data == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Data));
            }
            if ((Opis_wykonywanej_czynnosci == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Opis_wykonywanej_czynnosci));
            }
            if ((Czas_konserwacji == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Czas_konserwacji));
            }
            if ((Wykonawca == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Wykonawca));
            }
            if ((Podpis_uzytkownika_urzadzenia == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Podpis_uzytkownika_urzadzenia));
            }
            if ((Uwagi_dotyczace_pracy_urzadzenia == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Uwagi_dotyczace_pracy_urzadzenia));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Lp));
            if ((Original_Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_karty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Nr_karty));
            }
            if ((Original_Data == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Data));
            }
            if ((Original_Opis_wykonywanej_czynnosci == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Opis_wykonywanej_czynnosci));
            }
            if ((Original_Czas_konserwacji == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Czas_konserwacji));
            }
            if ((Original_Wykonawca == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Wykonawca));
            }
            if ((Original_Podpis_uzytkownika_urzadzenia == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Podpis_uzytkownika_urzadzenia));
            }
            if ((Original_Uwagi_dotyczace_pracy_urzadzenia == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Uwagi_dotyczace_pracy_urzadzenia));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Lp));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nr_karty, string Data, string Opis_wykonywanej_czynnosci, string Czas_konserwacji, string Wykonawca, string Podpis_uzytkownika_urzadzenia, string Uwagi_dotyczace_pracy_urzadzenia, string Original_Nr_karty, string Original_Data, string Original_Opis_wykonywanej_czynnosci, string Original_Czas_konserwacji, string Original_Wykonawca, string Original_Podpis_uzytkownika_urzadzenia, string Original_Uwagi_dotyczace_pracy_urzadzenia, int Original_Lp) {
            return this.Update(Nr_karty, Data, Opis_wykonywanej_czynnosci, Czas_konserwacji, Wykonawca, Podpis_uzytkownika_urzadzenia, Uwagi_dotyczace_pracy_urzadzenia, Original_Lp, Original_Nr_karty, Original_Data, Original_Opis_wykonywanej_czynnosci, Original_Czas_konserwacji, Original_Wykonawca, Original_Podpis_uzytkownika_urzadzenia, Original_Uwagi_dotyczace_pracy_urzadzenia, Original_Lp);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Karta_naprawyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Karta_naprawyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Karta_naprawy";
            tableMapping.ColumnMappings.Add("Nr_karty", "Nr_karty");
            tableMapping.ColumnMappings.Add("Data", "Data");
            tableMapping.ColumnMappings.Add("Rodzaj_naprawy", "Rodzaj_naprawy");
            tableMapping.ColumnMappings.Add("Data_oddania_do_naprawy", "Data_oddania_do_naprawy");
            tableMapping.ColumnMappings.Add("Data_odbioru_z_naprawy", "Data_odbioru_z_naprawy");
            tableMapping.ColumnMappings.Add("Koszt_naprawy", "Koszt_naprawy");
            tableMapping.ColumnMappings.Add("Podpis_nadzorujacego_naprawe", "Podpis_nadzorujacego_naprawe");
            tableMapping.ColumnMappings.Add("Lp", "Lp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Karta_naprawy] WHERE (([Nr_karty] = @Original_Nr_karty) AND ((@IsNull_Data = 1 AND [Data] IS NULL) OR ([Data] = @Original_Data)) AND ((@IsNull_Rodzaj_naprawy = 1 AND [Rodzaj_naprawy] IS NULL) OR ([Rodzaj_naprawy] = @Original_Rodzaj_naprawy)) AND ((@IsNull_Data_oddania_do_naprawy = 1 AND [Data_oddania_do_naprawy] IS NULL) OR ([Data_oddania_do_naprawy] = @Original_Data_oddania_do_naprawy)) AND ((@IsNull_Data_odbioru_z_naprawy = 1 AND [Data_odbioru_z_naprawy] IS NULL) OR ([Data_odbioru_z_naprawy] = @Original_Data_odbioru_z_naprawy)) AND ((@IsNull_Koszt_naprawy = 1 AND [Koszt_naprawy] IS NULL) OR ([Koszt_naprawy] = @Original_Koszt_naprawy)) AND ((@IsNull_Podpis_nadzorujacego_naprawe = 1 AND [Podpis_nadzorujacego_naprawe] IS NULL) OR ([Podpis_nadzorujacego_naprawe] = @Original_Podpis_nadzorujacego_naprawe)) AND ([Lp] = @Original_Lp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodzaj_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_oddania_do_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_oddania_do_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_odbioru_z_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_odbioru_z_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Koszt_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Koszt_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Karta_naprawy] ([Nr_karty], [Data], [Rodzaj_naprawy], [Data_oddania_do_naprawy], [Data_odbioru_z_naprawy], [Koszt_naprawy], [Podpis_nadzorujacego_naprawe], [Lp]) VALUES (@Nr_karty, @Data, @Rodzaj_naprawy, @Data_oddania_do_naprawy, @Data_odbioru_z_naprawy, @Koszt_naprawy, @Podpis_nadzorujacego_naprawe, @Lp);
SELECT Nr_karty, Data, Rodzaj_naprawy, Data_oddania_do_naprawy, Data_odbioru_z_naprawy, Koszt_naprawy, Podpis_nadzorujacego_naprawe, Lp FROM Karta_naprawy WHERE (Lp = @Lp)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_oddania_do_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_odbioru_z_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Koszt_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Karta_naprawy] SET [Nr_karty] = @Nr_karty, [Data] = @Data, [Rodzaj_naprawy] = @Rodzaj_naprawy, [Data_oddania_do_naprawy] = @Data_oddania_do_naprawy, [Data_odbioru_z_naprawy] = @Data_odbioru_z_naprawy, [Koszt_naprawy] = @Koszt_naprawy, [Podpis_nadzorujacego_naprawe] = @Podpis_nadzorujacego_naprawe, [Lp] = @Lp WHERE (([Nr_karty] = @Original_Nr_karty) AND ((@IsNull_Data = 1 AND [Data] IS NULL) OR ([Data] = @Original_Data)) AND ((@IsNull_Rodzaj_naprawy = 1 AND [Rodzaj_naprawy] IS NULL) OR ([Rodzaj_naprawy] = @Original_Rodzaj_naprawy)) AND ((@IsNull_Data_oddania_do_naprawy = 1 AND [Data_oddania_do_naprawy] IS NULL) OR ([Data_oddania_do_naprawy] = @Original_Data_oddania_do_naprawy)) AND ((@IsNull_Data_odbioru_z_naprawy = 1 AND [Data_odbioru_z_naprawy] IS NULL) OR ([Data_odbioru_z_naprawy] = @Original_Data_odbioru_z_naprawy)) AND ((@IsNull_Koszt_naprawy = 1 AND [Koszt_naprawy] IS NULL) OR ([Koszt_naprawy] = @Original_Koszt_naprawy)) AND ((@IsNull_Podpis_nadzorujacego_naprawe = 1 AND [Podpis_nadzorujacego_naprawe] IS NULL) OR ([Podpis_nadzorujacego_naprawe] = @Original_Podpis_nadzorujacego_naprawe)) AND ([Lp] = @Original_Lp));
SELECT Nr_karty, Data, Rodzaj_naprawy, Data_oddania_do_naprawy, Data_odbioru_z_naprawy, Koszt_naprawy, Podpis_nadzorujacego_naprawe, Lp FROM Karta_naprawy WHERE (Lp = @Lp)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_oddania_do_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_odbioru_z_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Koszt_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_karty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_karty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodzaj_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_oddania_do_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_oddania_do_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_oddania_do_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Data_odbioru_z_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_odbioru_z_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_odbioru_z_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Koszt_naprawy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Koszt_naprawy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Koszt_naprawy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Podpis_nadzorujacego_naprawe", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Podpis_nadzorujacego_naprawe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Nr_karty, Data, Rodzaj_naprawy, Data_oddania_do_naprawy, Data_odbioru_z_na" +
                "prawy, Koszt_naprawy, Podpis_nadzorujacego_naprawe, Lp FROM Karta_naprawy";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.Karta_naprawyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.Karta_naprawyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.Karta_naprawyDataTable dataTable = new EwidencjaDataSet.Karta_naprawyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.Karta_naprawyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Karta_naprawy");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Nr_karty, string Original_Data, string Original_Rodzaj_naprawy, string Original_Data_oddania_do_naprawy, string Original_Data_odbioru_z_naprawy, string Original_Koszt_naprawy, string Original_Podpis_nadzorujacego_naprawe, string Original_Lp) {
            if ((Original_Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_karty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Nr_karty));
            }
            if ((Original_Data == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Data));
            }
            if ((Original_Rodzaj_naprawy == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Rodzaj_naprawy));
            }
            if ((Original_Data_oddania_do_naprawy == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Data_oddania_do_naprawy));
            }
            if ((Original_Data_odbioru_z_naprawy == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Data_odbioru_z_naprawy));
            }
            if ((Original_Koszt_naprawy == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Koszt_naprawy));
            }
            if ((Original_Podpis_nadzorujacego_naprawe == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Podpis_nadzorujacego_naprawe));
            }
            if ((Original_Lp == null)) {
                throw new global::System.ArgumentNullException("Original_Lp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Lp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nr_karty, string Data, string Rodzaj_naprawy, string Data_oddania_do_naprawy, string Data_odbioru_z_naprawy, string Koszt_naprawy, string Podpis_nadzorujacego_naprawe, string Lp) {
            if ((Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Nr_karty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nr_karty));
            }
            if ((Data == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Data));
            }
            if ((Rodzaj_naprawy == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Rodzaj_naprawy));
            }
            if ((Data_oddania_do_naprawy == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Data_oddania_do_naprawy));
            }
            if ((Data_odbioru_z_naprawy == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Data_odbioru_z_naprawy));
            }
            if ((Koszt_naprawy == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Koszt_naprawy));
            }
            if ((Podpis_nadzorujacego_naprawe == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Podpis_nadzorujacego_naprawe));
            }
            if ((Lp == null)) {
                throw new global::System.ArgumentNullException("Lp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Lp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nr_karty, 
                    string Data, 
                    string Rodzaj_naprawy, 
                    string Data_oddania_do_naprawy, 
                    string Data_odbioru_z_naprawy, 
                    string Koszt_naprawy, 
                    string Podpis_nadzorujacego_naprawe, 
                    string Lp, 
                    string Original_Nr_karty, 
                    string Original_Data, 
                    string Original_Rodzaj_naprawy, 
                    string Original_Data_oddania_do_naprawy, 
                    string Original_Data_odbioru_z_naprawy, 
                    string Original_Koszt_naprawy, 
                    string Original_Podpis_nadzorujacego_naprawe, 
                    string Original_Lp) {
            if ((Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Nr_karty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nr_karty));
            }
            if ((Data == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Data));
            }
            if ((Rodzaj_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Rodzaj_naprawy));
            }
            if ((Data_oddania_do_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Data_oddania_do_naprawy));
            }
            if ((Data_odbioru_z_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Data_odbioru_z_naprawy));
            }
            if ((Koszt_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Koszt_naprawy));
            }
            if ((Podpis_nadzorujacego_naprawe == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Podpis_nadzorujacego_naprawe));
            }
            if ((Lp == null)) {
                throw new global::System.ArgumentNullException("Lp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Lp));
            }
            if ((Original_Nr_karty == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_karty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Nr_karty));
            }
            if ((Original_Data == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Data));
            }
            if ((Original_Rodzaj_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Rodzaj_naprawy));
            }
            if ((Original_Data_oddania_do_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Data_oddania_do_naprawy));
            }
            if ((Original_Data_odbioru_z_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Data_odbioru_z_naprawy));
            }
            if ((Original_Koszt_naprawy == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Koszt_naprawy));
            }
            if ((Original_Podpis_nadzorujacego_naprawe == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Podpis_nadzorujacego_naprawe));
            }
            if ((Original_Lp == null)) {
                throw new global::System.ArgumentNullException("Original_Lp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Lp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nr_karty, string Data, string Rodzaj_naprawy, string Data_oddania_do_naprawy, string Data_odbioru_z_naprawy, string Koszt_naprawy, string Podpis_nadzorujacego_naprawe, string Original_Nr_karty, string Original_Data, string Original_Rodzaj_naprawy, string Original_Data_oddania_do_naprawy, string Original_Data_odbioru_z_naprawy, string Original_Koszt_naprawy, string Original_Podpis_nadzorujacego_naprawe, string Original_Lp) {
            return this.Update(Nr_karty, Data, Rodzaj_naprawy, Data_oddania_do_naprawy, Data_odbioru_z_naprawy, Koszt_naprawy, Podpis_nadzorujacego_naprawe, Original_Lp, Original_Nr_karty, Original_Data, Original_Rodzaj_naprawy, Original_Data_oddania_do_naprawy, Original_Data_odbioru_z_naprawy, Original_Koszt_naprawy, Original_Podpis_nadzorujacego_naprawe, Original_Lp);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ewidencja_STTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Ewidencja_STTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ewidencja_ST";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Nazwa_przedmiotu", "Nazwa_przedmiotu");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Data", "Data");
            tableMapping.ColumnMappings.Add("Opis", "Opis");
            tableMapping.ColumnMappings.Add("Dokument_ksiegowy", "Dokument_ksiegowy");
            tableMapping.ColumnMappings.Add("Przychod", "Przychod");
            tableMapping.ColumnMappings.Add("Rozchod", "Rozchod");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            tableMapping.ColumnMappings.Add("Uwagi", "Uwagi");
            tableMapping.ColumnMappings.Add("Index_finansowy", "Index_finansowy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Ewidencja_ST] WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Ewidencja_ST] ([Id], [Nazwa_przedmiotu], [JM], [Data], [Opis], [Dokument_ksiegowy], [Przychod], [Rozchod], [Stan], [Uwagi]) VALUES (@Id, @Nazwa_przedmiotu, @JM, @Data, @Opis, @Dokument_ksiegowy, @Przychod, @Rozchod, @Stan, @Uwagi);
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_ST WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Ewidencja_ST] SET [Id] = @Id, [Nazwa_przedmiotu] = @Nazwa_przedmiotu, [JM] = @JM, [Data] = @Data, [Opis] = @Opis, [Dokument_ksiegowy] = @Dokument_ksiegowy, [Przychod] = @Przychod, [Rozchod] = @Rozchod, [Stan] = @Stan, [Uwagi] = @Uwagi WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan));
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_ST WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod" +
                ", Stan, Uwagi FROM Ewidencja_ST";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.Ewidencja_STDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.Ewidencja_STDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.Ewidencja_STDataTable dataTable = new EwidencjaDataSet.Ewidencja_STDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.Ewidencja_STDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ewidencja_ST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Nazwa_przedmiotu, string Original_JM, string Original_Data, string Original_Dokument_ksiegowy, string Original_Przychod, string Original_Rozchod, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            return this.Update(Original_Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi, Original_Id, Original_Nazwa_przedmiotu, Original_JM, Original_Data, Original_Dokument_ksiegowy, Original_Przychod, Original_Rozchod, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ewidencja_ponizejTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Ewidencja_ponizejTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ewidencja_ponizej";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Nazwa_przedmiotu", "Nazwa_przedmiotu");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Data", "Data");
            tableMapping.ColumnMappings.Add("Opis", "Opis");
            tableMapping.ColumnMappings.Add("Dokument_ksiegowy", "Dokument_ksiegowy");
            tableMapping.ColumnMappings.Add("Przychod", "Przychod");
            tableMapping.ColumnMappings.Add("Rozchod", "Rozchod");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            tableMapping.ColumnMappings.Add("Uwagi", "Uwagi");
            tableMapping.ColumnMappings.Add("Index_finansowy", "Index_finansowy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Ewidencja_ponizej] WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Ewidencja_ponizej] ([Id], [Nazwa_przedmiotu], [JM], [Data], [Opis], [Dokument_ksiegowy], [Przychod], [Rozchod], [Stan], [Uwagi]) VALUES (@Id, @Nazwa_przedmiotu, @JM, @Data, @Opis, @Dokument_ksiegowy, @Przychod, @Rozchod, @Stan, @Uwagi);
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_ponizej WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Ewidencja_ponizej] SET [Id] = @Id, [Nazwa_przedmiotu] = @Nazwa_przedmiotu, [JM] = @JM, [Data] = @Data, [Opis] = @Opis, [Dokument_ksiegowy] = @Dokument_ksiegowy, [Przychod] = @Przychod, [Rozchod] = @Rozchod, [Stan] = @Stan, [Uwagi] = @Uwagi WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan));
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_ponizej WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod" +
                ", Stan, Uwagi FROM Ewidencja_ponizej";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.Ewidencja_ponizejDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.Ewidencja_ponizejDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.Ewidencja_ponizejDataTable dataTable = new EwidencjaDataSet.Ewidencja_ponizejDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.Ewidencja_ponizejDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ewidencja_ponizej");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Nazwa_przedmiotu, string Original_JM, string Original_Data, string Original_Dokument_ksiegowy, string Original_Przychod, string Original_Rozchod, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            return this.Update(Original_Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi, Original_Id, Original_Nazwa_przedmiotu, Original_JM, Original_Data, Original_Dokument_ksiegowy, Original_Przychod, Original_Rozchod, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ewidencja_powyzejTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Ewidencja_powyzejTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ewidencja_powyzej";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Nazwa_przedmiotu", "Nazwa_przedmiotu");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Data", "Data");
            tableMapping.ColumnMappings.Add("Opis", "Opis");
            tableMapping.ColumnMappings.Add("Dokument_ksiegowy", "Dokument_ksiegowy");
            tableMapping.ColumnMappings.Add("Przychod", "Przychod");
            tableMapping.ColumnMappings.Add("Rozchod", "Rozchod");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            tableMapping.ColumnMappings.Add("Uwagi", "Uwagi");
            tableMapping.ColumnMappings.Add("Index_finansowy", "Index_finansowy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Ewidencja_powyzej] WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Ewidencja_powyzej] ([Id], [Nazwa_przedmiotu], [JM], [Data], [Opis], [Dokument_ksiegowy], [Przychod], [Rozchod], [Stan], [Uwagi]) VALUES (@Id, @Nazwa_przedmiotu, @JM, @Data, @Opis, @Dokument_ksiegowy, @Przychod, @Rozchod, @Stan, @Uwagi);
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_powyzej WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Ewidencja_powyzej] SET [Id] = @Id, [Nazwa_przedmiotu] = @Nazwa_przedmiotu, [JM] = @JM, [Data] = @Data, [Opis] = @Opis, [Dokument_ksiegowy] = @Dokument_ksiegowy, [Przychod] = @Przychod, [Rozchod] = @Rozchod, [Stan] = @Stan, [Uwagi] = @Uwagi WHERE (([Id] = @Original_Id) AND ([Nazwa_przedmiotu] = @Original_Nazwa_przedmiotu) AND ([JM] = @Original_JM) AND ([Data] = @Original_Data) AND ([Dokument_ksiegowy] = @Original_Dokument_ksiegowy) AND ([Przychod] = @Original_Przychod) AND ([Rozchod] = @Original_Rozchod) AND ([Stan] = @Original_Stan));
SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi FROM Ewidencja_powyzej WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uwagi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uwagi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nazwa_przedmiotu", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwa_przedmiotu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dokument_ksiegowy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dokument_ksiegowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przychod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przychod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rozchod", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rozchod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod" +
                ", Stan, Uwagi FROM Ewidencja_powyzej";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.Ewidencja_powyzejDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.Ewidencja_powyzejDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.Ewidencja_powyzejDataTable dataTable = new EwidencjaDataSet.Ewidencja_powyzejDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.Ewidencja_powyzejDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ewidencja_powyzej");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Nazwa_przedmiotu, string Original_JM, string Original_Data, string Original_Dokument_ksiegowy, string Original_Przychod, string Original_Rozchod, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Nazwa_przedmiotu, string JM, string Data, string Opis, string Dokument_ksiegowy, string Przychod, string Rozchod, string Stan, string Uwagi) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nazwa_przedmiotu));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Data == null)) {
                throw new global::System.ArgumentNullException("Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Data));
            }
            if ((Opis == null)) {
                throw new global::System.ArgumentNullException("Opis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Opis));
            }
            if ((Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dokument_ksiegowy));
            }
            if ((Przychod == null)) {
                throw new global::System.ArgumentNullException("Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Przychod));
            }
            if ((Rozchod == null)) {
                throw new global::System.ArgumentNullException("Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Rozchod));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Stan));
            }
            if ((Uwagi == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Uwagi));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Id));
            if ((Original_Nazwa_przedmiotu == null)) {
                throw new global::System.ArgumentNullException("Original_Nazwa_przedmiotu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Nazwa_przedmiotu));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JM));
            }
            if ((Original_Data == null)) {
                throw new global::System.ArgumentNullException("Original_Data");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Data));
            }
            if ((Original_Dokument_ksiegowy == null)) {
                throw new global::System.ArgumentNullException("Original_Dokument_ksiegowy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Dokument_ksiegowy));
            }
            if ((Original_Przychod == null)) {
                throw new global::System.ArgumentNullException("Original_Przychod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Przychod));
            }
            if ((Original_Rozchod == null)) {
                throw new global::System.ArgumentNullException("Original_Rozchod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Rozchod));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nazwa_przedmiotu, 
                    string JM, 
                    string Data, 
                    string Opis, 
                    string Dokument_ksiegowy, 
                    string Przychod, 
                    string Rozchod, 
                    string Stan, 
                    string Uwagi, 
                    int Original_Id, 
                    string Original_Nazwa_przedmiotu, 
                    string Original_JM, 
                    string Original_Data, 
                    string Original_Dokument_ksiegowy, 
                    string Original_Przychod, 
                    string Original_Rozchod, 
                    string Original_Stan) {
            return this.Update(Original_Id, Nazwa_przedmiotu, JM, Data, Opis, Dokument_ksiegowy, Przychod, Rozchod, Stan, Uwagi, Original_Id, Original_Nazwa_przedmiotu, Original_JM, Original_Data, Original_Dokument_ksiegowy, Original_Przychod, Original_Rozchod, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PonizejStanOtwarciaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public PonizejStanOtwarciaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PonizejStanOtwarcia";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Rodzaj", "Rodzaj");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Rok", "Rok");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PonizejStanOtwarcia] WHERE (([Id] = @Original_Id) AND ([Rodzaj" +
                "] = @Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND " +
                "([Stan] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PonizejStanOtwarcia] ([Id], [Rodzaj], [JM], [Rok], [Stan]) VAL" +
                "UES (@Id, @Rodzaj, @JM, @Rok, @Stan);\r\nSELECT Id, Rodzaj, JM, Rok, Stan FROM Pon" +
                "izejStanOtwarcia WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PonizejStanOtwarcia] SET [Id] = @Id, [Rodzaj] = @Rodzaj, [JM] = @JM, [Rok] = @Rok, [Stan] = @Stan WHERE (([Id] = @Original_Id) AND ([Rodzaj] = @Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND ([Stan] = @Original_Stan));
SELECT Id, Rodzaj, JM, Rok, Stan FROM PonizejStanOtwarcia WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Rodzaj, JM, Rok, Stan FROM dbo.PonizejStanOtwarcia";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.PonizejStanOtwarciaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.PonizejStanOtwarciaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.PonizejStanOtwarciaDataTable dataTable = new EwidencjaDataSet.PonizejStanOtwarciaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.PonizejStanOtwarciaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PonizejStanOtwarcia");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Rodzaj, string JM, string Rok, string Stan) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Stan));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            return this.Update(Original_Id, Rodzaj, JM, Rok, Stan, Original_Id, Original_Rodzaj, Original_JM, Original_Rok, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PowyzejStanOtwarciaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public PowyzejStanOtwarciaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PowyzejStanOtwarcia";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Rodzaj", "Rodzaj");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Rok", "Rok");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PowyzejStanOtwarcia] WHERE (([Id] = @Original_Id) AND ([Rodzaj" +
                "] = @Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND " +
                "([Stan] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PowyzejStanOtwarcia] ([Id], [Rodzaj], [JM], [Rok], [Stan]) VAL" +
                "UES (@Id, @Rodzaj, @JM, @Rok, @Stan);\r\nSELECT Id, Rodzaj, JM, Rok, Stan FROM Pow" +
                "yzejStanOtwarcia WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PowyzejStanOtwarcia] SET [Id] = @Id, [Rodzaj] = @Rodzaj, [JM] = @JM, [Rok] = @Rok, [Stan] = @Stan WHERE (([Id] = @Original_Id) AND ([Rodzaj] = @Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND ([Stan] = @Original_Stan));
SELECT Id, Rodzaj, JM, Rok, Stan FROM PowyzejStanOtwarcia WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Rodzaj, JM, Rok, Stan FROM dbo.PowyzejStanOtwarcia";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.PowyzejStanOtwarciaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.PowyzejStanOtwarciaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.PowyzejStanOtwarciaDataTable dataTable = new EwidencjaDataSet.PowyzejStanOtwarciaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.PowyzejStanOtwarciaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PowyzejStanOtwarcia");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Rodzaj, string JM, string Rok, string Stan) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Stan));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            return this.Update(Original_Id, Rodzaj, JM, Rok, Stan, Original_Id, Original_Rodzaj, Original_JM, Original_Rok, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StanOtwarciaSTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public StanOtwarciaSTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StanOtwarciaST";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Rodzaj", "Rodzaj");
            tableMapping.ColumnMappings.Add("JM", "JM");
            tableMapping.ColumnMappings.Add("Rok", "Rok");
            tableMapping.ColumnMappings.Add("Stan", "Stan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StanOtwarciaST] WHERE (([Id] = @Original_Id) AND ([Rodzaj] = @" +
                "Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND ([Sta" +
                "n] = @Original_Stan))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StanOtwarciaST] ([Id], [Rodzaj], [JM], [Rok], [Stan]) VALUES (" +
                "@Id, @Rodzaj, @JM, @Rok, @Stan);\r\nSELECT Id, Rodzaj, JM, Rok, Stan FROM StanOtwa" +
                "rciaST WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StanOtwarciaST] SET [Id] = @Id, [Rodzaj] = @Rodzaj, [JM] = @JM, [Rok] = @Rok, [Stan] = @Stan WHERE (([Id] = @Original_Id) AND ([Rodzaj] = @Original_Rodzaj) AND ([JM] = @Original_JM) AND ([Rok] = @Original_Rok) AND ([Stan] = @Original_Stan));
SELECT Id, Rodzaj, JM, Rok, Stan FROM StanOtwarciaST WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JM", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rok", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stan", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Rodzaj, JM, Rok, Stan FROM dbo.StanOtwarciaST";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.StanOtwarciaSTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.StanOtwarciaSTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.StanOtwarciaSTDataTable dataTable = new EwidencjaDataSet.StanOtwarciaSTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.StanOtwarciaSTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StanOtwarciaST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string Rodzaj, string JM, string Rok, string Stan) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Rodzaj));
            }
            if ((JM == null)) {
                throw new global::System.ArgumentNullException("JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JM));
            }
            if ((Rok == null)) {
                throw new global::System.ArgumentNullException("Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Rok));
            }
            if ((Stan == null)) {
                throw new global::System.ArgumentNullException("Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Stan));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            if ((Original_Rodzaj == null)) {
                throw new global::System.ArgumentNullException("Original_Rodzaj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Rodzaj));
            }
            if ((Original_JM == null)) {
                throw new global::System.ArgumentNullException("Original_JM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_JM));
            }
            if ((Original_Rok == null)) {
                throw new global::System.ArgumentNullException("Original_Rok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Rok));
            }
            if ((Original_Stan == null)) {
                throw new global::System.ArgumentNullException("Original_Stan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Stan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Rodzaj, string JM, string Rok, string Stan, int Original_Id, string Original_Rodzaj, string Original_JM, string Original_Rok, string Original_Stan) {
            return this.Update(Original_Id, Rodzaj, JM, Rok, Stan, Original_Id, Original_Rodzaj, Original_JM, Original_Rok, Original_Stan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FakturyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public FakturyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Faktury";
            tableMapping.ColumnMappings.Add("Lp", "Lp");
            tableMapping.ColumnMappings.Add("Miesiac", "Miesiac");
            tableMapping.ColumnMappings.Add("Paragraf", "Paragraf");
            tableMapping.ColumnMappings.Add("Pozycja_paragraf", "Pozycja_paragraf");
            tableMapping.ColumnMappings.Add("Nr_faktury", "Nr_faktury");
            tableMapping.ColumnMappings.Add("Data_faktury", "Data_faktury");
            tableMapping.ColumnMappings.Add("Dostawca", "Dostawca");
            tableMapping.ColumnMappings.Add("Specyfikacja", "Specyfikacja");
            tableMapping.ColumnMappings.Add("Ilosc", "Ilosc");
            tableMapping.ColumnMappings.Add("Jednostka_miary", "Jednostka_miary");
            tableMapping.ColumnMappings.Add("Indeks_finansowy", "Indeks_finansowy");
            tableMapping.ColumnMappings.Add("Rodzaj_ewidencji", "Rodzaj_ewidencji");
            tableMapping.ColumnMappings.Add("Wartosc", "Wartosc");
            tableMapping.ColumnMappings.Add("Termin_platnosci", "Termin_platnosci");
            tableMapping.ColumnMappings.Add("Sposob_zaplaty", "Sposob_zaplaty");
            tableMapping.ColumnMappings.Add("Przekazano_do_DF", "Przekazano_do_DF");
            tableMapping.ColumnMappings.Add("Nazwisko_Imie", "Nazwisko_Imie");
            tableMapping.ColumnMappings.Add("Opis_faktury", "Opis_faktury");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Faktury] WHERE (([Lp] = @Original_Lp) AND ([Miesiac] = @Original_Miesiac) AND ([Paragraf] = @Original_Paragraf) AND ([Pozycja_paragraf] = @Original_Pozycja_paragraf) AND ([Nr_faktury] = @Original_Nr_faktury) AND ([Data_faktury] = @Original_Data_faktury) AND ([Dostawca] = @Original_Dostawca) AND ([Specyfikacja] = @Original_Specyfikacja) AND ([Ilosc] = @Original_Ilosc) AND ([Jednostka_miary] = @Original_Jednostka_miary) AND ((@IsNull_Indeks_finansowy = 1 AND [Indeks_finansowy] IS NULL) OR ([Indeks_finansowy] = @Original_Indeks_finansowy)) AND ((@IsNull_Rodzaj_ewidencji = 1 AND [Rodzaj_ewidencji] IS NULL) OR ([Rodzaj_ewidencji] = @Original_Rodzaj_ewidencji)) AND ([Wartosc] = @Original_Wartosc) AND ([Termin_platnosci] = @Original_Termin_platnosci) AND ([Sposob_zaplaty] = @Original_Sposob_zaplaty) AND ([Przekazano_do_DF] = @Original_Przekazano_do_DF))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Miesiac", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miesiac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paragraf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pozycja_paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pozycja_paragraf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dostawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dostawca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specyfikacja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specyfikacja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ilosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ilosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Jednostka_miary", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Jednostka_miary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodzaj_ewidencji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Termin_platnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_platnosci", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sposob_zaplaty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sposob_zaplaty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przekazano_do_DF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przekazano_do_DF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Faktury] ([Miesiac], [Paragraf], [Pozycja_paragraf], [Nr_faktury], [Data_faktury], [Dostawca], [Specyfikacja], [Ilosc], [Jednostka_miary], [Indeks_finansowy], [Rodzaj_ewidencji], [Wartosc], [Termin_platnosci], [Sposob_zaplaty], [Przekazano_do_DF], [Nazwisko_Imie], [Opis_faktury]) VALUES (@Miesiac, @Paragraf, @Pozycja_paragraf, @Nr_faktury, @Data_faktury, @Dostawca, @Specyfikacja, @Ilosc, @Jednostka_miary, @Indeks_finansowy, @Rodzaj_ewidencji, @Wartosc, @Termin_platnosci, @Sposob_zaplaty, @Przekazano_do_DF, @Nazwisko_Imie, @Opis_faktury);
SELECT Lp, Miesiac, Paragraf, Pozycja_paragraf, Nr_faktury, Data_faktury, Dostawca, Specyfikacja, Ilosc, Jednostka_miary, Indeks_finansowy, Rodzaj_ewidencji, Wartosc, Termin_platnosci, Sposob_zaplaty, Przekazano_do_DF, Nazwisko_Imie, Opis_faktury FROM Faktury WHERE (Lp = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Miesiac", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miesiac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paragraf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pozycja_paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pozycja_paragraf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dostawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dostawca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specyfikacja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specyfikacja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ilosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ilosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Jednostka_miary", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Jednostka_miary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Termin_platnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_platnosci", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sposob_zaplaty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sposob_zaplaty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przekazano_do_DF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przekazano_do_DF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwisko_Imie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwisko_Imie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Faktury] SET [Miesiac] = @Miesiac, [Paragraf] = @Paragraf, [Pozycja" +
                "_paragraf] = @Pozycja_paragraf, [Nr_faktury] = @Nr_faktury, [Data_faktury] = @Da" +
                "ta_faktury, [Dostawca] = @Dostawca, [Specyfikacja] = @Specyfikacja, [Ilosc] = @I" +
                "losc, [Jednostka_miary] = @Jednostka_miary, [Indeks_finansowy] = @Indeks_finanso" +
                "wy, [Rodzaj_ewidencji] = @Rodzaj_ewidencji, [Wartosc] = @Wartosc, [Termin_platno" +
                "sci] = @Termin_platnosci, [Sposob_zaplaty] = @Sposob_zaplaty, [Przekazano_do_DF]" +
                " = @Przekazano_do_DF, [Nazwisko_Imie] = @Nazwisko_Imie, [Opis_faktury] = @Opis_f" +
                "aktury WHERE (([Lp] = @Original_Lp) AND ([Miesiac] = @Original_Miesiac) AND ([Pa" +
                "ragraf] = @Original_Paragraf) AND ([Pozycja_paragraf] = @Original_Pozycja_paragr" +
                "af) AND ([Nr_faktury] = @Original_Nr_faktury) AND ([Data_faktury] = @Original_Da" +
                "ta_faktury) AND ([Dostawca] = @Original_Dostawca) AND ([Specyfikacja] = @Origina" +
                "l_Specyfikacja) AND ([Ilosc] = @Original_Ilosc) AND ([Jednostka_miary] = @Origin" +
                "al_Jednostka_miary) AND ((@IsNull_Indeks_finansowy = 1 AND [Indeks_finansowy] IS" +
                " NULL) OR ([Indeks_finansowy] = @Original_Indeks_finansowy)) AND ((@IsNull_Rodza" +
                "j_ewidencji = 1 AND [Rodzaj_ewidencji] IS NULL) OR ([Rodzaj_ewidencji] = @Origin" +
                "al_Rodzaj_ewidencji)) AND ([Wartosc] = @Original_Wartosc) AND ([Termin_platnosci" +
                "] = @Original_Termin_platnosci) AND ([Sposob_zaplaty] = @Original_Sposob_zaplaty" +
                ") AND ([Przekazano_do_DF] = @Original_Przekazano_do_DF));\r\nSELECT Lp, Miesiac, P" +
                "aragraf, Pozycja_paragraf, Nr_faktury, Data_faktury, Dostawca, Specyfikacja, Ilo" +
                "sc, Jednostka_miary, Indeks_finansowy, Rodzaj_ewidencji, Wartosc, Termin_platnos" +
                "ci, Sposob_zaplaty, Przekazano_do_DF, Nazwisko_Imie, Opis_faktury FROM Faktury W" +
                "HERE (Lp = @Lp)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Miesiac", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miesiac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paragraf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pozycja_paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pozycja_paragraf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Data_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dostawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dostawca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specyfikacja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specyfikacja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ilosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ilosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Jednostka_miary", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Jednostka_miary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Termin_platnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_platnosci", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sposob_zaplaty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sposob_zaplaty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Przekazano_do_DF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przekazano_do_DF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nazwisko_Imie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nazwisko_Imie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opis_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opis_faktury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Miesiac", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miesiac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paragraf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pozycja_paragraf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pozycja_paragraf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nr_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nr_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Data_faktury", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Data_faktury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dostawca", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dostawca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specyfikacja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specyfikacja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ilosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ilosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Jednostka_miary", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Jednostka_miary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Indeks_finansowy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Indeks_finansowy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodzaj_ewidencji", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodzaj_ewidencji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodzaj_ewidencji", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wartosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Termin_platnosci", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Termin_platnosci", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sposob_zaplaty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sposob_zaplaty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Przekazano_do_DF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Przekazano_do_DF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lp", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Lp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EwiInf.Properties.Settings.Default.EwidencjaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Lp, Miesiac, Paragraf, Pozycja_paragraf, Nr_faktury, Data_faktury, Dostawca, Specyfikacja, Ilosc, Jednostka_miary, Indeks_finansowy, Rodzaj_ewidencji, Wartosc, Termin_platnosci, Sposob_zaplaty, Przekazano_do_DF, Nazwisko_Imie, Opis_faktury FROM dbo.Faktury";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EwidencjaDataSet.FakturyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EwidencjaDataSet.FakturyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EwidencjaDataSet.FakturyDataTable dataTable = new EwidencjaDataSet.FakturyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet.FakturyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EwidencjaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Faktury");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Lp, 
                    string Original_Miesiac, 
                    int Original_Paragraf, 
                    int Original_Pozycja_paragraf, 
                    string Original_Nr_faktury, 
                    string Original_Data_faktury, 
                    string Original_Dostawca, 
                    string Original_Specyfikacja, 
                    int Original_Ilosc, 
                    string Original_Jednostka_miary, 
                    global::System.Nullable<int> Original_Indeks_finansowy, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Wartosc, 
                    string Original_Termin_platnosci, 
                    string Original_Sposob_zaplaty, 
                    string Original_Przekazano_do_DF) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Lp));
            if ((Original_Miesiac == null)) {
                throw new global::System.ArgumentNullException("Original_Miesiac");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Miesiac));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Paragraf));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Pozycja_paragraf));
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Data_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Data_faktury");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Data_faktury));
            }
            if ((Original_Dostawca == null)) {
                throw new global::System.ArgumentNullException("Original_Dostawca");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Dostawca));
            }
            if ((Original_Specyfikacja == null)) {
                throw new global::System.ArgumentNullException("Original_Specyfikacja");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Specyfikacja));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Ilosc));
            if ((Original_Jednostka_miary == null)) {
                throw new global::System.ArgumentNullException("Original_Jednostka_miary");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Jednostka_miary));
            }
            if ((Original_Indeks_finansowy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Indeks_finansowy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Wartosc == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Wartosc));
            }
            if ((Original_Termin_platnosci == null)) {
                throw new global::System.ArgumentNullException("Original_Termin_platnosci");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Termin_platnosci));
            }
            if ((Original_Sposob_zaplaty == null)) {
                throw new global::System.ArgumentNullException("Original_Sposob_zaplaty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Sposob_zaplaty));
            }
            if ((Original_Przekazano_do_DF == null)) {
                throw new global::System.ArgumentNullException("Original_Przekazano_do_DF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Przekazano_do_DF));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Miesiac, 
                    int Paragraf, 
                    int Pozycja_paragraf, 
                    string Nr_faktury, 
                    string Data_faktury, 
                    string Dostawca, 
                    string Specyfikacja, 
                    int Ilosc, 
                    string Jednostka_miary, 
                    global::System.Nullable<int> Indeks_finansowy, 
                    string Rodzaj_ewidencji, 
                    string Wartosc, 
                    string Termin_platnosci, 
                    string Sposob_zaplaty, 
                    string Przekazano_do_DF, 
                    string Nazwisko_Imie, 
                    string Opis_faktury) {
            if ((Miesiac == null)) {
                throw new global::System.ArgumentNullException("Miesiac");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Miesiac));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Paragraf));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Pozycja_paragraf));
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Nr_faktury));
            }
            if ((Data_faktury == null)) {
                throw new global::System.ArgumentNullException("Data_faktury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Data_faktury));
            }
            if ((Dostawca == null)) {
                throw new global::System.ArgumentNullException("Dostawca");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dostawca));
            }
            if ((Specyfikacja == null)) {
                throw new global::System.ArgumentNullException("Specyfikacja");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Specyfikacja));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Ilosc));
            if ((Jednostka_miary == null)) {
                throw new global::System.ArgumentNullException("Jednostka_miary");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Jednostka_miary));
            }
            if ((Indeks_finansowy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Indeks_finansowy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Rodzaj_ewidencji == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Wartosc == null)) {
                throw new global::System.ArgumentNullException("Wartosc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Wartosc));
            }
            if ((Termin_platnosci == null)) {
                throw new global::System.ArgumentNullException("Termin_platnosci");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Termin_platnosci));
            }
            if ((Sposob_zaplaty == null)) {
                throw new global::System.ArgumentNullException("Sposob_zaplaty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Sposob_zaplaty));
            }
            if ((Przekazano_do_DF == null)) {
                throw new global::System.ArgumentNullException("Przekazano_do_DF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Przekazano_do_DF));
            }
            if ((Nazwisko_Imie == null)) {
                throw new global::System.ArgumentNullException("Nazwisko_Imie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Nazwisko_Imie));
            }
            if ((Opis_faktury == null)) {
                throw new global::System.ArgumentNullException("Opis_faktury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Opis_faktury));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Miesiac, 
                    int Paragraf, 
                    int Pozycja_paragraf, 
                    string Nr_faktury, 
                    string Data_faktury, 
                    string Dostawca, 
                    string Specyfikacja, 
                    int Ilosc, 
                    string Jednostka_miary, 
                    global::System.Nullable<int> Indeks_finansowy, 
                    string Rodzaj_ewidencji, 
                    string Wartosc, 
                    string Termin_platnosci, 
                    string Sposob_zaplaty, 
                    string Przekazano_do_DF, 
                    string Nazwisko_Imie, 
                    string Opis_faktury, 
                    int Original_Lp, 
                    string Original_Miesiac, 
                    int Original_Paragraf, 
                    int Original_Pozycja_paragraf, 
                    string Original_Nr_faktury, 
                    string Original_Data_faktury, 
                    string Original_Dostawca, 
                    string Original_Specyfikacja, 
                    int Original_Ilosc, 
                    string Original_Jednostka_miary, 
                    global::System.Nullable<int> Original_Indeks_finansowy, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Wartosc, 
                    string Original_Termin_platnosci, 
                    string Original_Sposob_zaplaty, 
                    string Original_Przekazano_do_DF, 
                    int Lp) {
            if ((Miesiac == null)) {
                throw new global::System.ArgumentNullException("Miesiac");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Miesiac));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Paragraf));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Pozycja_paragraf));
            if ((Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Nr_faktury));
            }
            if ((Data_faktury == null)) {
                throw new global::System.ArgumentNullException("Data_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Data_faktury));
            }
            if ((Dostawca == null)) {
                throw new global::System.ArgumentNullException("Dostawca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dostawca));
            }
            if ((Specyfikacja == null)) {
                throw new global::System.ArgumentNullException("Specyfikacja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Specyfikacja));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Ilosc));
            if ((Jednostka_miary == null)) {
                throw new global::System.ArgumentNullException("Jednostka_miary");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Jednostka_miary));
            }
            if ((Indeks_finansowy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Indeks_finansowy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Rodzaj_ewidencji == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Rodzaj_ewidencji));
            }
            if ((Wartosc == null)) {
                throw new global::System.ArgumentNullException("Wartosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Wartosc));
            }
            if ((Termin_platnosci == null)) {
                throw new global::System.ArgumentNullException("Termin_platnosci");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Termin_platnosci));
            }
            if ((Sposob_zaplaty == null)) {
                throw new global::System.ArgumentNullException("Sposob_zaplaty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Sposob_zaplaty));
            }
            if ((Przekazano_do_DF == null)) {
                throw new global::System.ArgumentNullException("Przekazano_do_DF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Przekazano_do_DF));
            }
            if ((Nazwisko_Imie == null)) {
                throw new global::System.ArgumentNullException("Nazwisko_Imie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Nazwisko_Imie));
            }
            if ((Opis_faktury == null)) {
                throw new global::System.ArgumentNullException("Opis_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Opis_faktury));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Lp));
            if ((Original_Miesiac == null)) {
                throw new global::System.ArgumentNullException("Original_Miesiac");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Miesiac));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Paragraf));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Pozycja_paragraf));
            if ((Original_Nr_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Nr_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Nr_faktury));
            }
            if ((Original_Data_faktury == null)) {
                throw new global::System.ArgumentNullException("Original_Data_faktury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Data_faktury));
            }
            if ((Original_Dostawca == null)) {
                throw new global::System.ArgumentNullException("Original_Dostawca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Dostawca));
            }
            if ((Original_Specyfikacja == null)) {
                throw new global::System.ArgumentNullException("Original_Specyfikacja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Specyfikacja));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_Ilosc));
            if ((Original_Jednostka_miary == null)) {
                throw new global::System.ArgumentNullException("Original_Jednostka_miary");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Jednostka_miary));
            }
            if ((Original_Indeks_finansowy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Indeks_finansowy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Rodzaj_ewidencji == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Rodzaj_ewidencji));
            }
            if ((Original_Wartosc == null)) {
                throw new global::System.ArgumentNullException("Original_Wartosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Wartosc));
            }
            if ((Original_Termin_platnosci == null)) {
                throw new global::System.ArgumentNullException("Original_Termin_platnosci");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Termin_platnosci));
            }
            if ((Original_Sposob_zaplaty == null)) {
                throw new global::System.ArgumentNullException("Original_Sposob_zaplaty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Sposob_zaplaty));
            }
            if ((Original_Przekazano_do_DF == null)) {
                throw new global::System.ArgumentNullException("Original_Przekazano_do_DF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Przekazano_do_DF));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Lp));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Miesiac, 
                    int Paragraf, 
                    int Pozycja_paragraf, 
                    string Nr_faktury, 
                    string Data_faktury, 
                    string Dostawca, 
                    string Specyfikacja, 
                    int Ilosc, 
                    string Jednostka_miary, 
                    global::System.Nullable<int> Indeks_finansowy, 
                    string Rodzaj_ewidencji, 
                    string Wartosc, 
                    string Termin_platnosci, 
                    string Sposob_zaplaty, 
                    string Przekazano_do_DF, 
                    string Nazwisko_Imie, 
                    string Opis_faktury, 
                    int Original_Lp, 
                    string Original_Miesiac, 
                    int Original_Paragraf, 
                    int Original_Pozycja_paragraf, 
                    string Original_Nr_faktury, 
                    string Original_Data_faktury, 
                    string Original_Dostawca, 
                    string Original_Specyfikacja, 
                    int Original_Ilosc, 
                    string Original_Jednostka_miary, 
                    global::System.Nullable<int> Original_Indeks_finansowy, 
                    string Original_Rodzaj_ewidencji, 
                    string Original_Wartosc, 
                    string Original_Termin_platnosci, 
                    string Original_Sposob_zaplaty, 
                    string Original_Przekazano_do_DF) {
            return this.Update(Miesiac, Paragraf, Pozycja_paragraf, Nr_faktury, Data_faktury, Dostawca, Specyfikacja, Ilosc, Jednostka_miary, Indeks_finansowy, Rodzaj_ewidencji, Wartosc, Termin_platnosci, Sposob_zaplaty, Przekazano_do_DF, Nazwisko_Imie, Opis_faktury, Original_Lp, Original_Miesiac, Original_Paragraf, Original_Pozycja_paragraf, Original_Nr_faktury, Original_Data_faktury, Original_Dostawca, Original_Specyfikacja, Original_Ilosc, Original_Jednostka_miary, Original_Indeks_finansowy, Original_Rodzaj_ewidencji, Original_Wartosc, Original_Termin_platnosci, Original_Sposob_zaplaty, Original_Przekazano_do_DF, Original_Lp);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EwiTableAdapter _ewiTableAdapter;
        
        private HistoryTableAdapter _historyTableAdapter;
        
        private KartaTableAdapter _kartaTableAdapter;
        
        private Karta_konserwacjaTableAdapter _karta_konserwacjaTableAdapter;
        
        private Karta_naprawyTableAdapter _karta_naprawyTableAdapter;
        
        private Ewidencja_STTableAdapter _ewidencja_STTableAdapter;
        
        private Ewidencja_ponizejTableAdapter _ewidencja_ponizejTableAdapter;
        
        private Ewidencja_powyzejTableAdapter _ewidencja_powyzejTableAdapter;
        
        private PonizejStanOtwarciaTableAdapter _ponizejStanOtwarciaTableAdapter;
        
        private PowyzejStanOtwarciaTableAdapter _powyzejStanOtwarciaTableAdapter;
        
        private StanOtwarciaSTTableAdapter _stanOtwarciaSTTableAdapter;
        
        private FakturyTableAdapter _fakturyTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EwiTableAdapter EwiTableAdapter {
            get {
                return this._ewiTableAdapter;
            }
            set {
                this._ewiTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HistoryTableAdapter HistoryTableAdapter {
            get {
                return this._historyTableAdapter;
            }
            set {
                this._historyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public KartaTableAdapter KartaTableAdapter {
            get {
                return this._kartaTableAdapter;
            }
            set {
                this._kartaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Karta_konserwacjaTableAdapter Karta_konserwacjaTableAdapter {
            get {
                return this._karta_konserwacjaTableAdapter;
            }
            set {
                this._karta_konserwacjaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Karta_naprawyTableAdapter Karta_naprawyTableAdapter {
            get {
                return this._karta_naprawyTableAdapter;
            }
            set {
                this._karta_naprawyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ewidencja_STTableAdapter Ewidencja_STTableAdapter {
            get {
                return this._ewidencja_STTableAdapter;
            }
            set {
                this._ewidencja_STTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ewidencja_ponizejTableAdapter Ewidencja_ponizejTableAdapter {
            get {
                return this._ewidencja_ponizejTableAdapter;
            }
            set {
                this._ewidencja_ponizejTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ewidencja_powyzejTableAdapter Ewidencja_powyzejTableAdapter {
            get {
                return this._ewidencja_powyzejTableAdapter;
            }
            set {
                this._ewidencja_powyzejTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PonizejStanOtwarciaTableAdapter PonizejStanOtwarciaTableAdapter {
            get {
                return this._ponizejStanOtwarciaTableAdapter;
            }
            set {
                this._ponizejStanOtwarciaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PowyzejStanOtwarciaTableAdapter PowyzejStanOtwarciaTableAdapter {
            get {
                return this._powyzejStanOtwarciaTableAdapter;
            }
            set {
                this._powyzejStanOtwarciaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StanOtwarciaSTTableAdapter StanOtwarciaSTTableAdapter {
            get {
                return this._stanOtwarciaSTTableAdapter;
            }
            set {
                this._stanOtwarciaSTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FakturyTableAdapter FakturyTableAdapter {
            get {
                return this._fakturyTableAdapter;
            }
            set {
                this._fakturyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._ewiTableAdapter != null) 
                            && (this._ewiTableAdapter.Connection != null))) {
                    return this._ewiTableAdapter.Connection;
                }
                if (((this._historyTableAdapter != null) 
                            && (this._historyTableAdapter.Connection != null))) {
                    return this._historyTableAdapter.Connection;
                }
                if (((this._kartaTableAdapter != null) 
                            && (this._kartaTableAdapter.Connection != null))) {
                    return this._kartaTableAdapter.Connection;
                }
                if (((this._karta_konserwacjaTableAdapter != null) 
                            && (this._karta_konserwacjaTableAdapter.Connection != null))) {
                    return this._karta_konserwacjaTableAdapter.Connection;
                }
                if (((this._karta_naprawyTableAdapter != null) 
                            && (this._karta_naprawyTableAdapter.Connection != null))) {
                    return this._karta_naprawyTableAdapter.Connection;
                }
                if (((this._ewidencja_STTableAdapter != null) 
                            && (this._ewidencja_STTableAdapter.Connection != null))) {
                    return this._ewidencja_STTableAdapter.Connection;
                }
                if (((this._ewidencja_ponizejTableAdapter != null) 
                            && (this._ewidencja_ponizejTableAdapter.Connection != null))) {
                    return this._ewidencja_ponizejTableAdapter.Connection;
                }
                if (((this._ewidencja_powyzejTableAdapter != null) 
                            && (this._ewidencja_powyzejTableAdapter.Connection != null))) {
                    return this._ewidencja_powyzejTableAdapter.Connection;
                }
                if (((this._ponizejStanOtwarciaTableAdapter != null) 
                            && (this._ponizejStanOtwarciaTableAdapter.Connection != null))) {
                    return this._ponizejStanOtwarciaTableAdapter.Connection;
                }
                if (((this._powyzejStanOtwarciaTableAdapter != null) 
                            && (this._powyzejStanOtwarciaTableAdapter.Connection != null))) {
                    return this._powyzejStanOtwarciaTableAdapter.Connection;
                }
                if (((this._stanOtwarciaSTTableAdapter != null) 
                            && (this._stanOtwarciaSTTableAdapter.Connection != null))) {
                    return this._stanOtwarciaSTTableAdapter.Connection;
                }
                if (((this._fakturyTableAdapter != null) 
                            && (this._fakturyTableAdapter.Connection != null))) {
                    return this._fakturyTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._ewiTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._historyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._kartaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._karta_konserwacjaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._karta_naprawyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ewidencja_STTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ewidencja_ponizejTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ewidencja_powyzejTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stanOtwarciaSTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fakturyTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(EwidencjaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ewiTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ewi.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ewiTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.History.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._kartaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Karta.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kartaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._karta_konserwacjaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Karta_konserwacja.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._karta_konserwacjaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._karta_naprawyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Karta_naprawy.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._karta_naprawyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ewidencja_STTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ewidencja_ST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ewidencja_STTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ewidencja_ponizejTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ewidencja_ponizej.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ewidencja_ponizejTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ewidencja_powyzejTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ewidencja_powyzej.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ewidencja_powyzejTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PonizejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ponizejStanOtwarciaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PowyzejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._powyzejStanOtwarciaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stanOtwarciaSTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StanOtwarciaST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stanOtwarciaSTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fakturyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Faktury.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fakturyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(EwidencjaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ewiTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ewi.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ewiTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.History.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._kartaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Karta.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kartaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._karta_konserwacjaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Karta_konserwacja.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._karta_konserwacjaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._karta_naprawyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Karta_naprawy.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._karta_naprawyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ewidencja_STTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ewidencja_ST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ewidencja_STTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ewidencja_ponizejTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ewidencja_ponizej.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ewidencja_ponizejTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ewidencja_powyzejTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ewidencja_powyzej.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ewidencja_powyzejTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PonizejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ponizejStanOtwarciaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PowyzejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._powyzejStanOtwarciaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stanOtwarciaSTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StanOtwarciaST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stanOtwarciaSTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fakturyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Faktury.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fakturyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(EwidencjaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fakturyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Faktury.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fakturyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stanOtwarciaSTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StanOtwarciaST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stanOtwarciaSTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PowyzejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._powyzejStanOtwarciaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PonizejStanOtwarcia.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ponizejStanOtwarciaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ewidencja_powyzejTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ewidencja_powyzej.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ewidencja_powyzejTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ewidencja_ponizejTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ewidencja_ponizej.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ewidencja_ponizejTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ewidencja_STTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ewidencja_ST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ewidencja_STTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._karta_naprawyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Karta_naprawy.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._karta_naprawyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._karta_konserwacjaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Karta_konserwacja.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._karta_konserwacjaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._kartaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Karta.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kartaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.History.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ewiTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ewi.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ewiTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(EwidencjaDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._ewiTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ewiTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._historyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._historyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._kartaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kartaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._karta_konserwacjaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._karta_konserwacjaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._karta_naprawyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._karta_naprawyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._ewidencja_STTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ewidencja_STTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._ewidencja_ponizejTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ewidencja_ponizejTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._ewidencja_powyzejTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ewidencja_powyzejTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._ponizejStanOtwarciaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ponizejStanOtwarciaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._powyzejStanOtwarciaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._powyzejStanOtwarciaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._stanOtwarciaSTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stanOtwarciaSTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            if (((this._fakturyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fakturyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("Obiekt TableAdapterManager nie zawiera informacji o połączeniu. Ustaw dla każdej " +
                        "właściwości TableAdapter obiektu TableAdapterManager prawidłowe wystąpienie obie" +
                        "ktu TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Nie można rozpocząć transakcji. Bieżące połączenie danych nie obsługuje transakcj" +
                        "i lub bieżący stan nie pozwala na rozpoczęcie transakcji.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._ewiTableAdapter != null)) {
                    revertConnections.Add(this._ewiTableAdapter, this._ewiTableAdapter.Connection);
                    this._ewiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ewiTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ewiTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ewiTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ewiTableAdapter.Adapter);
                    }
                }
                if ((this._historyTableAdapter != null)) {
                    revertConnections.Add(this._historyTableAdapter, this._historyTableAdapter.Connection);
                    this._historyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._historyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._historyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._historyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._historyTableAdapter.Adapter);
                    }
                }
                if ((this._kartaTableAdapter != null)) {
                    revertConnections.Add(this._kartaTableAdapter, this._kartaTableAdapter.Connection);
                    this._kartaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._kartaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._kartaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kartaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kartaTableAdapter.Adapter);
                    }
                }
                if ((this._karta_konserwacjaTableAdapter != null)) {
                    revertConnections.Add(this._karta_konserwacjaTableAdapter, this._karta_konserwacjaTableAdapter.Connection);
                    this._karta_konserwacjaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._karta_konserwacjaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._karta_konserwacjaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._karta_konserwacjaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._karta_konserwacjaTableAdapter.Adapter);
                    }
                }
                if ((this._karta_naprawyTableAdapter != null)) {
                    revertConnections.Add(this._karta_naprawyTableAdapter, this._karta_naprawyTableAdapter.Connection);
                    this._karta_naprawyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._karta_naprawyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._karta_naprawyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._karta_naprawyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._karta_naprawyTableAdapter.Adapter);
                    }
                }
                if ((this._ewidencja_STTableAdapter != null)) {
                    revertConnections.Add(this._ewidencja_STTableAdapter, this._ewidencja_STTableAdapter.Connection);
                    this._ewidencja_STTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ewidencja_STTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ewidencja_STTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ewidencja_STTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ewidencja_STTableAdapter.Adapter);
                    }
                }
                if ((this._ewidencja_ponizejTableAdapter != null)) {
                    revertConnections.Add(this._ewidencja_ponizejTableAdapter, this._ewidencja_ponizejTableAdapter.Connection);
                    this._ewidencja_ponizejTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ewidencja_ponizejTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ewidencja_ponizejTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ewidencja_ponizejTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ewidencja_ponizejTableAdapter.Adapter);
                    }
                }
                if ((this._ewidencja_powyzejTableAdapter != null)) {
                    revertConnections.Add(this._ewidencja_powyzejTableAdapter, this._ewidencja_powyzejTableAdapter.Connection);
                    this._ewidencja_powyzejTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ewidencja_powyzejTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ewidencja_powyzejTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ewidencja_powyzejTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ewidencja_powyzejTableAdapter.Adapter);
                    }
                }
                if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                    revertConnections.Add(this._ponizejStanOtwarciaTableAdapter, this._ponizejStanOtwarciaTableAdapter.Connection);
                    this._ponizejStanOtwarciaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ponizejStanOtwarciaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ponizejStanOtwarciaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ponizejStanOtwarciaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ponizejStanOtwarciaTableAdapter.Adapter);
                    }
                }
                if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                    revertConnections.Add(this._powyzejStanOtwarciaTableAdapter, this._powyzejStanOtwarciaTableAdapter.Connection);
                    this._powyzejStanOtwarciaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._powyzejStanOtwarciaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._powyzejStanOtwarciaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._powyzejStanOtwarciaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._powyzejStanOtwarciaTableAdapter.Adapter);
                    }
                }
                if ((this._stanOtwarciaSTTableAdapter != null)) {
                    revertConnections.Add(this._stanOtwarciaSTTableAdapter, this._stanOtwarciaSTTableAdapter.Connection);
                    this._stanOtwarciaSTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stanOtwarciaSTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stanOtwarciaSTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stanOtwarciaSTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stanOtwarciaSTTableAdapter.Adapter);
                    }
                }
                if ((this._fakturyTableAdapter != null)) {
                    revertConnections.Add(this._fakturyTableAdapter, this._fakturyTableAdapter.Connection);
                    this._fakturyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fakturyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fakturyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fakturyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fakturyTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._ewiTableAdapter != null)) {
                    this._ewiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ewiTableAdapter]));
                    this._ewiTableAdapter.Transaction = null;
                }
                if ((this._historyTableAdapter != null)) {
                    this._historyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._historyTableAdapter]));
                    this._historyTableAdapter.Transaction = null;
                }
                if ((this._kartaTableAdapter != null)) {
                    this._kartaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._kartaTableAdapter]));
                    this._kartaTableAdapter.Transaction = null;
                }
                if ((this._karta_konserwacjaTableAdapter != null)) {
                    this._karta_konserwacjaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._karta_konserwacjaTableAdapter]));
                    this._karta_konserwacjaTableAdapter.Transaction = null;
                }
                if ((this._karta_naprawyTableAdapter != null)) {
                    this._karta_naprawyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._karta_naprawyTableAdapter]));
                    this._karta_naprawyTableAdapter.Transaction = null;
                }
                if ((this._ewidencja_STTableAdapter != null)) {
                    this._ewidencja_STTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ewidencja_STTableAdapter]));
                    this._ewidencja_STTableAdapter.Transaction = null;
                }
                if ((this._ewidencja_ponizejTableAdapter != null)) {
                    this._ewidencja_ponizejTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ewidencja_ponizejTableAdapter]));
                    this._ewidencja_ponizejTableAdapter.Transaction = null;
                }
                if ((this._ewidencja_powyzejTableAdapter != null)) {
                    this._ewidencja_powyzejTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ewidencja_powyzejTableAdapter]));
                    this._ewidencja_powyzejTableAdapter.Transaction = null;
                }
                if ((this._ponizejStanOtwarciaTableAdapter != null)) {
                    this._ponizejStanOtwarciaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ponizejStanOtwarciaTableAdapter]));
                    this._ponizejStanOtwarciaTableAdapter.Transaction = null;
                }
                if ((this._powyzejStanOtwarciaTableAdapter != null)) {
                    this._powyzejStanOtwarciaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._powyzejStanOtwarciaTableAdapter]));
                    this._powyzejStanOtwarciaTableAdapter.Transaction = null;
                }
                if ((this._stanOtwarciaSTTableAdapter != null)) {
                    this._stanOtwarciaSTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stanOtwarciaSTTableAdapter]));
                    this._stanOtwarciaSTTableAdapter.Transaction = null;
                }
                if ((this._fakturyTableAdapter != null)) {
                    this._fakturyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fakturyTableAdapter]));
                    this._fakturyTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591